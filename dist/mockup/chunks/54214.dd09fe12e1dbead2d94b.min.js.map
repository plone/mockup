{"version":3,"file":"chunks/54214.dd09fe12e1dbead2d94b.min.js","mappings":"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,CACE,KACA,aAEF,CACE,IACA,cAEF,CACE,IACA,YAEF,CACE,IACA,iBAEF,CACE,KACA,sBAEF,CACE,KACA,cAEF,CACE,KACA,iBAEF,CACE,KACA,qBAEF,CACE,KACA,aAEF,CACE,KACA,aAEF,CACE,KACA,cAEF,CACE,KACA,eAEF,CACE,KACA,cAEF,CACE,KACA,YAEF,CACE,KACA,mBAEF,CACE,KACA,aAEF,CACE,KACA,YAEF,CACE,KACA,eAEF,CACE,KACA,gBAEF,CACE,KACA,uBAEF,CACE,KACA,aAEF,CACE,KACA,gBAEF,CACE,KACA,gBAEF,CACE,KACA,gBAEF,CACE,KACA,aAEF,CACE,KACA,uBAEF,CACE,KACA,iBAEF,CACE,KACA,cAEF,CACE,KACA,qBAEF,CACE,KACA,qBAEF,CACE,KACA,oBAEF,CACE,KACA,cAEF,CACE,KACA,cAEF,CACE,MACA,iBAEF,CACE,MACA,kBAEF,CACE,MACA,2CAEF,CACE,MACA,oCAIN,CACEzE,KAAM,OACNyE,WAAY,CACV,CACE,IACA,kBAEF,CACE,IACA,mBAEF,CACE,KACA,mBAEF,CACE,KACA,kBAEF,CACE,IACA,cAEF,CACE,IACA,cAEF,CACE,KACA,UAEF,CACE,KACA,oBAEF,CACE,KACA,kBAEF,CACE,KACA,oBAEF,CACE,IACA,gBAEF,CACE,IACA,kBAEF,CACE,IACA,uBAIN,CACEzE,KAAM,aACNyE,WAAY,CACV,CACE,KACA,6CAEF,CACE,KACA,8CAEF,CACE,IACA,2BAEF,CACE,IACA,4BAEF,CACE,KACA,8BAEF,CACE,KACA,+BAEF,CACE,KACA,8BAEF,CACE,KACA,+BAEF,CACE,KACA,+BAEF,CACE,KACA,+BAEF,CACE,GACA,kBAEF,CACE,GACA,qBAEF,CACE,KACA,yBAEF,CACE,KACA,4BAEF,CACE,KACA,WAEF,CACE,KACA,WAEF,CACE,IACA,UAEF,CACE,KACA,YAEF,CACE,IACA,iBAEF,CACE,IACA,cAEF,CACE,IACA,aAEF,CACE,IACA,6BAEF,CACE,IACA,wBAEF,CACE,IACA,qBAEF,CACE,IACA,eAEF,CACE,IACA,eAEF,CACE,KACA,cAEF,CACE,IACA,mBAEF,CACE,IACA,iBAEF,CACE,KACA,kBAEF,CACE,IACA,uBAEF,CACE,IACA,mBAEF,CACE,IACA,mBAEF,CACE,IACA,qBAEF,CACE,IACA,wBAEF,CACE,IACA,qBAEF,CACE,IACA,6BAIN,CACEzE,KAAM,eACNyE,WAAY,CACV,CACE,IACA,qBAEF,CACE,KACA,YAEF,CACE,KACA,kBAEF,CACE,KACA,YAEF,CACE,KACA,eAEF,CACE,KACA,cAEF,CACE,KACA,0BAEF,CACE,KACA,mBAEF,CACE,KACA,gBAEF,CACE,KACA,gBAEF,CACE,KACA,cAEF,CACE,KACA,qBAEF,CACE,KACA,sBAEF,CACE,KACA,iBAEF,CACE,KACA,eAEF,CACE,KACA,cAEF,CACE,IACA,YAEF,CACE,KACA,gBAEF,CACE,KACA,SAEF,CACE,KACA,wBAEF,CACE,KACA,WAEF,CACE,KACA,gBAEF,CACE,KACA,YAEF,CACE,KACA,uBAEF,CACE,KACA,qBAEF,CACE,KACA,mBAEF,CACE,KACA,WAIN,CACEzE,KAAM,iBACNyE,WAAY,CACV,CACE,IACA,aAEF,CACE,IACA,aAEF,CACE,IACA,kBAEF,CACE,IACA,aAEF,CACE,IACA,iBAEF,CACE,IACA,kBAEF,CACE,IACA,cAEF,CACE,IACA,eAEF,CACE,IACA,eAEF,CACE,IACA,aAEF,CACE,IACA,aAEF,CACE,IACA,kBAEF,CACE,IACA,iBAEF,CACE,IACA,cAEF,CACE,IACA,aAEF,CACE,IACA,aAEF,CACE,IACA,kBAEF,CACE,IACA,iBAEF,CACE,IACA,cAEF,CACE,IACA,OAEF,CACE,IACA,aAEF,CACE,IACA,aAEF,CACE,IACA,aAEF,CACE,IACA,kBAEF,CACE,IACA,aAEF,CACE,IACA,iBAEF,CACE,IACA,aAEF,CACE,IACA,cAEF,CACE,IACA,eAEF,CACE,IACA,aAEF,CACE,IACA,aAEF,CACE,IACA,aAEF,CACE,IACA,kBAEF,CACE,IACA,iBAEF,CACE,IACA,cAEF,CACE,IACA,aAEF,CACE,IACA,iBAEF,CACE,IACA,cAEF,CACE,IACA,SAEF,CACE,IACA,aAEF,CACE,IACA,aAEF,CACE,IACA,kBAEF,CACE,IACA,aAEF,CACE,IACA,iBAEF,CACE,IACA,kBAEF,CACE,IACA,cAEF,CACE,IACA,eAEF,CACE,IACA,eAEF,CACE,IACA,aAEF,CACE,IACA,aAEF,CACE,IACA,kBAEF,CACE,IACA,iBAEF,CACE,IACA,cAEF,CACE,IACA,aAEF,CACE,IACA,aAEF,CACE,IACA,kBAEF,CACE,IACA,iBAEF,CACE,IACA,cAEF,CACE,IACA,OAEF,CACE,IACA,aAEF,CACE,IACA,aAEF,CACE,IACA,aAEF,CACE,IACA,kBAEF,CACE,IACA,aAEF,CACE,IACA,iBAEF,CACE,IACA,WAEF,CACE,IACA,YAEF,CACE,IACA,eAEF,CACE,IACA,aAEF,CACE,IACA,aAEF,CACE,IACA,aAEF,CACE,IACA,kBAEF,CACE,IACA,iBAEF,CACE,IACA,cAEF,CACE,IACA,aAEF,CACE,IACA,SAEF,CACE,IACA,iBAEF,CACE,IACA,cAEF,CACE,IACA,SAEF,CACE,IACA,QAEF,CACE,IACA,SAEF,CACE,IACA,SAEF,CACE,IACA,WAEF,CACE,IACA,QAEF,CACE,IACA,OAEF,CACE,IACA,SAEF,CACE,IACA,QAEF,CACE,IACA,SAEF,CACE,IACA,UAEF,CACE,IACA,MAEF,CACE,IACA,MAEF,CACE,IACA,MAEF,CACE,IACA,WAEF,CACE,IACA,MAEF,CACE,IACA,OAEF,CACE,IACA,SAEF,CACE,IACA,OAEF,CACE,IACA,WAEF,CACE,IACA,OAEF,CACE,IACA,OAEF,CACE,IACA,OAEF,CACE,IACA,SAEF,CACE,IACA,SAEF,CACE,IACA,QAEF,CACE,IACA,SAEF,CACE,IACA,SAEF,CACE,IACA,WAEF,CACE,IACA,QAEF,CACE,IACA,OAEF,CACE,IACA,SAEF,CACE,IACA,QAEF,CACE,IACA,SAEF,CACE,IACA,UAEF,CACE,IACA,MAEF,CACE,IACA,MAEF,CACE,IACA,MAEF,CACE,IACA,WAEF,CACE,IACA,MAEF,CACE,IACA,OAEF,CACE,IACA,eAEF,CACE,IACA,SAEF,CACE,IACA,OAEF,CACE,IACA,WAEF,CACE,IACA,OAEF,CACE,IACA,OAEF,CACE,IACA,OAEF,CACE,IACA,WAIN,CACEzE,KAAM,UACNyE,WAAY,CACV,CACE,KACA,eAEF,CACE,IACA,aAEF,CACE,KACA,oBAEF,CACE,IACA,yBAEF,CACE,KACA,iBAEF,CACE,KACA,oBAIN,CACEzE,KAAM,SACNyE,WAAY,CACV,CACE,KACA,mBAEF,CACE,KACA,iBAEF,CACE,KACA,oBAEF,CACE,KACA,mBAEF,CACE,KACA,oBAEF,CACE,KACA,mBAEF,CACE,KACA,0BAEF,CACE,KACA,wBAEF,CACE,KACA,2BAEF,CACE,KACA,0BAEF,CACE,KACA,2BAEF,CACE,KACA,aAEF,CACE,KACA,aAEF,CACE,KACA,eAEF,CACE,KACA,mBAEF,CACE,KACA,yBAEF,CACE,KACA,2BAEF,CACE,KACA,gBAEF,CACE,KACA,iBAEF,CACE,KACA,iBAEF,CACE,KACA,gBAEF,CACE,KACA,gBAEF,CACE,KACA,iBAEF,CACE,KACA,cAEF,CACE,KACA,eAEF,CACE,KACA,+BAEF,CACE,KACA,gCAEF,CACE,KACA,WAEF,CACE,KACA,oBAEF,CACE,KACA,mBAEF,CACE,KACA,oBAEF,CACE,KACA,sBAEF,CACE,KACA,YAEF,CACE,KACA,YAEF,CACE,KACA,cAEF,CACE,KACA,yBAEF,CACE,KACA,qBAEF,CACE,KACA,sBAEF,CACE,KACA,0BA+CR,OAAOF,EAAOtB,OAAS,EAAI,CAAC,CACxBjD,KAAM,MACNyE,WAAYpD,EAAKkD,GAAQQ,GAAKA,EAAEN,eAC/BI,OAAON,GAAUA,CAAM,EAgBxBS,EAAOC,IACX,IAAI5F,EAAQ4F,EAOZ,MAAO,CACLpB,IAPU,IACHxE,EAOP6F,IALUxF,IACVL,EAAQK,CAAC,EAKV,E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","sources":["webpack://@plone/mockup/./node_modules/tinymce/plugins/charmap/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 7.2.1 (2024-07-03)\n */\n\n(function () {\n    'use strict';\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const fireInsertCustomChar = (editor, chr) => {\n      return editor.dispatch('insertCustomChar', { chr });\n    };\n\n    const insertChar = (editor, chr) => {\n      const evtChr = fireInsertCustomChar(editor, chr).chr;\n      editor.execCommand('mceInsertContent', false, evtChr);\n    };\n\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const eq = t => a => t === a;\n    const isArray$1 = isType('array');\n    const isNull = eq(null);\n    const isUndefined = eq(undefined);\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isFunction = isSimpleType('function');\n\n    const constant = value => {\n      return () => {\n        return value;\n      };\n    };\n    const never = constant(false);\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const nativePush = Array.prototype.push;\n    const map = (xs, f) => {\n      const len = xs.length;\n      const r = new Array(len);\n      for (let i = 0; i < len; i++) {\n        const x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    const each = (xs, f) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const findUntil = (xs, pred, until) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(x);\n        } else if (until(x, i)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const find = (xs, pred) => {\n      return findUntil(xs, pred, never);\n    };\n    const flatten = xs => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray$1(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    const bind = (xs, f) => flatten(map(xs, f));\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const option = name => editor => editor.options.get(name);\n    const register$2 = editor => {\n      const registerOption = editor.options.register;\n      const charMapProcessor = value => isFunction(value) || isArray$1(value);\n      registerOption('charmap', { processor: charMapProcessor });\n      registerOption('charmap_append', { processor: charMapProcessor });\n    };\n    const getCharMap$1 = option('charmap');\n    const getCharMapAppend = option('charmap_append');\n\n    const isArray = global.isArray;\n    const UserDefined = 'User Defined';\n    const getDefaultCharMap = () => {\n      return [\n        {\n          name: 'Currency',\n          characters: [\n            [\n              36,\n              'dollar sign'\n            ],\n            [\n              162,\n              'cent sign'\n            ],\n            [\n              8364,\n              'euro sign'\n            ],\n            [\n              163,\n              'pound sign'\n            ],\n            [\n              165,\n              'yen sign'\n            ],\n            [\n              164,\n              'currency sign'\n            ],\n            [\n              8352,\n              'euro-currency sign'\n            ],\n            [\n              8353,\n              'colon sign'\n            ],\n            [\n              8354,\n              'cruzeiro sign'\n            ],\n            [\n              8355,\n              'french franc sign'\n            ],\n            [\n              8356,\n              'lira sign'\n            ],\n            [\n              8357,\n              'mill sign'\n            ],\n            [\n              8358,\n              'naira sign'\n            ],\n            [\n              8359,\n              'peseta sign'\n            ],\n            [\n              8360,\n              'rupee sign'\n            ],\n            [\n              8361,\n              'won sign'\n            ],\n            [\n              8362,\n              'new sheqel sign'\n            ],\n            [\n              8363,\n              'dong sign'\n            ],\n            [\n              8365,\n              'kip sign'\n            ],\n            [\n              8366,\n              'tugrik sign'\n            ],\n            [\n              8367,\n              'drachma sign'\n            ],\n            [\n              8368,\n              'german penny symbol'\n            ],\n            [\n              8369,\n              'peso sign'\n            ],\n            [\n              8370,\n              'guarani sign'\n            ],\n            [\n              8371,\n              'austral sign'\n            ],\n            [\n              8372,\n              'hryvnia sign'\n            ],\n            [\n              8373,\n              'cedi sign'\n            ],\n            [\n              8374,\n              'livre tournois sign'\n            ],\n            [\n              8375,\n              'spesmilo sign'\n            ],\n            [\n              8376,\n              'tenge sign'\n            ],\n            [\n              8377,\n              'indian rupee sign'\n            ],\n            [\n              8378,\n              'turkish lira sign'\n            ],\n            [\n              8379,\n              'nordic mark sign'\n            ],\n            [\n              8380,\n              'manat sign'\n            ],\n            [\n              8381,\n              'ruble sign'\n            ],\n            [\n              20870,\n              'yen character'\n            ],\n            [\n              20803,\n              'yuan character'\n            ],\n            [\n              22291,\n              'yuan character, in hong kong and taiwan'\n            ],\n            [\n              22278,\n              'yen/yuan character variant one'\n            ]\n          ]\n        },\n        {\n          name: 'Text',\n          characters: [\n            [\n              169,\n              'copyright sign'\n            ],\n            [\n              174,\n              'registered sign'\n            ],\n            [\n              8482,\n              'trade mark sign'\n            ],\n            [\n              8240,\n              'per mille sign'\n            ],\n            [\n              181,\n              'micro sign'\n            ],\n            [\n              183,\n              'middle dot'\n            ],\n            [\n              8226,\n              'bullet'\n            ],\n            [\n              8230,\n              'three dot leader'\n            ],\n            [\n              8242,\n              'minutes / feet'\n            ],\n            [\n              8243,\n              'seconds / inches'\n            ],\n            [\n              167,\n              'section sign'\n            ],\n            [\n              182,\n              'paragraph sign'\n            ],\n            [\n              223,\n              'sharp s / ess-zed'\n            ]\n          ]\n        },\n        {\n          name: 'Quotations',\n          characters: [\n            [\n              8249,\n              'single left-pointing angle quotation mark'\n            ],\n            [\n              8250,\n              'single right-pointing angle quotation mark'\n            ],\n            [\n              171,\n              'left pointing guillemet'\n            ],\n            [\n              187,\n              'right pointing guillemet'\n            ],\n            [\n              8216,\n              'left single quotation mark'\n            ],\n            [\n              8217,\n              'right single quotation mark'\n            ],\n            [\n              8220,\n              'left double quotation mark'\n            ],\n            [\n              8221,\n              'right double quotation mark'\n            ],\n            [\n              8218,\n              'single low-9 quotation mark'\n            ],\n            [\n              8222,\n              'double low-9 quotation mark'\n            ],\n            [\n              60,\n              'less-than sign'\n            ],\n            [\n              62,\n              'greater-than sign'\n            ],\n            [\n              8804,\n              'less-than or equal to'\n            ],\n            [\n              8805,\n              'greater-than or equal to'\n            ],\n            [\n              8211,\n              'en dash'\n            ],\n            [\n              8212,\n              'em dash'\n            ],\n            [\n              175,\n              'macron'\n            ],\n            [\n              8254,\n              'overline'\n            ],\n            [\n              164,\n              'currency sign'\n            ],\n            [\n              166,\n              'broken bar'\n            ],\n            [\n              168,\n              'diaeresis'\n            ],\n            [\n              161,\n              'inverted exclamation mark'\n            ],\n            [\n              191,\n              'turned question mark'\n            ],\n            [\n              710,\n              'circumflex accent'\n            ],\n            [\n              732,\n              'small tilde'\n            ],\n            [\n              176,\n              'degree sign'\n            ],\n            [\n              8722,\n              'minus sign'\n            ],\n            [\n              177,\n              'plus-minus sign'\n            ],\n            [\n              247,\n              'division sign'\n            ],\n            [\n              8260,\n              'fraction slash'\n            ],\n            [\n              215,\n              'multiplication sign'\n            ],\n            [\n              185,\n              'superscript one'\n            ],\n            [\n              178,\n              'superscript two'\n            ],\n            [\n              179,\n              'superscript three'\n            ],\n            [\n              188,\n              'fraction one quarter'\n            ],\n            [\n              189,\n              'fraction one half'\n            ],\n            [\n              190,\n              'fraction three quarters'\n            ]\n          ]\n        },\n        {\n          name: 'Mathematical',\n          characters: [\n            [\n              402,\n              'function / florin'\n            ],\n            [\n              8747,\n              'integral'\n            ],\n            [\n              8721,\n              'n-ary sumation'\n            ],\n            [\n              8734,\n              'infinity'\n            ],\n            [\n              8730,\n              'square root'\n            ],\n            [\n              8764,\n              'similar to'\n            ],\n            [\n              8773,\n              'approximately equal to'\n            ],\n            [\n              8776,\n              'almost equal to'\n            ],\n            [\n              8800,\n              'not equal to'\n            ],\n            [\n              8801,\n              'identical to'\n            ],\n            [\n              8712,\n              'element of'\n            ],\n            [\n              8713,\n              'not an element of'\n            ],\n            [\n              8715,\n              'contains as member'\n            ],\n            [\n              8719,\n              'n-ary product'\n            ],\n            [\n              8743,\n              'logical and'\n            ],\n            [\n              8744,\n              'logical or'\n            ],\n            [\n              172,\n              'not sign'\n            ],\n            [\n              8745,\n              'intersection'\n            ],\n            [\n              8746,\n              'union'\n            ],\n            [\n              8706,\n              'partial differential'\n            ],\n            [\n              8704,\n              'for all'\n            ],\n            [\n              8707,\n              'there exists'\n            ],\n            [\n              8709,\n              'diameter'\n            ],\n            [\n              8711,\n              'backward difference'\n            ],\n            [\n              8727,\n              'asterisk operator'\n            ],\n            [\n              8733,\n              'proportional to'\n            ],\n            [\n              8736,\n              'angle'\n            ]\n          ]\n        },\n        {\n          name: 'Extended Latin',\n          characters: [\n            [\n              192,\n              'A - grave'\n            ],\n            [\n              193,\n              'A - acute'\n            ],\n            [\n              194,\n              'A - circumflex'\n            ],\n            [\n              195,\n              'A - tilde'\n            ],\n            [\n              196,\n              'A - diaeresis'\n            ],\n            [\n              197,\n              'A - ring above'\n            ],\n            [\n              256,\n              'A - macron'\n            ],\n            [\n              198,\n              'ligature AE'\n            ],\n            [\n              199,\n              'C - cedilla'\n            ],\n            [\n              200,\n              'E - grave'\n            ],\n            [\n              201,\n              'E - acute'\n            ],\n            [\n              202,\n              'E - circumflex'\n            ],\n            [\n              203,\n              'E - diaeresis'\n            ],\n            [\n              274,\n              'E - macron'\n            ],\n            [\n              204,\n              'I - grave'\n            ],\n            [\n              205,\n              'I - acute'\n            ],\n            [\n              206,\n              'I - circumflex'\n            ],\n            [\n              207,\n              'I - diaeresis'\n            ],\n            [\n              298,\n              'I - macron'\n            ],\n            [\n              208,\n              'ETH'\n            ],\n            [\n              209,\n              'N - tilde'\n            ],\n            [\n              210,\n              'O - grave'\n            ],\n            [\n              211,\n              'O - acute'\n            ],\n            [\n              212,\n              'O - circumflex'\n            ],\n            [\n              213,\n              'O - tilde'\n            ],\n            [\n              214,\n              'O - diaeresis'\n            ],\n            [\n              216,\n              'O - slash'\n            ],\n            [\n              332,\n              'O - macron'\n            ],\n            [\n              338,\n              'ligature OE'\n            ],\n            [\n              352,\n              'S - caron'\n            ],\n            [\n              217,\n              'U - grave'\n            ],\n            [\n              218,\n              'U - acute'\n            ],\n            [\n              219,\n              'U - circumflex'\n            ],\n            [\n              220,\n              'U - diaeresis'\n            ],\n            [\n              362,\n              'U - macron'\n            ],\n            [\n              221,\n              'Y - acute'\n            ],\n            [\n              376,\n              'Y - diaeresis'\n            ],\n            [\n              562,\n              'Y - macron'\n            ],\n            [\n              222,\n              'THORN'\n            ],\n            [\n              224,\n              'a - grave'\n            ],\n            [\n              225,\n              'a - acute'\n            ],\n            [\n              226,\n              'a - circumflex'\n            ],\n            [\n              227,\n              'a - tilde'\n            ],\n            [\n              228,\n              'a - diaeresis'\n            ],\n            [\n              229,\n              'a - ring above'\n            ],\n            [\n              257,\n              'a - macron'\n            ],\n            [\n              230,\n              'ligature ae'\n            ],\n            [\n              231,\n              'c - cedilla'\n            ],\n            [\n              232,\n              'e - grave'\n            ],\n            [\n              233,\n              'e - acute'\n            ],\n            [\n              234,\n              'e - circumflex'\n            ],\n            [\n              235,\n              'e - diaeresis'\n            ],\n            [\n              275,\n              'e - macron'\n            ],\n            [\n              236,\n              'i - grave'\n            ],\n            [\n              237,\n              'i - acute'\n            ],\n            [\n              238,\n              'i - circumflex'\n            ],\n            [\n              239,\n              'i - diaeresis'\n            ],\n            [\n              299,\n              'i - macron'\n            ],\n            [\n              240,\n              'eth'\n            ],\n            [\n              241,\n              'n - tilde'\n            ],\n            [\n              242,\n              'o - grave'\n            ],\n            [\n              243,\n              'o - acute'\n            ],\n            [\n              244,\n              'o - circumflex'\n            ],\n            [\n              245,\n              'o - tilde'\n            ],\n            [\n              246,\n              'o - diaeresis'\n            ],\n            [\n              248,\n              'o slash'\n            ],\n            [\n              333,\n              'o macron'\n            ],\n            [\n              339,\n              'ligature oe'\n            ],\n            [\n              353,\n              's - caron'\n            ],\n            [\n              249,\n              'u - grave'\n            ],\n            [\n              250,\n              'u - acute'\n            ],\n            [\n              251,\n              'u - circumflex'\n            ],\n            [\n              252,\n              'u - diaeresis'\n            ],\n            [\n              363,\n              'u - macron'\n            ],\n            [\n              253,\n              'y - acute'\n            ],\n            [\n              254,\n              'thorn'\n            ],\n            [\n              255,\n              'y - diaeresis'\n            ],\n            [\n              563,\n              'y - macron'\n            ],\n            [\n              913,\n              'Alpha'\n            ],\n            [\n              914,\n              'Beta'\n            ],\n            [\n              915,\n              'Gamma'\n            ],\n            [\n              916,\n              'Delta'\n            ],\n            [\n              917,\n              'Epsilon'\n            ],\n            [\n              918,\n              'Zeta'\n            ],\n            [\n              919,\n              'Eta'\n            ],\n            [\n              920,\n              'Theta'\n            ],\n            [\n              921,\n              'Iota'\n            ],\n            [\n              922,\n              'Kappa'\n            ],\n            [\n              923,\n              'Lambda'\n            ],\n            [\n              924,\n              'Mu'\n            ],\n            [\n              925,\n              'Nu'\n            ],\n            [\n              926,\n              'Xi'\n            ],\n            [\n              927,\n              'Omicron'\n            ],\n            [\n              928,\n              'Pi'\n            ],\n            [\n              929,\n              'Rho'\n            ],\n            [\n              931,\n              'Sigma'\n            ],\n            [\n              932,\n              'Tau'\n            ],\n            [\n              933,\n              'Upsilon'\n            ],\n            [\n              934,\n              'Phi'\n            ],\n            [\n              935,\n              'Chi'\n            ],\n            [\n              936,\n              'Psi'\n            ],\n            [\n              937,\n              'Omega'\n            ],\n            [\n              945,\n              'alpha'\n            ],\n            [\n              946,\n              'beta'\n            ],\n            [\n              947,\n              'gamma'\n            ],\n            [\n              948,\n              'delta'\n            ],\n            [\n              949,\n              'epsilon'\n            ],\n            [\n              950,\n              'zeta'\n            ],\n            [\n              951,\n              'eta'\n            ],\n            [\n              952,\n              'theta'\n            ],\n            [\n              953,\n              'iota'\n            ],\n            [\n              954,\n              'kappa'\n            ],\n            [\n              955,\n              'lambda'\n            ],\n            [\n              956,\n              'mu'\n            ],\n            [\n              957,\n              'nu'\n            ],\n            [\n              958,\n              'xi'\n            ],\n            [\n              959,\n              'omicron'\n            ],\n            [\n              960,\n              'pi'\n            ],\n            [\n              961,\n              'rho'\n            ],\n            [\n              962,\n              'final sigma'\n            ],\n            [\n              963,\n              'sigma'\n            ],\n            [\n              964,\n              'tau'\n            ],\n            [\n              965,\n              'upsilon'\n            ],\n            [\n              966,\n              'phi'\n            ],\n            [\n              967,\n              'chi'\n            ],\n            [\n              968,\n              'psi'\n            ],\n            [\n              969,\n              'omega'\n            ]\n          ]\n        },\n        {\n          name: 'Symbols',\n          characters: [\n            [\n              8501,\n              'alef symbol'\n            ],\n            [\n              982,\n              'pi symbol'\n            ],\n            [\n              8476,\n              'real part symbol'\n            ],\n            [\n              978,\n              'upsilon - hook symbol'\n            ],\n            [\n              8472,\n              'Weierstrass p'\n            ],\n            [\n              8465,\n              'imaginary part'\n            ]\n          ]\n        },\n        {\n          name: 'Arrows',\n          characters: [\n            [\n              8592,\n              'leftwards arrow'\n            ],\n            [\n              8593,\n              'upwards arrow'\n            ],\n            [\n              8594,\n              'rightwards arrow'\n            ],\n            [\n              8595,\n              'downwards arrow'\n            ],\n            [\n              8596,\n              'left right arrow'\n            ],\n            [\n              8629,\n              'carriage return'\n            ],\n            [\n              8656,\n              'leftwards double arrow'\n            ],\n            [\n              8657,\n              'upwards double arrow'\n            ],\n            [\n              8658,\n              'rightwards double arrow'\n            ],\n            [\n              8659,\n              'downwards double arrow'\n            ],\n            [\n              8660,\n              'left right double arrow'\n            ],\n            [\n              8756,\n              'therefore'\n            ],\n            [\n              8834,\n              'subset of'\n            ],\n            [\n              8835,\n              'superset of'\n            ],\n            [\n              8836,\n              'not a subset of'\n            ],\n            [\n              8838,\n              'subset of or equal to'\n            ],\n            [\n              8839,\n              'superset of or equal to'\n            ],\n            [\n              8853,\n              'circled plus'\n            ],\n            [\n              8855,\n              'circled times'\n            ],\n            [\n              8869,\n              'perpendicular'\n            ],\n            [\n              8901,\n              'dot operator'\n            ],\n            [\n              8968,\n              'left ceiling'\n            ],\n            [\n              8969,\n              'right ceiling'\n            ],\n            [\n              8970,\n              'left floor'\n            ],\n            [\n              8971,\n              'right floor'\n            ],\n            [\n              9001,\n              'left-pointing angle bracket'\n            ],\n            [\n              9002,\n              'right-pointing angle bracket'\n            ],\n            [\n              9674,\n              'lozenge'\n            ],\n            [\n              9824,\n              'black spade suit'\n            ],\n            [\n              9827,\n              'black club suit'\n            ],\n            [\n              9829,\n              'black heart suit'\n            ],\n            [\n              9830,\n              'black diamond suit'\n            ],\n            [\n              8194,\n              'en space'\n            ],\n            [\n              8195,\n              'em space'\n            ],\n            [\n              8201,\n              'thin space'\n            ],\n            [\n              8204,\n              'zero width non-joiner'\n            ],\n            [\n              8205,\n              'zero width joiner'\n            ],\n            [\n              8206,\n              'left-to-right mark'\n            ],\n            [\n              8207,\n              'right-to-left mark'\n            ]\n          ]\n        }\n      ];\n    };\n    const charmapFilter = charmap => {\n      return global.grep(charmap, item => {\n        return isArray(item) && item.length === 2;\n      });\n    };\n    const getCharsFromOption = optionValue => {\n      if (isArray(optionValue)) {\n        return charmapFilter(optionValue);\n      }\n      if (typeof optionValue === 'function') {\n        return optionValue();\n      }\n      return [];\n    };\n    const extendCharMap = (editor, charmap) => {\n      const userCharMap = getCharMap$1(editor);\n      if (userCharMap) {\n        charmap = [{\n            name: UserDefined,\n            characters: getCharsFromOption(userCharMap)\n          }];\n      }\n      const userCharMapAppend = getCharMapAppend(editor);\n      if (userCharMapAppend) {\n        const userDefinedGroup = global.grep(charmap, cg => cg.name === UserDefined);\n        if (userDefinedGroup.length) {\n          userDefinedGroup[0].characters = [\n            ...userDefinedGroup[0].characters,\n            ...getCharsFromOption(userCharMapAppend)\n          ];\n          return charmap;\n        }\n        return charmap.concat({\n          name: UserDefined,\n          characters: getCharsFromOption(userCharMapAppend)\n        });\n      }\n      return charmap;\n    };\n    const getCharMap = editor => {\n      const groups = extendCharMap(editor, getDefaultCharMap());\n      return groups.length > 1 ? [{\n          name: 'All',\n          characters: bind(groups, g => g.characters)\n        }].concat(groups) : groups;\n    };\n\n    const get = editor => {\n      const getCharMap$1 = () => {\n        return getCharMap(editor);\n      };\n      const insertChar$1 = chr => {\n        insertChar(editor, chr);\n      };\n      return {\n        getCharMap: getCharMap$1,\n        insertChar: insertChar$1\n      };\n    };\n\n    const Cell = initial => {\n      let value = initial;\n      const get = () => {\n        return value;\n      };\n      const set = v => {\n        value = v;\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    const last = (fn, rate) => {\n      let timer = null;\n      const cancel = () => {\n        if (!isNull(timer)) {\n          clearTimeout(timer);\n          timer = null;\n        }\n      };\n      const throttle = (...args) => {\n        cancel();\n        timer = setTimeout(() => {\n          timer = null;\n          fn.apply(null, args);\n        }, rate);\n      };\n      return {\n        cancel,\n        throttle\n      };\n    };\n\n    const contains = (str, substr, start = 0, end) => {\n      const idx = str.indexOf(substr, start);\n      if (idx !== -1) {\n        return isUndefined(end) ? true : idx + substr.length <= end;\n      } else {\n        return false;\n      }\n    };\n    const fromCodePoint = String.fromCodePoint;\n\n    const charMatches = (charCode, name, lowerCasePattern) => {\n      if (contains(fromCodePoint(charCode).toLowerCase(), lowerCasePattern)) {\n        return true;\n      } else {\n        return contains(name.toLowerCase(), lowerCasePattern) || contains(name.toLowerCase().replace(/\\s+/g, ''), lowerCasePattern);\n      }\n    };\n    const scan = (group, pattern) => {\n      const matches = [];\n      const lowerCasePattern = pattern.toLowerCase();\n      each(group.characters, g => {\n        if (charMatches(g[0], g[1], lowerCasePattern)) {\n          matches.push(g);\n        }\n      });\n      return map(matches, m => ({\n        text: m[1],\n        value: fromCodePoint(m[0]),\n        icon: fromCodePoint(m[0])\n      }));\n    };\n\n    const patternName = 'pattern';\n    const open = (editor, charMap) => {\n      const makeGroupItems = () => [\n        {\n          label: 'Search',\n          type: 'input',\n          name: patternName\n        },\n        {\n          type: 'collection',\n          name: 'results'\n        }\n      ];\n      const makeTabs = () => map(charMap, charGroup => ({\n        title: charGroup.name,\n        name: charGroup.name,\n        items: makeGroupItems()\n      }));\n      const makePanel = () => ({\n        type: 'panel',\n        items: makeGroupItems()\n      });\n      const makeTabPanel = () => ({\n        type: 'tabpanel',\n        tabs: makeTabs()\n      });\n      const currentTab = charMap.length === 1 ? Cell(UserDefined) : Cell('All');\n      const scanAndSet = (dialogApi, pattern) => {\n        find(charMap, group => group.name === currentTab.get()).each(f => {\n          const items = scan(f, pattern);\n          dialogApi.setData({ results: items });\n        });\n      };\n      const SEARCH_DELAY = 40;\n      const updateFilter = last(dialogApi => {\n        const pattern = dialogApi.getData().pattern;\n        scanAndSet(dialogApi, pattern);\n      }, SEARCH_DELAY);\n      const body = charMap.length === 1 ? makePanel() : makeTabPanel();\n      const initialData = {\n        pattern: '',\n        results: scan(charMap[0], '')\n      };\n      const bridgeSpec = {\n        title: 'Special Character',\n        size: 'normal',\n        body,\n        buttons: [{\n            type: 'cancel',\n            name: 'close',\n            text: 'Close',\n            primary: true\n          }],\n        initialData,\n        onAction: (api, details) => {\n          if (details.name === 'results') {\n            insertChar(editor, details.value);\n            api.close();\n          }\n        },\n        onTabChange: (dialogApi, details) => {\n          currentTab.set(details.newTabName);\n          updateFilter.throttle(dialogApi);\n        },\n        onChange: (dialogApi, changeData) => {\n          if (changeData.name === patternName) {\n            updateFilter.throttle(dialogApi);\n          }\n        }\n      };\n      const dialogApi = editor.windowManager.open(bridgeSpec);\n      dialogApi.focus(patternName);\n    };\n\n    const register$1 = (editor, charMap) => {\n      editor.addCommand('mceShowCharmap', () => {\n        open(editor, charMap);\n      });\n    };\n\n    const init = (editor, all) => {\n      editor.ui.registry.addAutocompleter('charmap', {\n        trigger: ':',\n        columns: 'auto',\n        minChars: 2,\n        fetch: (pattern, _maxResults) => new Promise((resolve, _reject) => {\n          resolve(scan(all, pattern));\n        }),\n        onAction: (autocompleteApi, rng, value) => {\n          editor.selection.setRng(rng);\n          editor.insertContent(value);\n          autocompleteApi.hide();\n        }\n      });\n    };\n\n    const onSetupEditable = editor => api => {\n      const nodeChanged = () => {\n        api.setEnabled(editor.selection.isEditable());\n      };\n      editor.on('NodeChange', nodeChanged);\n      nodeChanged();\n      return () => {\n        editor.off('NodeChange', nodeChanged);\n      };\n    };\n    const register = editor => {\n      const onAction = () => editor.execCommand('mceShowCharmap');\n      editor.ui.registry.addButton('charmap', {\n        icon: 'insert-character',\n        tooltip: 'Special character',\n        onAction,\n        onSetup: onSetupEditable(editor)\n      });\n      editor.ui.registry.addMenuItem('charmap', {\n        icon: 'insert-character',\n        text: 'Special character...',\n        onAction,\n        onSetup: onSetupEditable(editor)\n      });\n    };\n\n    var Plugin = () => {\n      global$1.add('charmap', editor => {\n        register$2(editor);\n        const charMap = getCharMap(editor);\n        register$1(editor, charMap);\n        register(editor);\n        init(editor, charMap[0]);\n        return get(editor);\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["global$1","tinymce","util","Tools","resolve","insertChar","editor","chr","evtChr","dispatch","fireInsertCustomChar","execCommand","eq","t","a","isArray$1","type","value","x","Array","isArray","o","v","constructor","String","prototype","isPrototypeOf","_a","name","typeOf","isNull","isUndefined","undefined","isFunction","isSimpleType","never","Optional","tag","this","some","none","singletonNone","fold","onNone","onSome","isSome","isNone","map","mapper","bind","binder","exists","predicate","forall","filter","getOr","replacement","or","getOrThunk","thunk","orThunk","getOrDie","message","Error","from","isNullable","getOrNull","getOrUndefined","each","worker","toArray","toString","nativePush","push","xs","f","len","length","r","i","find","pred","until","findUntil","apply","flatten","global","option","options","get","getCharMap$1","getCharMapAppend","UserDefined","getCharsFromOption","optionValue","charmap","grep","item","getCharMap","groups","userCharMap","characters","userCharMapAppend","userDefinedGroup","cg","concat","extendCharMap","g","Cell","initial","set","contains","str","substr","start","end","idx","indexOf","fromCodePoint","scan","group","pattern","matches","lowerCasePattern","toLowerCase","charCode","replace","charMatches","m","text","icon","patternName","open","charMap","makeGroupItems","label","currentTab","updateFilter","fn","rate","timer","cancel","clearTimeout","throttle","args","setTimeout","last","dialogApi","getData","items","setData","results","scanAndSet","bridgeSpec","title","size","body","tabs","charGroup","buttons","primary","initialData","onAction","api","details","close","onTabChange","newTabName","onChange","changeData","windowManager","focus","onSetupEditable","nodeChanged","setEnabled","selection","isEditable","on","off","add","registerOption","register","charMapProcessor","processor","register$2","addCommand","register$1","ui","registry","addButton","tooltip","onSetup","addMenuItem","all","addAutocompleter","trigger","columns","minChars","fetch","_maxResults","Promise","_reject","autocompleteApi","rng","setRng","insertContent","hide","init"],"sourceRoot":""}