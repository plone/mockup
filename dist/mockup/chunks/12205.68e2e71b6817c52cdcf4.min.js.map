{"version":3,"file":"chunks/12205.68e2e71b6817c52cdcf4.min.js","mappings":"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","sources":["webpack://@plone/mockup/./node_modules/tinymce/plugins/autolink/index.js","webpack://@plone/mockup/./node_modules/tinymce/plugins/autolink/plugin.js"],"sourcesContent":["// Exports the \"autolink\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/autolink')\n//   ES2015:\n//     import 'tinymce/plugins/autolink'\nrequire('./plugin.js');","/**\n * TinyMCE version 7.2.1 (2024-07-03)\n */\n\n(function () {\n  'use strict';\n\n  var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n  const link = () => /(?:[A-Za-z][A-Za-z\\d.+-]{0,14}:\\/\\/(?:[-.~*+=!&;:'%@?^${}(),\\w]+@)?|www\\.|[-;:&=+$,.\\w]+@)[A-Za-z\\d-]+(?:\\.[A-Za-z\\d-]+)*(?::\\d+)?(?:\\/(?:[-.~*+=!;:'%@$(),\\/\\w]*[-~*+=%@$()\\/\\w])?)?(?:\\?(?:[-.~*+=!&;:'%@?^${}(),\\/\\w]+))?(?:#(?:[-.~*+=!&;:'%@?^${}(),\\/\\w]+))?/g;\n\n  const option = name => editor => editor.options.get(name);\n  const register = editor => {\n    const registerOption = editor.options.register;\n    registerOption('autolink_pattern', {\n      processor: 'regexp',\n      default: new RegExp('^' + link().source + '$', 'i')\n    });\n    registerOption('link_default_target', { processor: 'string' });\n    registerOption('link_default_protocol', {\n      processor: 'string',\n      default: 'https'\n    });\n  };\n  const getAutoLinkPattern = option('autolink_pattern');\n  const getDefaultLinkTarget = option('link_default_target');\n  const getDefaultLinkProtocol = option('link_default_protocol');\n  const allowUnsafeLinkTarget = option('allow_unsafe_link_target');\n\n  const hasProto = (v, constructor, predicate) => {\n    var _a;\n    if (predicate(v, constructor.prototype)) {\n      return true;\n    } else {\n      return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n    }\n  };\n  const typeOf = x => {\n    const t = typeof x;\n    if (x === null) {\n      return 'null';\n    } else if (t === 'object' && Array.isArray(x)) {\n      return 'array';\n    } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n      return 'string';\n    } else {\n      return t;\n    }\n  };\n  const isType = type => value => typeOf(value) === type;\n  const eq = t => a => t === a;\n  const isString = isType('string');\n  const isUndefined = eq(undefined);\n  const isNullable = a => a === null || a === undefined;\n  const isNonNullable = a => !isNullable(a);\n\n  const not = f => t => !f(t);\n\n  const hasOwnProperty = Object.hasOwnProperty;\n  const has = (obj, key) => hasOwnProperty.call(obj, key);\n\n  const checkRange = (str, substr, start) => substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n  const contains = (str, substr, start = 0, end) => {\n    const idx = str.indexOf(substr, start);\n    if (idx !== -1) {\n      return isUndefined(end) ? true : idx + substr.length <= end;\n    } else {\n      return false;\n    }\n  };\n  const startsWith = (str, prefix) => {\n    return checkRange(str, prefix, 0);\n  };\n\n  const zeroWidth = '\\uFEFF';\n  const isZwsp = char => char === zeroWidth;\n  const removeZwsp = s => s.replace(/\\uFEFF/g, '');\n\n  var global = tinymce.util.Tools.resolve('tinymce.dom.TextSeeker');\n\n  const isTextNode = node => node.nodeType === 3;\n  const isElement = node => node.nodeType === 1;\n  const isBracketOrSpace = char => /^[(\\[{ \\u00a0]$/.test(char);\n  const hasProtocol = url => /^([A-Za-z][A-Za-z\\d.+-]*:\\/\\/)|mailto:/.test(url);\n  const isPunctuation = char => /[?!,.;:]/.test(char);\n  const findChar = (text, index, predicate) => {\n    for (let i = index - 1; i >= 0; i--) {\n      const char = text.charAt(i);\n      if (!isZwsp(char) && predicate(char)) {\n        return i;\n      }\n    }\n    return -1;\n  };\n  const freefallRtl = (container, offset) => {\n    let tempNode = container;\n    let tempOffset = offset;\n    while (isElement(tempNode) && tempNode.childNodes[tempOffset]) {\n      tempNode = tempNode.childNodes[tempOffset];\n      tempOffset = isTextNode(tempNode) ? tempNode.data.length : tempNode.childNodes.length;\n    }\n    return {\n      container: tempNode,\n      offset: tempOffset\n    };\n  };\n\n  const parseCurrentLine = (editor, offset) => {\n    var _a;\n    const voidElements = editor.schema.getVoidElements();\n    const autoLinkPattern = getAutoLinkPattern(editor);\n    const {dom, selection} = editor;\n    if (dom.getParent(selection.getNode(), 'a[href]') !== null) {\n      return null;\n    }\n    const rng = selection.getRng();\n    const textSeeker = global(dom, node => {\n      return dom.isBlock(node) || has(voidElements, node.nodeName.toLowerCase()) || dom.getContentEditable(node) === 'false';\n    });\n    const {\n      container: endContainer,\n      offset: endOffset\n    } = freefallRtl(rng.endContainer, rng.endOffset);\n    const root = (_a = dom.getParent(endContainer, dom.isBlock)) !== null && _a !== void 0 ? _a : dom.getRoot();\n    const endSpot = textSeeker.backwards(endContainer, endOffset + offset, (node, offset) => {\n      const text = node.data;\n      const idx = findChar(text, offset, not(isBracketOrSpace));\n      return idx === -1 || isPunctuation(text[idx]) ? idx : idx + 1;\n    }, root);\n    if (!endSpot) {\n      return null;\n    }\n    let lastTextNode = endSpot.container;\n    const startSpot = textSeeker.backwards(endSpot.container, endSpot.offset, (node, offset) => {\n      lastTextNode = node;\n      const idx = findChar(node.data, offset, isBracketOrSpace);\n      return idx === -1 ? idx : idx + 1;\n    }, root);\n    const newRng = dom.createRng();\n    if (!startSpot) {\n      newRng.setStart(lastTextNode, 0);\n    } else {\n      newRng.setStart(startSpot.container, startSpot.offset);\n    }\n    newRng.setEnd(endSpot.container, endSpot.offset);\n    const rngText = removeZwsp(newRng.toString());\n    const matches = rngText.match(autoLinkPattern);\n    if (matches) {\n      let url = matches[0];\n      if (startsWith(url, 'www.')) {\n        const protocol = getDefaultLinkProtocol(editor);\n        url = protocol + '://' + url;\n      } else if (contains(url, '@') && !hasProtocol(url)) {\n        url = 'mailto:' + url;\n      }\n      return {\n        rng: newRng,\n        url\n      };\n    } else {\n      return null;\n    }\n  };\n  const convertToLink = (editor, result) => {\n    const {dom, selection} = editor;\n    const {rng, url} = result;\n    const bookmark = selection.getBookmark();\n    selection.setRng(rng);\n    const command = 'createlink';\n    const args = {\n      command,\n      ui: false,\n      value: url\n    };\n    const beforeExecEvent = editor.dispatch('BeforeExecCommand', args);\n    if (!beforeExecEvent.isDefaultPrevented()) {\n      editor.getDoc().execCommand(command, false, url);\n      editor.dispatch('ExecCommand', args);\n      const defaultLinkTarget = getDefaultLinkTarget(editor);\n      if (isString(defaultLinkTarget)) {\n        const anchor = selection.getNode();\n        dom.setAttrib(anchor, 'target', defaultLinkTarget);\n        if (defaultLinkTarget === '_blank' && !allowUnsafeLinkTarget(editor)) {\n          dom.setAttrib(anchor, 'rel', 'noopener');\n        }\n      }\n    }\n    selection.moveToBookmark(bookmark);\n    editor.nodeChanged();\n  };\n  const handleSpacebar = editor => {\n    const result = parseCurrentLine(editor, -1);\n    if (isNonNullable(result)) {\n      convertToLink(editor, result);\n    }\n  };\n  const handleBracket = handleSpacebar;\n  const handleEnter = editor => {\n    const result = parseCurrentLine(editor, 0);\n    if (isNonNullable(result)) {\n      convertToLink(editor, result);\n    }\n  };\n  const setup = editor => {\n    editor.on('keydown', e => {\n      if (e.keyCode === 13 && !e.isDefaultPrevented()) {\n        handleEnter(editor);\n      }\n    });\n    editor.on('keyup', e => {\n      if (e.keyCode === 32) {\n        handleSpacebar(editor);\n      } else if (e.keyCode === 48 && e.shiftKey || e.keyCode === 221) {\n        handleBracket(editor);\n      }\n    });\n  };\n\n  var Plugin = () => {\n    global$1.add('autolink', editor => {\n      register(editor);\n      setup(editor);\n    });\n  };\n\n  Plugin();\n\n})();\n"],"names":["global$1","tinymce","util","Tools","resolve","option","name","editor","options","get","getAutoLinkPattern","getDefaultLinkTarget","getDefaultLinkProtocol","allowUnsafeLinkTarget","isString","type","value","x","t","Array","isArray","o","v","constructor","String","prototype","isPrototypeOf","_a","typeOf","isUndefined","undefined","a","isNonNullable","isNullable","hasOwnProperty","Object","isZwsp","char","global","isTextNode","node","nodeType","isBracketOrSpace","test","findChar","text","index","predicate","i","charAt","parseCurrentLine","offset","voidElements","schema","getVoidElements","autoLinkPattern","dom","selection","getParent","getNode","rng","getRng","textSeeker","isBlock","obj","key","nodeName","toLowerCase","call","getContentEditable","container","endContainer","endOffset","tempNode","tempOffset","childNodes","data","length","freefallRtl","root","getRoot","endSpot","backwards","idx","f","lastTextNode","startSpot","newRng","createRng","setStart","setEnd","matches","toString","replace","match","url","str","substr","start","checkRange","end","indexOf","contains","hasProtocol","convertToLink","result","bookmark","getBookmark","setRng","command","args","ui","dispatch","isDefaultPrevented","getDoc","execCommand","defaultLinkTarget","anchor","setAttrib","moveToBookmark","nodeChanged","handleSpacebar","handleBracket","setup","on","e","keyCode","handleEnter","shiftKey","add","registerOption","register","processor","default","RegExp","source"],"sourceRoot":""}