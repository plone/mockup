{"version":3,"file":"chunks/85083.e222bed41a5a9b0bf002.min.js","mappings":"gUAGOA,eAAeC,EAAOC,GAa1B,IAb2B,OAC1BC,EAAS,MAAK,cACdC,EAAgB,KAAI,WACpBC,EAAa,GAAE,KACfC,EAAO,KAAI,KACXC,EAAO,KAAI,WACXC,EAAa,KAAI,WACjBC,EAAa,KAAI,cACjBC,EAAgB,KAAI,gBACpBC,EAAkB,GAAE,gBACpBC,EAAkB,GAAE,SACpBC,EAAW,IAAG,KACdC,EAAO,GACVZ,EACOa,EAAa,CACbC,SAAU,IA4Ed,GA1EIV,IAEAS,EAAa,CACTC,SAAU,CACN,CACIC,EAAG,OACHC,EAAG,8CACHC,EAAG,GAAGb,SAGdc,QAAS,yBACTC,WAAY,aAEZV,EAAgBW,QAGhBP,EAAWC,SAASO,KAAK,CACrBN,EAAG,cACHC,EAAG,gDACHC,EAAGR,EAAgBa,OAAOZ,MAIlCF,IAEAK,EAAa,CACTC,SAAU,CACN,CACIC,EAAG,OACHC,EAAG,8CACHC,EAAG,GAAGT,WAKlBD,IAEAM,EAAa,CACTC,SAAU,CACN,CACIC,EAAG,OACHC,EAAG,8CACHC,EAAGV,KAIXE,EAAgBW,QAChBP,EAAWC,SAASO,KAAK,CACrBN,EAAG,cACHC,EAAG,gDACHC,EAAGR,KAIXJ,IACAQ,EAAa,CACTC,SAAU,CACN,CACIC,EAAG,MACHC,EAAG,gDACHC,EAAGZ,MAKfC,GACAO,EAAWC,SAASO,KAAK,CACrBN,EAAG,iBACHC,EAAG,kDACHC,EAAG,GAAGX,OAKTO,EAAWC,SAASM,OACrB,MAAO,CACHG,QAAS,GACTC,MAAO,GAIf,IAAIC,EAAM,GAAGvB,KAAgD,IAAhCA,EAAcwB,QAAQ,KAAc,IAAM,YAAYC,KAAKC,UACpFf,iBACYc,KAAKC,UAAUzB,YAAqBwB,KAAKC,UAAU,CAC/DhB,KAAMA,EACNiB,KAAMlB,MAGNmB,EAAU,IAAIC,QAClBD,EAAQE,IAAI,SAAU,oBAEtB,MAAMC,QAAiBC,MAAMT,EAAK,CAC9BxB,OAAQA,EACR6B,QAASA,IAGb,IAAKG,EAASE,GACV,MAAO,CACHZ,QAAS,GACTC,MAAO,EACPY,OAAQC,EAAKD,QAIrB,MAAMC,QAAaJ,EAASI,OAE5B,IAAK9B,IAAeC,GAAiBC,EAAgBW,OAAQ,CAIzD,MAAMkB,EAAoB,CACtBf,QAAS,GACTC,MAAOa,EAAKb,OAEhB,IAAK,MAAMe,KAAMF,EAAKd,UAC8B,GAA5Cd,EAAgBiB,QAAQa,EAAGC,cAAsBD,EAAGE,eACpDH,EAAkBf,QAAQF,KAAKkB,GAGvC,OAAOD,CACX,CACA,OAAOD,CACX,CAEOvC,eAAe4C,EAAoBrC,EAAMsC,GAC5C,IAAKtC,EACD,MAAO,GAEX,MAAMuC,QAA8B7C,EAAQ,CACxCG,cAAeyC,EAAOzC,cACtBC,WAAYwC,EAAOxC,WACnBE,KAAMA,IAEV,IAAIkB,QAAiBqB,GAAuBrB,UAAY,GAKxD,OAHAA,EAAQsB,MAAK,CAACC,EAAGC,IACN1C,EAAKqB,QAAQoB,EAAEE,KAAO3C,EAAKqB,QAAQqB,EAAEC,OAEzCzB,CACX,CAIOzB,eAAemD,EAAYC,EAAIC,GAAgB,IAAd,SAAEC,GAAUD,EAKhD,MAAME,QAJNvD,eAAuBsD,GAEnB,aADmBE,EAAAA,EAAML,YAAYG,EAEzC,CACuBG,CAAQH,GAE/B,OADAF,EAAKM,UAAYH,EACV,CACHI,OAAAA,GAAY,EAEpB,CAGO,SAASC,EAAaR,GACzB,MAAMS,EAAeC,IACbV,IAASA,EAAKW,SAASD,EAAME,SAC7BZ,EAAKa,cAAc,IAAIC,YAAY,gBAAiBd,GACxD,EAKJ,OAFAe,SAASC,iBAAiB,QAASP,GAAa,GAEzC,CACHF,OAAAA,GACIQ,SAASE,oBAAoB,QAASR,GAAa,EACvD,EAER,CAEO,SAASS,EAAkBC,EAAa1B,GAC3C,IAAI2B,EAAMhB,EAAAA,EAAMiB,QAAQC,IAAI7B,EAAO8B,kBAAoB,GAEvDH,EAAMA,EAAII,MAAMJ,EAAIlD,OAAS,IAAMkD,EAAIlD,QACnCiD,GAAe1B,GAAQlC,gBAAgBW,SACvCkD,EAAMA,EAAIK,QAAQpC,IAC4C,GAAnDI,EAAOlC,gBAAgBiB,QAAQa,EAAGC,gBAIjD,MAAMoC,EAAMC,SAASlC,EAAOmC,qBAAsB,IAKlD,OAJIF,IAEAN,EAAMA,EAAII,MAAMJ,EAAIlD,OAASwD,EAAKN,EAAIlD,SAEnCkD,CACX,CAEO,SAASS,EAAmBC,EAAMrC,GACrC,IAAKA,EAAOsC,aACR,OAGJ,MAAMA,EAAeb,GAAkB,EAAOzB,GACxCuC,EAAiBD,EAAaN,QAAQpC,GACjCA,EAAGS,MAAQgC,EAAKhC,MAEvBkC,EAAe9D,OAAS,GACxB6D,EAAaE,OAAOF,EAAavD,QAAQwD,EAAe,IAAK,GAEjED,EAAa5D,KAAK2D,GAClB1B,EAAAA,EAAMiB,QAAQvC,IAAIW,EAAO8B,gBAAiBQ,EAC9C,CAGO,SAASG,EAAWC,GAKvB,MAAMC,EAAIC,KAAKC,MAAMH,GACfI,EAAO,IAAIC,EAAAA,EACjB,OAAO,IAAIH,KAAKD,GAAGK,eAAeF,EAAKG,gBAAgBC,QAAQ,IAAK,KACxE,C,2DCxOIC,E,MAA0B,GAA4B,KAE1DA,EAAwBzE,KAAK,CAAC0E,EAAOC,GAAI,mYAAoY,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,+DAA+D,MAAQ,GAAG,SAAW,8GAA8G,eAAiB,CAAC,mxRAAmxR,WAAa,MAE77S,K,2DCJIF,E,MAA0B,GAA4B,KAE1DA,EAAwBzE,KAAK,CAAC0E,EAAOC,GAAI,sxHAAuxH,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,gEAAgE,MAAQ,GAAG,SAAW,0rCAA0rC,eAAiB,CAAC,oy4DAAoy4D,WAAa,MAE96iE,K,+LCJe,SAAS,EAACrD,EAAQsD,GAC7B,MAAMC,GAAQC,EAAAA,EAAAA,IAAS,IAEjBC,EAAOtG,UAOTuG,EAAQ,IANO,CACXnG,cAAeyC,EAAOzC,cACtBC,WAAYwC,EAAOxC,WACnBQ,SAAUgC,EAAOhC,SACjBD,gBAAiBiC,EAAOjC,oBAIrB2F,GAEH1D,EAAOlC,gBAAgBW,SACvBiF,EAAuB,gBAAI1D,EAAOlC,iBAEtC,IACI,aAAaV,EAAAA,EAAAA,IAAQsG,EACzB,CACA,MACI,MAAO,CACH,MAAS,gCAEjB,GA+MJ,OA5BAH,EAAM1B,IAAM1E,UAON,IAPa,KACfM,EAAO,GAAE,WACTE,EAAa,GAAE,YACfgG,GAAc,EAAK,aACnBC,EAAe,GAAE,KACjB3F,EAAO,EAAC,KACR4F,EAAO,MACVxG,EAIG,GAHW,MAARwG,IACCA,EAAO7D,EAAO6D,MAEL,WAATA,OAhFO1G,OAAOQ,EAAYM,KAC9B,IAAIyF,EAAQ,CACR9F,WAAYoC,EAAO8D,SACnB7F,KAAMA,GAEV,GAAIN,EAAY,CACZ,GAAIA,EAAWc,OAAS,EAEpB,OAEJiF,EAAkB,WAAI,IAAM/F,EAAa,GAC7C,CACA,IAAIoG,QAAcN,EAAKC,GACvBK,EAAM9F,KAAOA,EACb8F,EAAMpG,WAAaA,EAEnB4F,EAAMS,QAAQC,IACV,MAAMC,EAAYjG,EAAO+B,EAAOhC,SAAY+F,EAAMlF,MAGlD,OAAqB,GAAjBoF,EAAOxF,QAAewF,EAAO,GAAGtG,YAAcA,GAC9CoG,EAAMI,KAAOD,EACbH,EAAMK,YAAa,EACZ,CAACL,KAIZE,EAAO,GAAGE,KAAOD,EACjBD,EAAO,GAAGhG,KAAO8F,EAAM9F,KAGvBgG,EAAO,GAAGrF,QAAU,IACbqF,EAAO,GAAGrF,WACVmF,EAAMnF,SAENqF,EAAM,GACf,EA6CQI,CAAO1G,EAAYM,QACtB,GAAI2F,EAAc,CACrB,MAAMU,GAAKzC,EAAAA,EAAAA,IAAIyB,GACf,KAAMM,KAAgBU,GAClB,OAEJ,IAAIP,EAAQO,EAAGV,GACX3F,EAAO8F,EAAM9F,WAjDPd,OAAOoH,EAAGtG,EAAMN,KAC9B,IAAI+F,EAAQ,CACRjG,KAAM8G,EACNtG,KAAMA,GAGNN,IACA+F,EAAkB,WAAI,IAAM/F,EAAa,KAG7C,IAAIoG,QAAcN,EAAKC,GACvBK,EAAMI,KAAQlG,EAAO+B,EAAOhC,SAAY+F,EAAMlF,MAC9CkF,EAAM9F,KAAOA,EAEbsF,EAAMS,QAAQC,IACVA,EAAOO,SAASC,IACZ,GAAIA,EAAEhH,MAAQ8G,EACV,OAAOE,EAEXA,EAAExG,KAAO8F,EAAM9F,KACfwG,EAAEN,KAAOJ,EAAMI,KACfM,EAAE7F,QAAU,IACL6F,EAAE7F,WACFmF,EAAMnF,QACZ,IAEEqF,IACT,EAuBYS,CAAUd,EAAc3F,EAAM8F,EAAMpG,WAElD,MAAWF,QAtMAN,OAAOM,EAAME,EAAYgG,KAEpC,IAAIG,EAAW9D,EAAO8D,SAClBa,EAAgBb,EAASZ,QAAQ,OAAQ,IAAI0B,MAAM,KACnDC,EAAepH,EACfqH,EAAehB,EAEnB,IAAKe,EAAaE,WAAWjB,GAGzB,GAA6B,IAAzBa,EAAclG,OACdoG,EAAef,EAAWe,MACvB,CAKH,IAAIG,EAAYH,EAAa3B,QAAQ,OAAQ,IAAI0B,MAAM,KACnDK,EAAaN,EAAclG,OAC/B,IAAK,IAAIyG,EAAM,EAAGA,EAAMP,EAAclG,OAAQyG,IAC1C,GAAIP,EAAcO,KAASF,EAAU,GAAI,CACrCC,EAAaC,EACb,KACJ,CAEJJ,EAAe,IAAOH,EAAc3C,QAAOpC,GAAMoF,EAAUG,SAASvF,KAAMwF,KAAK,KAC/EP,EAAe,IAAOF,EAAc5C,MAAM,EAAGkD,GAAYtG,OAAOqG,GAAYI,KAAK,IACrF,CAGJ,IAAIC,EAAQ,GACRC,EAAQT,EAAaD,MAAM,MAAQ,GACvC,MAAMW,EAAWC,KAAKC,IAAIH,EAAM7G,OAAQuB,EAAOuF,UAAY,KAE3D,IAAIG,EAAcJ,EAAMvD,MAAMuD,EAAM7G,OAAS8G,EAAUD,EAAM7G,QAE7D,MAAMkH,EADYL,EAAMvD,MAAM,EAAGuD,EAAM7G,OAAS8G,GACjBH,KAAK,KAEpC,KAAOM,EAAYjH,OAAS,GAAG,CAC3B,IAAImH,EAAWF,EAAYN,KAAK,KAAKlC,QAAQ,MAAO,IAIpD,GAFA0C,EAAWD,GAAwB,IADrBD,EAAYG,MACe,IAAID,IAAa,IACtDA,IAAyC,IAA7BP,EAAMtG,QAAQ6G,IAAkBP,EAAM3G,KAAKkH,GACvDA,GAAY9B,EAEZ,KAER,CAEA,MAAMQ,GAAKzC,EAAAA,EAAAA,IAAIyB,GACf,IAAIW,EAAS,GACT6B,EAAc,EAElB,IAAK,IAAIvB,KAAKc,EAAO,CACjBS,IACA,MAAMC,EAA6B,GAAfD,EACpB,IAAI/B,EAAQ,CAAC,EACb,KACMQ,KAAKD,IACNyB,GAAepI,GAChBgG,EACF,CACE,IAAID,EAAQ,CACRjG,KAAM8G,GAkBV,GAfIwB,GAAepI,IACf+F,EAAkB,WAAI,IAAM/F,EAAa,KAG7CoG,QAAcN,EAAKC,GAGnBK,EAAMI,KAAOnE,EAAOhC,SAAW+F,EAAMlF,MAErCkF,EAAMpG,WAAaA,EACnBoG,EAAM9F,KAAO,EACb8F,EAAMtG,KAAO8G,EACbR,EAAMiC,YAAczB,EAAErB,QAAQ,IAAI+C,OAAO,KAAKnB,KAAgBhB,MAAc,KAAO,KAG9EnG,EAAY,CACb,MAAMuI,QAAkBzC,EAAK,CACzB5F,cAAe0G,IAEf2B,EAAUrH,QACVkF,EAAM1D,IAAM6F,EAAUtH,QAAQ,GAAGyB,IACjC0D,EAAMoC,MAAQD,EAAUtH,QAAQ,GAAGuH,MACnCpC,EAAMlE,YAAcqG,EAAUtH,QAAQ,GAAGiB,YACzCkE,EAAMnD,QAAUsF,EAAUtH,QAAQ,GAAGgC,QAErCmD,EAAMK,YAAepE,EAAOlC,gBAAgBW,SAA+E,GAArEuB,EAAOlC,gBAAgBiB,QAAQmH,EAAUtH,QAAQ,GAAGiB,cAE9GkE,EAAMqC,YAAa,EACnB9C,EAAUU,QAAQqC,IACdA,EAAE9B,GAAKR,EACAsC,IAEf,CACJ,MACItC,EAAQO,EAAGC,GAEfN,EAAS,CAACF,KAAUE,EACxB,CACAV,EAAMlE,IAAI4E,EAAO,EA+FPqC,CAAO7I,EAAME,EAAYgG,EACnC,EAIGJ,CACX,C,gGClNS,QAAG,aAAW,G,YAGR,EAAO,GAACgD,W,qBAAb,OAAI,K,sgBAZd,SAkBM,QAjBF,SASS,MAFL,SAAmD,M,6CAGvD,SAMK,K,qFATuB9F,SAAU,e,4CAI3B,EAAO,GAAC8F,W,QAAb,OAAI,M,gHAAJ,M,oFAEoG,EAAQ,GAACC,MAAK,G,oKAAhF,EAAQ,GAAC/I,K,UAD7C,SAEK,QADD,SAAqH,M,mGAAnB,EAAQ,GAAC+I,MAAK,oB,YAAhF,EAAQ,GAAC/I,Q,4EAfhD,EAAO,IAAE8I,WAAS,K,iFAAlB,EAAO,IAAEA,U,iJAVJvG,GAAS,QAAW,W,kCACpByG,GAAW,U,SAERC,EAAOrE,GACZoE,EAAS,aAAc,CACbpE,Q,iBAoByEqE,EAAOC,G,sLCJrF,QAAG,iBAAe,G,YAGZ,EAAK,GAACC,W,qBAAX,OAAI,K,4gBAZd,SA6BM,QA5BF,SASS,MAFL,SAAmD,M,6CAGvD,SAiBK,K,qFApBuBnG,SAAU,e,6CAI3B,EAAK,GAACmG,W,QAAX,OAAI,M,gHAAJ,M,0FAYW,EAAY,GAACT,MAAK,G,gKATb,EAAY,GAACU,QAAU,M,6CAFrC,SAaK,QAZD,SAWI,MANA,SAIE,M,iFAFMpG,SAAU,eAAe,EAAY,IAAEZ,YAAYiH,cAAc5D,QAAQ,QAAS,W,oHAtB7G,EAAO,GAACZ,cAAgB,EAAK,GAAC7D,QAAM,K,iFAApC,EAAO,GAAC6D,cAAgB,EAAK,GAAC7D,O,iJAXzBuB,GAAS,QAAW,W,kCACpB+G,GAAQ,SAAkB,EAAMC,GAChCP,GAAW,U,SAERC,EAAOrE,GACZoE,EAAS,aAAc,CACbpE,Q,mBAsBqCqE,EAAOpE,G,yNCtB1D2E,EAAU,CAAC,EAEfA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IACxBF,EAAQG,OAAS,IACjBH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKJ,KAAW,IAAQM,QAAS,IAAQA,O,wMCoZjC,EAAU,S,+BASU,EAAkB,K,+BACrB,EAAc,K,MACnC,EAAO,GAACC,eAAiC,UAAhB,EAAO,GAAC3D,MAAgB,K,4GAsBlD,EAAa,M,uaApCF,EAAU,I,oTAjBrC,SAwWM,QAvWF,SAsWM,MA5VF,SAyCM,MAxCF,SAgBM,MAfF,SAME,M,iJA2BN,SAKC,MADI,SAAkD,M,qGAhCrC,EAAgB,M,6BAgCLpD,SAAU,e,8HAzCzB,EAAY,M,0CAQX,EAAU,M,QAAV,EAAU,IAGhB,EAAU,G,yDAWd,EAAO,GAAC+G,eAAiC,UAAhB,EAAO,GAAC3D,K,6EAsBlC,EAAa,sB,+HAlDH4D,EAAI,EAAE,IAAG,IAAO,GAAIC,QAAS,IAAC,I,2GAA9BD,EAAI,EAAE,IAAG,IAAO,GAAIC,QAAS,IAAC,I,qTAkBpC,SAKC,QADI,SAA2C,K,qCAAnBjH,SAAU,Q,mIAelC,QAAG,4BAA6B,CAC7BkH,aAAc,EAAY,Q,6PATtC,SAYM,QAXF,SAUC,MAJI,SAAgD,M,kEAAxBlH,SAAU,a,qBAFvB,EAAM,M,mBACR,EAAM,M,8BAEf,QAAG,4BAA6B,CAC7BkH,aAAc,EAAY,wB,mEA4TnB,EAAK,IAACC,QAAO,G,+EAApC,SAAyC,Q,qCAAlB,EAAK,IAACA,QAAO,mB,8EA5SzB,EAAM,K,WAAc,EAAK,IAACnK,K,gBAA/B,OAAI,M,kDAiMD,EAAW,IAAE4C,KAA8B,GAAvB,EAAY,GAAC5B,QAAW,M,EA2E5C,EAAY,GAACA,OAAS,GAAC,M,EA2BvB,EAAU,U,mMAxSnB,SA2SM,O,uLA1SK,EAAM,K,2CAiMR,EAAW,IAAE4B,KAA8B,GAAvB,EAAY,GAAC5B,O,gGA2EjC,EAAY,GAACA,OAAS,E,+FA2BtB,EAAU,G,gLA7RW,GAAL,EAAC,KAAyB,UAAhB,EAAO,GAACoF,MAAgB,K,EAalC,EAAC,KAAI,EAAM,IAACpF,OAAS,GAAC,K,YAwFpB,EAAK,IAACG,SAAW,I,qBAAtB,OAAI,K,wBA2DD,EAAK,IAACuF,MAAI,M,EAcK,GAAf,EAAK,IAACtF,OAAU,M,4UArLN,EAAC,IAAG,GAAK,EAAI,OAAS,SAAO,KAAG,EAAC,MACpD,EAAM,IAACJ,OAAS,EACV,SACA,IAAE,iB,UAJZ,SA4LM,QArLF,SAoGM,K,6DACN,SA+EM,K,wHAnLQ,GAAL,EAAC,KAAyB,UAAhB,EAAO,GAACoF,K,sDAalB,EAAC,KAAI,EAAM,IAACpF,OAAS,E,+FAwFnB,EAAK,IAACG,SAAW,I,QAAtB,OAAI,M,8GAAJ,M,CA2DG,EAAK,IAACuF,K,uDAcS,GAAf,EAAK,IAACtF,M,gFArLI,EAAC,IAAG,GAAK,EAAI,OAAS,SAAO,KAAG,EAAC,MACpD,EAAM,IAACJ,OAAS,EACV,SACA,IAAE,oB,uEACQoJ,SAAU,M,iTAIlB,SAUC,QAHI,SAEC,K,qCADqBpH,SAAU,Y,0IAKhC,EAAK,IAAC2D,aAAe,EAAK,IAACgC,aAAe,EAAW,GAAC/F,KAAG,K,EAoBpC,WAAjB,EAAO,GAACwD,MAAiB,K,uBAsCxB,EAAQ,G,GAAA,E,6LAvClB,SAgEM,O,mDAnFD,EAAK,IAACO,YAAe,EAAK,IAACgC,YAAe,EAAW,GAAC/F,I,iEAoBjC,WAAjB,EAAO,GAACwD,K,8NALH,EAAK,IAACsC,MAAK,G,uTAZV,QAAG,uBAAwB,CAC9B2B,WAAY,EAAK,IAAC3B,S,cAEX,EAAY,IAAC,EAAK,I,UALjC,SAgBC,QARI,SAIC,M,eACF,SAEC,M,mDALO1F,SAAU,W,mEAIZ,EAAK,IAAC0F,MAAK,oB,gBAZV,QAAG,uBAAwB,CAC9B2B,WAAY,EAAK,IAAC3B,W,sCAEX,EAAY,IAAC,EAAK,Q,mGAexB,EAAK,IAACxI,YAAc,EAAK,IAACyI,WAAU,G,kaAyB1B,QAAG,gB,UAFd,SAWC,QALG,SAIE,K,qCAFM3F,SAAU,a,kYA1BX,EAAK,IAAC9C,Y,4FAKN,QAAG,gB,UATd,SAME,Q,iBACF,SAaC,QALG,SAIE,K,2BAdQ,EAAgB,M,6BAYlB8C,SAAU,Q,mEAbX,EAAK,IAAC9C,aAAU,c,8PA+CpB,QAAG,a,UAFd,SAUS,QALL,SAIE,K,qCAFM8C,SAAU,W,gQAjBX,QAAG,a,UAFd,SAUS,QALL,SAIE,K,qCAFMA,SAAU,W,2NAqDlB,SAMO,QALH,SAIE,K,oCAFMA,SAAU,eAAe,EAAI,IAACZ,YAAYiH,cAAc5D,QAAQ,QAAS,U,sEAAzEzC,SAAU,eAAe,EAAI,IAACZ,YAAYiH,cAAc5D,QAAQ,QAAS,Q,8GAPzE,EAAI,IAAC2D,iCAAM,qB,mBACd,EAAI,IAACV,Q,6CAFd,SAGE,M,uCAFU,EAAI,IAACU,iC,mCACR,EAAI,IAACV,S,uEAcR,EAAI,IAAC1I,KAAI,G,sGADf,SAAM,iBAEL,Q,qCADK,EAAI,IAACA,KAAI,mB,8KAKnB,SAOM,QANF,SAKE,K,oCAHMgD,SACI,wB,sFAZf,EAAI,IAAC0F,MAAK,G,uBAdN,EAAQ,IAAI,EAAI,IAACvF,QAAO,G,uBAeR,UAAhB,EAAO,GAACiD,MAAgB,M,EAM5B,EAAI,IAAC/D,cAAgC,UAAhB,EAAO,GAAC+D,MAAgB,K,sPA1BvC,EAAQ,GACT,eACA,cAAY,mB,qBACV,EAAI,IAACpG,KAAI,KAAI,EAAI,IAAC0I,Q,oCArBX,EAAC,IAAG,GAAK,EACtB,OACA,UAAS,EAAU,IAAC,EAAI,KACxB,UACA,MACL,GADS,EAAY,GAACpH,QAAQ,EAAI,IAACsB,KAE9B,gBACA,KAAK,EAAY,IAAC,EAAI,KAEtB,GADA,uBACE,mB,qDAEE,EAAC,M,yBACA,EAAI,IAACA,I,UAbpB,SAuDM,QArCF,SA0BM,K,qQAND,EAAI,IAAC8F,MAAK,oBACU,UAAhB,EAAO,GAACtC,K,qFApBN,EAAQ,GACT,eACA,cAAY,oB,qCACV,EAAI,IAACpG,KAAI,KAAI,EAAI,IAAC0I,S,sBAuBzB,EAAI,IAACrG,cAAgC,UAAhB,EAAO,GAAC+D,K,+EA5Cf,EAAC,IAAG,GAAK,EACtB,OACA,UAAS,EAAU,IAAC,EAAI,KACxB,UACA,MACL,GADS,EAAY,GAAC9E,QAAQ,EAAI,IAACsB,KAE9B,gBACA,KAAK,EAAY,IAAC,EAAI,KAEtB,GADA,uBACE,oB,qCAGG,EAAI,IAACA,O,+TA+CC,EAAK,IAAC5C,O,oCACDyE,SAAS,EAAK,IAACjE,MACjC,E,UAJR,SAWM,QAJF,SAGO,K,mEARU,EAAK,IAACR,Q,+CACDyE,SAAS,EAAK,IAACjE,MACjC,K,8JAWA,QAAG,uB,8FADX,SAEM,QADF,SAA+B,I,oDAzL9C,EAAY,GAACQ,OAAS,IAAM,EAAY,GAAC0G,SAAS,EAAK,IAAC9E,K,qKAAxD,EAAY,GAAC5B,OAAS,IAAM,EAAY,GAAC0G,SAAS,EAAK,IAAC9E,M,6MAoM5C,EAAY,IAAC,EAAW,I,EAqCxB,EAAW,GAAC8F,MAAK,G,kCAlBrB,EAAW,GAACvF,QAAO,G,uBAmBf,EAAW,GAACmH,aAAW,M,EASvB,EAAW,GAACC,SAAO,M,EAQnB,EAAW,GAACC,UAAQ,M,EAQpB,EAAW,GAACC,cAAY,M,wLA3BxB,QAAG,W,ySAvCpB,SAwEM,QAvEF,SAmBM,MAlBF,SAiBM,K,+BAEV,SAkDM,K,4BAjCF,SAgCK,MA/BD,SAAsB,MACtB,SAA4B,M,2IArCvB,EAAY,IAAC,EAAW,K,yIAqCxB,EAAW,GAAC/B,MAAK,oBACjB,EAAW,GAAC4B,Y,uDASZ,EAAW,GAACC,Q,uDAQZ,EAAW,GAACC,S,uDAQZ,EAAW,GAACC,a,2GAlEQL,SAAU,M,wIAerB,EAAW,GAAC1B,MAAK,G,2TAThB,QAAG,yBAA0B,CAChCgC,aAAc,EAAW,GAAChC,Q,UAHlC,SAaS,QANJ,SAEC,M,eACF,SAEC,M,mDAJsB1F,SAAU,W,oEAG3B,EAAW,GAAC0F,MAAK,oB,iBAThB,QAAG,yBAA0B,CAChCgC,aAAc,EAAW,GAAChC,W,6OAuBtC,SAMM,QALF,SAIE,K,oCAFM1F,SAAU,eAAe,EAAW,GAACZ,YAAYiH,cAAc5D,QAAQ,QAAS,U,mEAAhFzC,SAAU,eAAe,EAAW,GAACZ,YAAYiH,cAAc5D,QAAQ,QAAS,Q,gIAR9E,EAAW,GAAC2D,OAAM,kD,mBACnB,EAAW,GAACV,Q,iFAHzB,SAKM,QAJF,SAGE,I,qCAFQ,EAAW,GAACU,OAAM,6B,oCACnB,EAAW,GAACV,S,2EAqBhB,EAAW,GAAC4B,YAAW,G,+CALvB,QAAG,iB,0GAGG,EAAW,GAACA,Y,UAHvB,SAA4B,QAC5B,SAKK,Q,qDADA,EAAW,GAACA,YAAW,oB,gBAFjB,EAAW,GAACA,e,+FASb,QAAW,EAAW,GAACC,SAAO,G,+CAHnC,QAAG,a,4FAEY,EAAW,GAACA,Q,UAFhC,SAAwB,QACxB,SAIK,QAHD,SAEC,M,sDADK,QAAW,EAAW,GAACA,SAAO,oB,gBADpB,EAAW,GAACA,W,kGAStB,QAAW,EAAW,GAACC,UAAQ,G,+CAHpC,QAAG,c,4FAEY,EAAW,GAACA,S,UAFhC,SAAyB,QACzB,SAIK,QAHD,SAEC,M,sDADK,QAAW,EAAW,GAACA,UAAQ,oB,gBADrB,EAAW,GAACA,Y,2FAO3B,EAAW,GAACC,aAAY,G,+CADxB,QAAG,kB,0CAAR,SAA6B,QAC7B,SAAmC,Q,sCAA9B,EAAW,GAACA,aAAY,mB,kGA0B/B,QAAG,+BAAgC,CACjCE,WAAY,EAAY,GAAC3J,S,iJAZvB,QAAG,wB,2TAJF,QAAG,wB,8MAJtB,SAwBM,QAvBF,SAUM,MATF,SAQS,MAJJ,SAA8C,M,eAC/C,SAEC,M,eAGT,SAWM,MAVF,SAIE,M,eACF,SAIC,M,mDAhB4BgC,SAAU,W,6BADV,EAAgB,O,6BAUrCA,SAAU,Y,8BAIZ,QAAG,+BAAgC,CACjC2H,WAAY,EAAY,GAAC3J,S,qEApBJoJ,SAAU,M,gLA2B/C,SAAkC,M,4FA3StC,QAAG,0B,UAAP,SAAoC,M,0DAvD/C,EAAmB,S,oFAAnB,EAAmB,G,+QApYpB,KAA+B,CAC3BQ,SAAS,EACTC,UAAW,gBACXT,SAAU,M,MAIRU,GAAc,QAAW,gB,kCACzBvI,GAAS,QAAW,W,kCACpBsD,GAAY,QAAW,aACvBkF,GAAqB,QAAW,uB,kCAChCC,GAAgB,QAAW,kB,mCAC3BC,GAAe,QAAW,iB,mCAC1BC,GAAc,QAAW,gB,kCAGzBC,EAAe,EAAa5B,EAAS1D,I,gCAEvCuF,GAAa,EACbC,EAAc,CAAC,EACfC,GAAyB,EACzBC,GAAW,EACXrL,EAAa,KACbsL,GAAW,EACXC,EAAoBlC,EAAQnD,KAE5BsF,EAAK3D,KAAKvD,IAAIX,SAAS8H,gBAAgBC,aAAe,EAAGC,OAAOC,YAAc,G,SAEzEC,GAAc,KAAEC,EAAO,KAAI,KAAEC,EAAO,KAAI,OAAEC,EAAS,S,GACpDF,GAAkB,QAAVE,E,IACRb,EAAcW,I,WACdG,EAAe,CAACH,EAAKpJ,KAAG,Q,GACjBqJ,GAAkB,OAAVC,IAAmD,IAAhCC,EAAa7K,QAAQ2K,GAAc,C,GAEjE1C,EAAQ6C,qBAAuB,GAC/BD,EAAanL,QAAUuI,EAAQ6C,qB,mBAKnCD,EAAe,IAAIA,EAAcF,GAAI,E,MAC9BA,GAAkB,UAAVC,IAAsD,IAAhCC,EAAa7K,QAAQ2K,GAC1Df,EAAY3E,QAAQqC,IAChBA,EAAE7D,OAAO6D,EAAEtH,QAAQ2K,GAAO,GACnBrD,KAEM,SAAVsD,I,IACPb,EAAc,CAAC,I,WACfc,EAAe,GAAH,G,UA2CXE,EAAWzH,EAAM0H,G,IAEtBlB,GAAa,GAGbW,EAAc,CAAEG,OAAQ,UAEX,MAATtH,GAAgBA,IAAS2E,EAAQlD,S,SA3BpBzB,G,GACG,UAAhB2E,EAAQnD,K,eACR+F,EAAe,CAACvH,EAAKhC,KAAG,GAEpBgC,EAAKvC,aAELyI,EAAYlJ,IAAIgD,EAAK5E,U,OAGfuH,EAAY3C,EAAK5E,KAAKmH,MAAM,KAC5BoF,EAAahF,EAAUjD,MAAM,EAAGiD,EAAUvG,OAAS,GAAG2G,KAAK,KACjEmD,EAAYlJ,IAAI2K,GAAc,KAC9BR,EAAc,CAAEC,KAAMpH,G,MAG1BmH,EAAc,CAAEC,KAAMpH,IAE1B4H,G,CAiBAC,CAAY7H,GALRkG,EAAYlJ,IAAI2H,EAAQlD,S,UAQvBqG,EAAU9H,EAAM0H,GAChBhB,IAGDA,GAAyB,G,MAIvBqB,EAAeL,EAAEM,cAAcC,QAAQ,e,IACzCC,EAAgBH,EAAaI,iBAAiB,iB,GAE9CD,EAAc9L,QAA0C,GAAhCuI,EAAQ6C,qB,GAE5Bb,GAAYe,GAAGf,SAAU,C,IAGrBtC,GAAS,E,UACF+D,KAAML,EAAaM,SAAU,C,IAC0B,I,CAAzDrI,EAAKhC,IAAKuJ,EAAa,IAAI7K,QAAQ0L,EAAGE,QAAQjB,MAAc,C,GACzDhD,EAAQ,CAER8C,EAAc,CACVE,KAAMe,EAAGE,QAAQjB,KACjBC,OAAQ,QAEZjD,GAAS,E,SAIbA,GAAS,C,CAEb8C,EAAc,CACVE,KAAMe,EAAGE,QAAQjB,KACjBC,OAAQjD,EAAS,MAAQ,U,CAGjCsC,GAAW,C,MACJe,GAAGa,SAAWb,GAAGc,QAGxBrB,EAAc,CACVE,KAAMrH,EAAKhC,IACXsJ,QAA2C,GAAnCC,EAAa7K,QAAQsD,EAAKhC,KAAa,MAAQ,Y,IAIvDkK,GAAeO,KAAKL,GAAOA,EAAGM,UAAUC,OAAO,kBACnDlB,EAAWzH,SAGfyH,EAAWzH,GAGf0H,EAAEM,cAAcY,QAChBlB,EAAEM,cAAcU,UAAUG,IAAI,e,UAGzBC,I,GAEDpC,E,aAGEqC,EAAmB,IAClB9J,SAASkJ,iBAAiB,2BAC1BlJ,SAASkJ,iBAAiB,gCAG5BY,EAAiB3M,QAClB6C,SAAS+J,cAAc,8BAEvBD,EAAiB1M,KAAK4C,SAAS+J,cAAc,8BAE7CD,EAAiB3M,SACjBsK,GAAyB,EACzBqC,EAAiB,GAAGH,Q,UAInBK,EAAmBjJ,EAAM0H,G,MACxBxJ,EAAOwJ,EAAEM,c,GACfrB,EAAWe,EAAEf,SACA,UAATe,EAAEwB,KACFC,IAGS,aAATzB,EAAEwB,KACFhL,GAAMkL,oBAAoBV,UAAU7J,SAAS,gBAE7CX,EAAKkL,mBAAmBC,QAGf,WAAT3B,EAAEwB,KACFhL,GAAMoL,wBAAwBZ,UAAU7J,SAAS,gBAEjDX,EAAKoL,uBAAuBD,QAEnB,cAAT3B,EAAEwB,IAAqB,C,MACjBK,EAAU7B,EAAE5I,OAAOmJ,QAAQ,gBAC3BuB,EAASD,GAASH,mB,IACnBI,IAAWA,EAAOd,UAAU7J,SAAS,e,OAG1C2K,EAAOR,cAAc,iBAAiBK,O,IAE7B,aAAT3B,EAAEwB,IAAoB,C,MAChBK,EAAU7B,EAAE5I,OAAOmJ,QAAQ,gBAC3BwB,EAAUF,GAASD,uB,IACpBG,IAAYA,EAAQf,UAAU7J,SAAS,e,OAG5C4K,EAAQT,cAAc,WAAWK,O,CAExB,SAAT3B,EAAEwB,KAEFpB,EAAU9H,EAAM0H,GAEP,SAATA,EAAEwB,KACEQ,EAAa1J,KACuB,GAAhC2E,EAAQ6C,qBACRmC,EAAQ3J,GAER4J,I,gBAMDD,EAAQ3J,GACiB,GAAhC2E,EAAQ6C,sBACRpB,EAAcpJ,IAAI,CAACgD,IACnBqG,EAAarJ,IAAI,CAACgD,EAAKhC,QAEvBoI,EAAczE,QAAQqC,GAAC,IAASA,EAAGhE,KACnCqG,EAAa1E,QAAO,IAAMkI,EAAepB,KAAKrD,GAAMA,EAAEpH,UAE1D,QAAmBgC,EAAM2E,GACzBwE,G,gBAGWS,I,MACLE,QAAqB,QAAoBvC,EAAc5C,GAC7DyB,EAAczE,QAAQqC,I,UACPzG,KAAMuM,GACyB,GAAlCC,EAAcrN,QAAQa,EAAGS,MAC7BgG,EAAE3H,KAAKkB,G,OAEJyG,CAAC,IAEZqC,EAAa1E,QAAO,IAAMkI,EAAepB,KAAKrD,GAAMA,EAAEpH,QACtDmL,G,UA0BKA,I,IACL7N,EAAa,O,WACbqJ,EAAQnD,KAAOqF,EAAiB,I,WAChCmD,GAAsB,EAAK,GAC3BtD,GAAyB,EACzBS,EAAc,CAAEG,OAAQ,S,UAGnBoC,EAAa1J,G,OAC0B,IAArC+J,EAAcrN,QAAQsD,EAAKhC,I,UAG7B4J,I,MACCqC,EAAkBhL,SAAS+J,cAAc,iBAC3CiB,GACA,KAAuB,CAEnB7E,EAAG6E,EAAgBC,YAAc,K,OAgBvCC,EAAmB7L,EAAA,EAAM8L,U,gBACrBC,EAAY3C,EAAE5I,OAAOwL,MAAM,GAClC,K,eAEYD,EAAYE,G,IACvBjP,EAAaiP,GACa,WAAtB1D,I,WAEAlC,EAAQnD,KAAsB,KAAflG,EAAoB,SAAW,SAAQ,SAEpDiL,EAAa/G,IAAI,CACnBpE,KAAMoP,EACMlP,aACZkG,KAAMmD,EAAQnD,OAElB2F,EAAc,CAAEG,OAAQ,UACpBiD,GACA3C,G,OAIF6C,EAAmBnM,EAAA,EAAM8L,U,gBACrBM,EAAYhD,EAAE5I,OAAOwL,MAAM,GAClC,KAEGI,EAAc5P,UACJ,KAARyP,EACApD,EAAc,CAAEG,OAAQ,UAExBM,UAEErB,EAAa/G,IAAI,CAAEpE,KAAMoP,EAAclP,WAAYiP,GAAM,E,0CA0B3DP,GACAzD,EAAa/G,IAAI,CAAEpE,KAAMoP,I,iBAM7B5C,I,mEAvUAT,EAAc,CAAEG,OAAQ,UACxBM,I,IACApB,GAAa,SACPlI,EAAA,EAAMqM,QAAQ,G,MACdC,EAAW3L,SAAS+J,cAAc,mBACxC4B,EAASlC,UAAUG,IAAI,cACL,IAAI,UAAO+B,E,CACzBC,QAASlG,EAAQmG,QACjB5E,YAAasE,EACbO,aAAc,eACdC,oBAAoB,EACpBC,qBAAsB,kBACtBC,QAAS,CAACC,EAAYC,KAClB7E,EAAa/G,IAAI,CAAEpE,KAAMoP,EAAclJ,aAAa,GAAO,G,uBAkM3C1C,GACxB+K,EAAQ/K,EAAMyM,OAAOrL,K,iBAGKpB,G,MACpBxD,EAAOwD,EAAMyM,OAAOrL,KAAK5E,KACzB6B,QAAiB,QAAQ,CAC3B/B,cAAeyJ,EAAQzJ,cACvBC,WAAYwJ,EAAQxJ,WACpBK,cAAeJ,I,IAEd6B,EAAST,M,YACV8O,MAAM,GAAGlQ,gB,MAGP4E,EAAO/C,EAASV,QAAQ,GACzByD,EAAK5E,OAEN4E,EAAK5E,KAAOuJ,EAAQlD,UAExBgG,EAAWzH,E,iBAyBKA,G,MACVuL,EAAYvL,EAAK5E,KAAKmH,MAAM,KAC5BiJ,EAAYhB,EAAajI,MAAM,K,IACjCkJ,GAAU,E,UACJ5I,KAAO0I,EAEbE,EAAUA,GAAYF,EAAU1I,KAAS2I,EAAU3I,G,OAEhD4I,C,mBAqCOvN,G,MACRwN,EAAW,IAAIC,sBAChBC,I,UACcC,KAASD,E,GACZC,EAAMC,eAAgB,C,MAChB1Q,EAAO8C,EAAKoK,QAAQyD,UACpBnQ,EAAOiE,SAAS3B,EAAKoK,QAAQ0D,eACnCzF,EAAa/G,IAAI,CACb+B,aAAcnG,EACRQ,Q,KAKpBqQ,UAAW,EAAGC,KAAM,KAAMC,OAAQ,QAGxClF,OAAOmF,Y,KACHV,EAASW,QAAQnO,EAAK,GACvB,I,MA4CgDmM,EAAY,I,IAyBpBlB,I,IAwBH1B,EAAW9C,EAAQlD,U,IACPgG,EAAW9C,EAAQlD,U,GAe3BkI,EAAQjI,G,UAyBAgJ,EAAY,K,gBACN3G,YAAa,EAAK,I,0BAcjBA,YAAa,EAAI,G,QAcf6C,GAAW,G,QAYXA,GAAW,G,GA6BRc,IACxBuB,EAAmBjJ,EAAM0H,G,GAClBA,IAAMI,EAAU9H,EAAM0H,G,IA2E7BiC,EAAQlD,G,KAhQxCmB,IACAkB,GAAiB,E,iLCnZ7B,GAAU,CAAC,EAEf,GAAQjE,kBAAoB,IAC5B,GAAQC,cAAgB,IACxB,GAAQC,OAAS,IACjB,GAAQC,OAAS,IACjB,GAAQC,mBAAqB,IAEhB,IAAI,KAAS,IAKJ,MAAW,KAAQC,QAAS,KAAQA,O,6LC6GtC,EAAwB,Q,4QAKL,EAAK,IAACK,W,mCAA7B,SAAyC,M,iFAJlC,EAAc,I,WAAgB,EAAO,IAACvH,I,gBAA3C,OAAI,M,8MAAC,EAAc,I,uNACjB,SAAqF,O,oCAA/CgC,KAAM,EAAO,IAAEsM,aAAc,EAAY,M,mEAAzCtM,KAAM,EAAO,IAAEsM,aAAc,EAAY,I,4JAOnF,QAAG,2B,UAAP,SAAqC,M,4DAVpC,EAAc,U,GASb,EAAc,S,kIAS0C,QAAG,a,qTA3BtD,EAAO,GAACC,OAAS,O,UAFpC,SA+BM,QAxBF,SAgBM,K,6DAEN,SAKC,K,kGAnBQ,EAAc,G,uDASb,EAAc,G,0EAlBT,EAAO,GAACA,OAAS,O,sHAnH5BC,EAEAC,EADAC,GAAe,E,MAIb/O,GAAS,QAAW,W,kCACpBgP,EAAUhI,EAAQgI,QAClBC,EAAoB3N,SAAS4N,eAAeF,GAG5CvG,GAAgB,QAAW,kB,kCAC3BC,GAAe,QAAW,gBAG1BF,GAAqB,QAAW,sB,SAgD7B2G,IACgC,IAAjCnI,EAAQ6C,sBAA8BqC,EAAezN,OAAS,GAC9D,YACIwQ,EAAkBG,gBAAgB/D,cAC9B,mCAAiC,CAGjCgE,UAAW,QACXC,UAAW,IACXC,SAAWxF,I,IACHyF,EAAc,GAClBzF,EAAE5I,OAAOqJ,iBAAiB,kBAAkBhG,SAASiG,IACjD+E,EAAY9Q,KAAK+L,EAAGE,QAAc,KAAE,IAExC8E,EAAaD,EAAY,G,UAepCC,EAAa/G,G,MACZgH,EAAWhH,EAAatD,KAAK4B,EAAQ2I,WAC3CV,EAAkBtC,MAAQ+C,EAC1BT,EAAkB7N,cAAcwO,GAAA,EAAOC,e,+BA9E3C,SAAQ1S,gB,uBAgCE2S,EAAe9I,EAAQ+I,UAAUtR,OACjCuI,EAAQ+I,UACRd,GAAmBtC,MACjBsC,EAAkBtC,MAAM/H,MAAMoC,EAAQ2I,W,OAGzCG,EAAarR,O,mBAIlByN,QAAuB,QAAoB4D,EAAc9I,GAAO,GAChE0B,EAAa1E,QAAO,IAAMkI,EAAepB,KAAKrD,GAAMA,EAAEpH,O,CA1ChD2P,GACNb,I,KACAJ,GAAe,EAAK,I,2CAuFhB7C,EAAezN,QAAWsQ,IAC1BU,E,eAvBA1I,EAAQ,G,OACZmF,EAAe1H,SAASnC,IACpB0E,EAAMrI,KAAK2D,EAAKhC,IAAI,IAEjB0G,C,CAmBUkJ,IACbd,K,kCAlFAnI,EAAQkJ,uBAAuBC,eAC/BrB,EAAyB,kBACrB9H,EAAQkJ,sBAAsBC,eAKjCrB,GAAwBsB,YACzBtB,EAAyB,kBACrB,mC,WAKUuB,GAClB5H,EAAczE,QAAQqC,GACXA,EAAErE,QAAQyF,GAAMA,EAAEpH,MAAQgQ,MAErC3H,EAAa1E,QAAO,IAAMkI,EAAepB,KAAKrD,GAAMA,EAAEpH,O,WAqDvBE,EAAM+P,GACnB,IAAIxB,EAAuBsB,UAAU,CACnDjP,OAAQZ,EACD+P,S,oBAsBMjE,GAAsBH,EAAezN,OAAqB,G,gBAoB3C4N,GAAsB,EAAI,G,4CA1BnDwC,EAAG,E,uGCzHMrL,EAAAA,EAAAA,KAAS,G,2aCYlB+B,GAAQ,G,MACRqJ,GAAK,G,WACLpR,GAAU,G,YACV+S,GAAW,G,cACXhT,GAAa,G,KACbsG,EAAO,UAAQ,G,SACfC,EAAW,IAAE,G,QACbqJ,EAAU,IAAE,G,SACZqD,EAAW,IAAE,G,gBACb1S,EAAkB,IAAH,G,gBACfC,EAAkB,CAAC,SAAU,MAAO,QAAK,G,qBACzC8L,GAAuB,GAAE,G,UACzB8F,GAAS,G,UACTI,EAAY,IAAH,G,MACTrM,EAAQ,CAAC,GAAJ,G,QACLsL,GAAO,G,OACPyB,GAAM,G,UACNlK,GAAS,G,aACTjE,GAAY,G,gBACZR,GAAe,G,qBACfK,GAAoB,G,MACpBuO,EAAQ,IAAE,G,sBACVR,EAAwB,CAAC,GAAJ,E,MAE1BS,EAAM,IAAOC,UAAU,uBDlC1B,WACH,IAAIrI,GAAc/E,EAAAA,EAAAA,IAAS,KAC3BqN,EAAAA,EAAAA,GAAW,cAAetI,EAC9B,CCkCIuI,GDrBG,WACH,IAAI9Q,GAASwD,EAAAA,EAAAA,IAAS,CAAC,IACvBqN,EAAAA,EAAAA,GAAW,SAAU7Q,EACzB,CCmBI+Q,GDjCG,WACH,IAAIzN,GAAYE,EAAAA,EAAAA,IAAS,CAAC,IAC1BqN,EAAAA,EAAAA,GAAW,YAAavN,EAC5B,CC+BI0N,GD5BG,WACH,IAAIC,GAAWzN,EAAAA,EAAAA,IAAS,KACxBqN,EAAAA,EAAAA,GAAW,gBAAiBI,EAChC,CC0BIC,GDnBG,WACH,IAAI1I,GAAqBhF,EAAAA,EAAAA,KAAS,IAClCqN,EAAAA,EAAAA,GAAW,qBAAsBrI,EACrC,CCiBI2I,GDfG,WACH,IAAIC,GAAU5N,EAAAA,EAAAA,IAAS,KACvBqN,EAAAA,EAAAA,GAAW,eAAgBO,EAC/B,CCaIC,GDXG,WACH,IAAIC,GAAW9N,EAAAA,EAAAA,IAAS,KACxBqN,EAAAA,EAAAA,GAAW,cAAeS,EAC9B,CCSIC,G,MAGMhJ,GAAc,QAAW,e,kCAE1BsE,E,GACG2D,GAAY1M,G,WAEZ+I,EAA6C,GAA9B2D,EAASzR,QAAQ+E,GAAiBA,EAAW0M,EAAQ,GAEhE1M,GACA+I,GAAgB/I,GACkB,GAAlC+I,EAAa9N,QAAQ+E,K,WAGrB+I,EAAeA,EAAa3J,QAAQY,EAAU,IAAE,O,OAI9C0N,EAAY,IAAIC,IAAIlU,GAAemU,SAAS9M,MAAM,KACxDd,EACIyM,GAAW,WACX1D,EACI2E,EAAUzP,MAAM,EAAGyP,EAAU/S,OAAS,GAAG2G,KAAK,MAAQ,IAAG,E,KAIrEpF,GAAS,QAAW,U,gDACxBgH,EAAU,CACAnD,OACMrG,aACC+S,cACEhT,gBACRqR,QACGrJ,WACAzB,WACDqJ,UACCqD,WACO1S,kBACAC,kBACK8L,uBACX8F,YACAI,YACJrM,QACEsL,UACTxH,cAAeiJ,EACJlK,YACGjE,eACGR,kBACKK,uBACtBnE,SAAU0S,EACaR,yB,GAG3BS,EAAIgB,MAAM,mBAAmB3C,kBAAwBhQ,KAAKC,UAAU+H,M","sources":["webpack://@plone/mockup/./src/pat/contentbrowser/src/utils.js","webpack://@plone/mockup/./src/pat/contentbrowser/src/SelectedItems.svelte","webpack://@plone/mockup/./src/pat/contentbrowser/src/ContentBrowser.svelte","webpack://@plone/mockup/./src/pat/contentbrowser/src/ContentStore.js","webpack://@plone/mockup/Favorites.svelte","webpack://@plone/mockup/RecentlyUsed.svelte","webpack://@plone/mockup/./src/pat/contentbrowser/src/ContentBrowser.svelte?b152","webpack://@plone/mockup/ContentBrowser.svelte","webpack://@plone/mockup/./src/pat/contentbrowser/src/SelectedItems.svelte?3587","webpack://@plone/mockup/SelectedItems.svelte","webpack://@plone/mockup/./src/pat/contentbrowser/src/stores.js","webpack://@plone/mockup/App.svelte"],"sourcesContent":["import utils from \"../../../core/utils.js\";\nimport I18n from \"../../../core/i18n.js\";\n\nexport async function request({\n    method = \"GET\",\n    vocabularyUrl = null,\n    attributes = [],\n    path = null,\n    uids = null,\n    searchTerm = null,\n    searchPath = null,\n    levelInfoPath = null,\n    selectableTypes = [],\n    browseableTypes = [],\n    pageSize = 100,\n    page = 1,\n}) {\n    let vocabQuery = {\n        criteria: [],\n    };\n    if (path) {\n        // query sublevel of path\n        vocabQuery = {\n            criteria: [\n                {\n                    i: \"path\",\n                    o: \"plone.app.querystring.operation.string.path\",\n                    v: `${path}::1`,\n                },\n            ],\n            sort_on: \"getObjPositionInParent\",\n            sort_order: \"ascending\",\n        };\n        if (selectableTypes.length) {\n            // we need to append browseableTypes here in order to\n            // preserve browsing subitems\n            vocabQuery.criteria.push({\n                i: \"portal_type\",\n                o: \"plone.app.querystring.operation.list.contains\",\n                v: selectableTypes.concat(browseableTypes),\n            })\n        }\n    }\n    if (levelInfoPath) {\n        // query exact path\n        vocabQuery = {\n            criteria: [\n                {\n                    i: \"path\",\n                    o: \"plone.app.querystring.operation.string.path\",\n                    v: `${levelInfoPath}::0`,\n                },\n            ],\n        };\n    }\n    if (searchPath) {\n        // search from searchPath down\n        vocabQuery = {\n            criteria: [\n                {\n                    i: \"path\",\n                    o: \"plone.app.querystring.operation.string.path\",\n                    v: searchPath,\n                },\n            ],\n        };\n        if (selectableTypes.length) {\n            vocabQuery.criteria.push({\n                i: \"portal_type\",\n                o: \"plone.app.querystring.operation.list.contains\",\n                v: selectableTypes,\n            })\n        }\n    }\n    if (uids) {\n        vocabQuery = {\n            criteria: [\n                {\n                    i: \"UID\",\n                    o: \"plone.app.querystring.operation.list.contains\",\n                    v: uids,\n                },\n            ],\n        };\n    }\n    if (searchTerm) {\n        vocabQuery.criteria.push({\n            i: \"SearchableText\",\n            o: \"plone.app.querystring.operation.string.contains\",\n            v: `${searchTerm}`,\n\n        })\n    }\n\n    if (!vocabQuery.criteria.length) {\n        return {\n            results: [],\n            total: 0,\n        }\n    };\n\n    let url = `${vocabularyUrl}${vocabularyUrl.indexOf(\"?\") !== -1 ? \"&\" : \"?\"}query=${JSON.stringify(\n        vocabQuery\n    )}&attributes=${JSON.stringify(attributes)}&batch=${JSON.stringify({\n        page: page,\n        size: pageSize,\n    })}`;\n\n    let headers = new Headers();\n    headers.set(\"Accept\", \"application/json\");\n\n    const response = await fetch(url, {\n        method: method,\n        headers: headers,\n    });\n\n    if (!response.ok) {\n        return {\n            results: [],\n            total: 0,\n            errors: json.errors,\n        };\n    }\n\n    const json = await response.json();\n\n    if (!searchPath && !levelInfoPath && selectableTypes.length) {\n        // we iter through response and filter out non-selectable\n        // types but keep folderish types to maintain browsing\n        // the content structure.\n        const filtered_response = {\n            results: [],\n            total: json.total,\n        }\n        for (const it of json.results) {\n            if (selectableTypes.indexOf(it.portal_type) != -1 || it.is_folderish) {\n                filtered_response.results.push(it);\n            }\n        }\n        return filtered_response;\n    }\n    return json;\n}\n\nexport async function get_items_from_uids(uids, config) {\n    if (!uids) {\n        return [];\n    }\n    const selectedItemsFromUids = await request({\n        vocabularyUrl: config.vocabularyUrl,\n        attributes: config.attributes,\n        uids: uids,\n    });\n    let results = (await selectedItemsFromUids?.results) || [];\n    // resort the results based on the order of uids\n    results.sort((a, b) => {\n        return uids.indexOf(a.UID) - uids.indexOf(b.UID);\n    })\n    return results;\n}\n\n\n/** use Plone resolveIcon to load a SVG icon and replace node with icon code */\nexport async function resolveIcon(node, { iconName }) {\n    async function getIcon(iconName) {\n        const icon = await utils.resolveIcon(iconName)\n        return icon;\n    }\n    const iconCode = await getIcon(iconName);\n    node.outerHTML = iconCode;\n    return {\n        destroy() { },\n    };\n}\n\n/** Dispatch event on click outside of node */\nexport function clickOutside(node) {\n    const handleClick = (event) => {\n        if (node && !node.contains(event.target)) {\n            node.dispatchEvent(new CustomEvent(\"click_outside\", node));\n        }\n    };\n\n    document.addEventListener(\"click\", handleClick, true);\n\n    return {\n        destroy() {\n            document.removeEventListener(\"click\", handleClick, true);\n        },\n    };\n}\n\nexport function recentlyUsedItems(filterItems, config) {\n    let ret = utils.storage.get(config.recentlyUsedKey) || [];\n    // hard-limit to 1000 entries\n    ret = ret.slice(ret.length - 1000, ret.length);\n    if (filterItems && config?.selectableTypes.length) {\n        ret = ret.filter((it) => {\n            return config.selectableTypes.indexOf(it.portal_type) != -1;\n        });\n    }\n    // max is applied AFTER filtering selectable items.\n    const max = parseInt(config.recentlyUsedMaxItems, 20);\n    if (max) {\n        // return the slice from the end, as we want to display newest items first.\n        ret = ret.slice(ret.length - max, ret.length);\n    }\n    return ret;\n}\n\nexport function updateRecentlyUsed(item, config) {\n    if (!config.recentlyUsed) {\n        return;\n    }\n    // add to recently added items\n    const recentlyUsed = recentlyUsedItems(false, config); // do not filter for selectable but get all. append to that list the new item.\n    const alreadyPresent = recentlyUsed.filter((it) => {\n        return it.UID === item.UID;\n    });\n    if (alreadyPresent.length > 0) {\n        recentlyUsed.splice(recentlyUsed.indexOf(alreadyPresent[0]), 1);\n    }\n    recentlyUsed.push(item);\n    utils.storage.set(config.recentlyUsedKey, recentlyUsed);\n}\n\n\nexport function formatDate(dateval) {\n    // fix underscore replacement by /mockup/src/core/i18n.js\n    // the \"wrong\" fix in i18n.js exists for use by select2 and tinymce\n    // this fix should be moved to the mockup modules of tinymce and select\n    // see: https://github.com/plone/mockup/issues/1429\n    const d = Date.parse(dateval);\n    const i18n = new I18n();\n    return new Date(d).toLocaleString(i18n.currentLanguage.replace(\"_\", \"-\"));\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".content-browser-selected-items-wrapper.svelte-awokap{display:flex;align-items:start}.content-browser-selected-items.svelte-awokap{list-style:none;background-color:var(--bs-body-bg);border-radius:var(--bs-border-radius) 0 0 var(--bs-border-radius);border:var(--bs-border-style) var(--bs-border-color) var(--bs-border-width);min-height:2.4rem;padding:.5rem .5rem 0 .5rem;flex:1 1 auto}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pat/contentbrowser/src/SelectedItems.svelte\"],\"names\":[],\"mappings\":\"AAAA,sDAAA,YAAA,CAAA,iBAAA,CAAA,8CAAA,eAAA,CAAA,kCAAA,CAAA,iEAAA,CAAA,2EAAA,CAAA,iBAAA,CAAA,2BAAA,CAAA,aAAA\",\"sourcesContent\":[\".content-browser-selected-items-wrapper.svelte-awokap{display:flex;align-items:start}.content-browser-selected-items.svelte-awokap{list-style:none;background-color:var(--bs-body-bg);border-radius:var(--bs-border-radius) 0 0 var(--bs-border-radius);border:var(--bs-border-style) var(--bs-border-color) var(--bs-border-width);min-height:2.4rem;padding:0.5rem 0.5rem 0 0.5rem;flex:1 1 auto}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".content-browser-position-wrapper.svelte-leztjf.svelte-leztjf.svelte-leztjf{position:fixed;top:0;right:0;display:flex;justify-content:end;z-index:1500;width:100%;height:100vh;background-color:rgba(0,0,0,.25)}.btn-xs.svelte-leztjf.svelte-leztjf.svelte-leztjf{--bs-btn-padding-y:0.15rem;--bs-btn-padding-x:0.5rem;--bs-btn-font-size:0.75rem}.content-browser.svelte-leztjf.svelte-leztjf.svelte-leztjf{height:100vh;min-width:450px;background-color:var(--bs-light-bg-subtle);border-left:var(--bs-border-style) var(--bs-border-width) #fff;z-index:1500;display:flex;flex-direction:column}.toolBar.svelte-leztjf.svelte-leztjf.svelte-leztjf{background-color:var(--bs-primary);padding:.325rem .75rem;color:var(--bs-light);width:100%;display:flex;justify-content:start}.toolBar.svelte-leztjf svg{vertical-align:-0.125em}.levelColumns.svelte-leztjf.svelte-leztjf.svelte-leztjf{display:flex;flex-wrap:nowrap;width:100%;overflow-y:hidden;overflow-x:auto;flex-grow:3;border-left:var(--bs-border-style) var(--bs-border-color) var(--bs-border-width);user-select:none}.levelColumn.svelte-leztjf.svelte-leztjf.svelte-leztjf{width:320px;background:rgba(var(--bs-secondary-bg-rgb), 0.55);border-right:var(--bs-border-style) var(--bs-border-width) var(--bs-border-color);display:flex;flex-direction:column;flex-grow:0;flex-shrink:0}.levelColumn.active.svelte-leztjf.svelte-leztjf.svelte-leztjf{background:var(--bs-body-bg);border-left:var(--bs-border-style) var(--bs-border-width) var(--bs-primary);margin-left:-1px}.levelToolbar.svelte-leztjf.svelte-leztjf.svelte-leztjf{width:100%;min-height:2.5rem;display:flex;justify-content:space-between;white-space:nowrap;padding:.375rem;border-bottom:var(--bs-border-style) var(--bs-border-width) var(--bs-border-color)}.levelToolbar.svelte-leztjf>.levelActions.svelte-leztjf.svelte-leztjf{margin-left:auto;display:flex}.levelToolbar.svelte-leztjf>button.svelte-leztjf.svelte-leztjf{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.levelItems.svelte-leztjf.svelte-leztjf.svelte-leztjf{overflow-x:auto}.contentItem.svelte-leztjf.svelte-leztjf.svelte-leztjf{display:flex;align-items:center;justify-content:space-between;font-size:90%;min-height:2rem}.contentItem.svelte-leztjf.svelte-leztjf.svelte-leztjf:focus-visible{outline:none}.contentItem.even.svelte-leztjf.svelte-leztjf.svelte-leztjf{background-color:rgba(var(--bs-secondary-bg-rgb), 0.4)}.contentItem.inPath.svelte-leztjf.svelte-leztjf.svelte-leztjf,.contentItem.selectedItem.svelte-leztjf.svelte-leztjf.svelte-leztjf{background-color:rgba(var(--bs-primary-rgb), 0.15)}.contentItem.svelte-leztjf>.svelte-leztjf.svelte-leztjf{padding:.5rem;white-space:nowrap;max-width:450px;text-overflow:ellipsis;overflow:hidden}.contentItem.svelte-leztjf>.browseSub.svelte-leztjf.svelte-leztjf{flex-shrink:0}.contentItem.svelte-leztjf .plone-icon.svelte-leztjf.svelte-leztjf{display:inline-block}.contentItem.svelte-leztjf .grid-preview.svelte-leztjf>img.svelte-leztjf{width:95px;height:95px;object-fit:cover;float:left;margin-right:1rem}.preview.svelte-leztjf.svelte-leztjf.svelte-leztjf{width:320px;flex-shrink:0;min-height:300px}.preview.svelte-leztjf .info.svelte-leztjf.svelte-leztjf{padding:.5rem;width:100%;word-wrap:anywhere}.preview.svelte-leztjf .info .previewIcon.svelte-leztjf.svelte-leztjf{margin:0 auto 1rem auto}.preview.svelte-leztjf .info .previewIcon svg.svelte-leztjf.svelte-leztjf{width:50px !important;height:50px !important}.preview.svelte-leztjf img.svelte-leztjf.svelte-leztjf{max-width:100%;height:auto;margin-bottom:.5rem}.upload-wrapper.svelte-leztjf.svelte-leztjf.svelte-leztjf{padding:1rem;width:540px;overflow-x:auto;flex-shrink:0}.loadmore.svelte-leztjf.svelte-leztjf.svelte-leztjf{text-align:center;padding:.25rem 0}.select-button-ellipsis.svelte-leztjf.svelte-leztjf.svelte-leztjf{white-space:nowrap;max-width:150px;text-overflow:ellipsis;overflow:hidden}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pat/contentbrowser/src/ContentBrowser.svelte\"],\"names\":[],\"mappings\":\"AAAA,4EAAA,cAAA,CAAA,KAAA,CAAA,OAAA,CAAA,YAAA,CAAA,mBAAA,CAAA,YAAA,CAAA,UAAA,CAAA,YAAA,CAAA,gCAAA,CAAA,kDAAA,0BAAA,CAAA,yBAAA,CAAA,0BAAA,CAAA,2DAAA,YAAA,CAAA,eAAA,CAAA,0CAAA,CAAA,8DAAA,CAAA,YAAA,CAAA,YAAA,CAAA,qBAAA,CAAA,mDAAA,kCAAA,CAAA,sBAAA,CAAA,qBAAA,CAAA,UAAA,CAAA,YAAA,CAAA,qBAAA,CAAA,2BAAA,uBAAA,CAAA,wDAAA,YAAA,CAAA,gBAAA,CAAA,UAAA,CAAA,iBAAA,CAAA,eAAA,CAAA,WAAA,CAAA,gFAAA,CAAA,gBAAA,CAAA,uDAAA,WAAA,CAAA,iDAAA,CAAA,iFAAA,CACmC,YAAA,CAAA,qBAAA,CAAA,WAAA,CAAA,aAAA,CAAA,8DAAA,4BAAA,CAAA,2EAAA,CAAA,gBAAA,CAAA,wDAAA,UAAA,CAAA,iBAAA,CAAA,YAAA,CAAA,6BAAA,CAAA,kBAAA,CAAA,eAAA,CAAA,kFAAA,CACA,sEAAA,gBAAA,CAAA,YAAA,CAAA,+DAAA,kBAAA,CAAA,eAAA,CAAA,sBAAA,CAAA,sDAAA,eAAA,CAAA,uDAAA,YAAA,CAAA,kBAAA,CAAA,6BAAA,CAAA,aAAA,CAAA,eAAA,CAAA,qEAAA,YAAA,CAAA,4DAAA,sDAAA,CAAA,kIAAA,kDAAA,CAAA,wDAAA,aAAA,CAAA,kBAAA,CAAA,eAAA,CAAA,sBAAA,CAAA,eAAA,CAAA,kEAAA,aAAA,CAAA,mEAAA,oBAAA,CAAA,yEAAA,UAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,UAAA,CAAA,iBAAA,CAAA,mDAAA,WAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,yDAAA,aAAA,CAAA,UAAA,CAAA,kBAAA,CAAA,sEAAA,uBAAA,CAAA,0EAAA,qBAAA,CAAA,sBAAA,CAAA,uDAAA,cAAA,CAAA,WAAA,CAAA,mBAAA,CAAA,0DAAA,YAAA,CAAA,WAAA,CAAA,eAAA,CAAA,aAAA,CAAA,oDAAA,iBAAA,CAAA,gBAAA,CAAA,kEAAA,kBAAA,CAAA,eAAA,CAAA,sBAAA,CAAA,eAAA\",\"sourcesContent\":[\".content-browser-position-wrapper.svelte-leztjf.svelte-leztjf.svelte-leztjf{position:fixed;top:0;right:0;display:flex;justify-content:end;z-index:1500;width:100%;height:100vh;background-color:rgba(0, 0, 0, 0.25)}.btn-xs.svelte-leztjf.svelte-leztjf.svelte-leztjf{--bs-btn-padding-y:0.15rem;--bs-btn-padding-x:0.5rem;--bs-btn-font-size:0.75rem}.content-browser.svelte-leztjf.svelte-leztjf.svelte-leztjf{height:100vh;min-width:450px;background-color:var(--bs-light-bg-subtle);border-left:var(--bs-border-style) var(--bs-border-width) #fff;z-index:1500;display:flex;flex-direction:column}.toolBar.svelte-leztjf.svelte-leztjf.svelte-leztjf{background-color:var(--bs-primary);padding:0.325rem 0.75rem;color:var(--bs-light);width:100%;display:flex;justify-content:start}.toolBar.svelte-leztjf svg{vertical-align:-0.125em}.levelColumns.svelte-leztjf.svelte-leztjf.svelte-leztjf{display:flex;flex-wrap:nowrap;width:100%;overflow-y:hidden;overflow-x:auto;flex-grow:3;border-left:var(--bs-border-style) var(--bs-border-color) var(--bs-border-width);user-select:none}.levelColumn.svelte-leztjf.svelte-leztjf.svelte-leztjf{width:320px;background:rgba(var(--bs-secondary-bg-rgb), 0.55);border-right:var(--bs-border-style) var(--bs-border-width)\\n            var(--bs-border-color);display:flex;flex-direction:column;flex-grow:0;flex-shrink:0}.levelColumn.active.svelte-leztjf.svelte-leztjf.svelte-leztjf{background:var(--bs-body-bg);border-left:var(--bs-border-style) var(--bs-border-width) var(--bs-primary);margin-left:-1px}.levelToolbar.svelte-leztjf.svelte-leztjf.svelte-leztjf{width:100%;min-height:2.5rem;display:flex;justify-content:space-between;white-space:nowrap;padding:0.375rem;border-bottom:var(--bs-border-style) var(--bs-border-width)\\n            var(--bs-border-color)}.levelToolbar.svelte-leztjf>.levelActions.svelte-leztjf.svelte-leztjf{margin-left:auto;display:flex}.levelToolbar.svelte-leztjf>button.svelte-leztjf.svelte-leztjf{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.levelItems.svelte-leztjf.svelte-leztjf.svelte-leztjf{overflow-x:auto}.contentItem.svelte-leztjf.svelte-leztjf.svelte-leztjf{display:flex;align-items:center;justify-content:space-between;font-size:90%;min-height:2rem}.contentItem.svelte-leztjf.svelte-leztjf.svelte-leztjf:focus-visible{outline:none}.contentItem.even.svelte-leztjf.svelte-leztjf.svelte-leztjf{background-color:rgba(var(--bs-secondary-bg-rgb), 0.4)}.contentItem.inPath.svelte-leztjf.svelte-leztjf.svelte-leztjf,.contentItem.selectedItem.svelte-leztjf.svelte-leztjf.svelte-leztjf{background-color:rgba(var(--bs-primary-rgb), 0.15)}.contentItem.svelte-leztjf>.svelte-leztjf.svelte-leztjf{padding:0.5rem;white-space:nowrap;max-width:450px;text-overflow:ellipsis;overflow:hidden}.contentItem.svelte-leztjf>.browseSub.svelte-leztjf.svelte-leztjf{flex-shrink:0}.contentItem.svelte-leztjf .plone-icon.svelte-leztjf.svelte-leztjf{display:inline-block}.contentItem.svelte-leztjf .grid-preview.svelte-leztjf>img.svelte-leztjf{width:95px;height:95px;object-fit:cover;float:left;margin-right:1rem}.preview.svelte-leztjf.svelte-leztjf.svelte-leztjf{width:320px;flex-shrink:0;min-height:300px}.preview.svelte-leztjf .info.svelte-leztjf.svelte-leztjf{padding:0.5rem;width:100%;word-wrap:anywhere}.preview.svelte-leztjf .info .previewIcon.svelte-leztjf.svelte-leztjf{margin:0 auto 1rem auto}.preview.svelte-leztjf .info .previewIcon svg.svelte-leztjf.svelte-leztjf{width:50px !important;height:50px !important}.preview.svelte-leztjf img.svelte-leztjf.svelte-leztjf{max-width:100%;height:auto;margin-bottom:0.5rem}.upload-wrapper.svelte-leztjf.svelte-leztjf.svelte-leztjf{padding:1rem;width:540px;overflow-x:auto;flex-shrink:0}.loadmore.svelte-leztjf.svelte-leztjf.svelte-leztjf{text-align:center;padding:0.25rem 0}.select-button-ellipsis.svelte-leztjf.svelte-leztjf.svelte-leztjf{white-space:nowrap;max-width:150px;text-overflow:ellipsis;overflow:hidden}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { writable, get } from \"svelte/store\";\nimport { request } from \"./utils.js\";\n\nexport default function (config, pathCache) {\n    const store = writable([]);\n\n    const load = async (query) => {\n        let defaults = {\n            vocabularyUrl: config.vocabularyUrl,\n            attributes: config.attributes,\n            pageSize: config.pageSize,\n            browseableTypes: config.browseableTypes,\n        };\n        query = {\n            ...defaults,\n            ...query,\n        }\n        if (config.selectableTypes.length) {\n            query[\"selectableTypes\"] = config.selectableTypes;\n        }\n        try {\n            return await request(query);\n        }\n        catch {\n            return {\n                \"error\": \"Could load data from backend.\"\n            };\n        }\n    }\n\n    const browse = async (path, searchTerm, updateCache) => {\n\n        let rootPath = config.rootPath;\n        let rootPathParts = rootPath.replace(/^\\/+/, '').split(\"/\");\n        let physicalPath = path;\n        let hideRootPath = rootPath;\n\n        if (!physicalPath.startsWith(rootPath)) {\n            // The path from the returned items from \"vocabularyUrl\" are starting\n            // relative from the Plone Site. So we need to generate the phyiscalPath here.\n            if (rootPathParts.length === 1) {\n                physicalPath = rootPath + physicalPath;\n            } else {\n                // We also have to merge the rootPath and the clicked path correctly for example:\n                // rootPath: /Plone/media, clicked path: /media/subfolder\n                // has to become:\n                // /Plone/media/subfolder\n                let pathParts = physicalPath.replace(/^\\/+/, '').split(\"/\");\n                let overlapIdx = rootPathParts.length;\n                for (let idx = 0; idx < rootPathParts.length; idx++) {\n                    if (rootPathParts[idx] === pathParts[0]) {\n                        overlapIdx = idx;\n                        break;\n                    }\n                }\n                hideRootPath = \"/\" + (rootPathParts.filter(it => pathParts.includes(it))).join(\"/\");\n                physicalPath = \"/\" + (rootPathParts.slice(1, overlapIdx).concat(pathParts)).join(\"/\");\n            }\n        }\n\n        let paths = [];\n        let parts = physicalPath.split(\"/\") || [];\n        const maxDepth = Math.min(parts.length, config.maxDepth || 999);\n\n        let partsToShow = parts.slice(parts.length - maxDepth, parts.length);\n        let partsToHide = parts.slice(0, parts.length - maxDepth);\n        const pathPrefix = partsToHide.join(\"/\");\n\n        while (partsToShow.length > 0) {\n            let sub_path = partsToShow.join(\"/\").replace(/^\\//, \"\");\n            const poped = partsToShow.pop();\n            sub_path = pathPrefix + ((poped != \"\") ? `/${sub_path}` : \"\");\n            if (sub_path && paths.indexOf(sub_path) === -1) paths.push(sub_path);\n            if (sub_path == rootPath) {\n                // respect rootPath\n                break;\n            }\n        }\n\n        const pC = get(pathCache);\n        let levels = [];\n        let pathCounter = 0;\n\n        for (var p of paths) {\n            pathCounter++;\n            const isFirstPath = pathCounter == 1;\n            let level = {};\n            if (\n                !(p in pC) ||  // new path not found in cache\n                (isFirstPath && searchTerm) ||  // filtering the level\n                updateCache  // manual cache update request\n            ) {\n                let query = {\n                    path: p,\n                };\n\n                if (isFirstPath && searchTerm) {\n                    query[\"searchTerm\"] = \"*\" + searchTerm + \"*\";\n                }\n\n                level = await load(query);\n\n                // check if there is more than the current batch\n                level.more = config.pageSize < level.total;\n                // save possible search filter for later batch loading\n                level.searchTerm = searchTerm;\n                level.page = 1;\n                level.path = p;\n                level.displayPath = p.replace(new RegExp(`^(${hideRootPath}|${rootPath})`), \"\") || \"/\"\n\n                // do not update cache when searching\n                if (!searchTerm) {\n                    const levelInfo = await load({\n                        levelInfoPath: p,\n                    });\n                    if (levelInfo.total) {\n                        level.UID = levelInfo.results[0].UID;\n                        level.Title = levelInfo.results[0].Title;\n                        level.portal_type = levelInfo.results[0].portal_type;\n                        level.getIcon = levelInfo.results[0].getIcon;\n                        // check if level is selectable (config.selectableTypes)\n                        level.selectable = (!config.selectableTypes.length || config.selectableTypes.indexOf(levelInfo.results[0].portal_type) != -1);\n                    }\n                    level.showFilter = false;\n                    pathCache.update((n) => {\n                        n[p] = level;\n                        return n;\n                    });\n                }\n            } else {\n                level = pC[p];\n            }\n            levels = [level, ...levels];\n        }\n        store.set(levels);\n    }\n\n    const search = async (searchTerm, page) => {\n        let query = {\n            searchPath: config.rootPath,\n            page: page,\n        };\n        if (searchTerm) {\n            if (searchTerm.length < 2) {\n                // minimum length of search term\n                return;\n            }\n            query[\"searchTerm\"] = \"*\" + searchTerm + \"*\";\n        }\n        let level = await load(query);\n        level.page = page;\n        level.searchTerm = searchTerm;\n\n        store.update((levels) => {\n            const has_more = (page * config.pageSize) < level.total;\n\n            // first time or new search\n            if (levels.length == 0 || levels[0].searchTerm != searchTerm) {\n                level.more = has_more;\n                level.selectable = false;\n                return [level,];\n            }\n\n            // has more ?\n            levels[0].more = has_more;\n            levels[0].page = level.page;\n\n            // append new batch\n            levels[0].results = [\n                ...levels[0].results,\n                ...level.results,\n            ];\n            return levels;\n        });\n    }\n\n    const nextBatch = async (p, page, searchTerm) => {\n        let query = {\n            path: p,\n            page: page,\n        };\n\n        if (searchTerm) {\n            query[\"searchTerm\"] = \"*\" + searchTerm + \"*\";\n        }\n\n        let level = await load(query);\n        level.more = (page * config.pageSize) < level.total;\n        level.page = page;\n\n        store.update((levels) => {\n            levels.forEach((l) => {\n                if (l.path != p) {\n                    return l;\n                }\n                l.page = level.page;\n                l.more = level.more;\n                l.results = [\n                    ...l.results,\n                    ...level.results,\n                ]\n            });\n            return levels;\n        });\n    }\n\n    store.get = async ({\n        path = \"\",\n        searchTerm = \"\",\n        updateCache = false,\n        loadMorePath = \"\",\n        page = 1,\n        mode = null,\n    }) => {\n        if(mode == null) {\n            mode = config.mode;\n        }\n        if (mode === \"search\") {\n            await search(searchTerm, page);\n        } else if (loadMorePath) {\n            const pC = get(pathCache);\n            if (!(loadMorePath in pC)) {\n                return;\n            }\n            let level = pC[loadMorePath];\n            if (page > level.page) {\n                await nextBatch(loadMorePath, page, level.searchTerm);\n            }\n        } else if (path) {\n            await browse(path, searchTerm, updateCache);\n        }\n\n    };\n\n    return store;\n}\n","<script>\n    import { resolveIcon } from \"./utils\";\n    import _t from \"../../../core/i18n-wrapper\";\n    import { createEventDispatcher, getContext } from \"svelte\";\n\n    const config = getContext(\"config\");\n    const dispatch = createEventDispatcher();\n\n    function select(item) {\n        dispatch(\"selectItem\", {\n            item: item,\n        });\n    }\n</script>\n\n{#if $config?.favorites}\n<div class=\"favorites dropdown dropdown-menu-end ms-2\">\n    <button\n        type=\"button\"\n        class=\"favorites dropdown-toggle btn btn-outline-light btn-sm\"\n        data-bs-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n    >\n        <svg use:resolveIcon={{ iconName: \"star-fill\" }} />\n        {_t(\"Favorites\")}\n    </button>\n    <ul class=\"dropdown-menu\">\n        {#each $config.favorites as favorite}\n        <li>\n            <a class=\"dropdown-item\" href=\"{favorite.path}\" on:click|preventDefault={() => select(favorite)}>{favorite.title}</a>\n        </li>\n        {/each}\n    </ul>\n</div>\n{/if}\n","<script>\n    import { resolveIcon, recentlyUsedItems } from \"./utils\";\n    import _t from \"../../../core/i18n-wrapper\";\n    import { createEventDispatcher, getContext } from \"svelte\";\n\n    const config = getContext(\"config\");\n    const items = recentlyUsedItems(true, $config);\n    const dispatch = createEventDispatcher();\n\n    function select(item) {\n        dispatch(\"selectItem\", {\n            item: item,\n        });\n    }\n</script>\n\n{#if $config.recentlyUsed && items.length}\n    <div class=\"recentlyUsed dropdown ms-2\">\n        <button\n            type=\"button\"\n            class=\"recentlyUsed dropdown-toggle btn btn-outline-light btn-sm\"\n            data-bs-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n        >\n            <svg use:resolveIcon={{ iconName: \"grid-fill\" }} />\n            {_t(\"Recently Used\")}\n        </button>\n        <ul class=\"dropdown-menu dropdown-menu-end\">\n            {#each items.reverse() as recentlyUsed}\n                <li>\n                    <a\n                        href={recentlyUsed.getURL || \"#\"}\n                        on:click|preventDefault={() => select(recentlyUsed)}\n                        class=\"dropdown-item\"\n                    >\n                        <svg\n                            use:resolveIcon={{\n                                iconName: `contenttype/${recentlyUsed?.portal_type.toLowerCase().replace(/\\.| /g, \"-\")}`,\n                            }}\n                        />\n                        {recentlyUsed.Title}\n                    </a>\n                </li>\n            {/each}\n        </ul>\n    </div>\n{/if}\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"../../../../node_modules/@patternslib/dev/webpack/style-inserter.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!../../../../node_modules/svelte-loader/index.js?cssPath=/home/runner/work/mockup/mockup/src/pat/contentbrowser/src/ContentBrowser.svelte.1.css!./ContentBrowser.svelte\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn;\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!../../../../node_modules/svelte-loader/index.js?cssPath=/home/runner/work/mockup/mockup/src/pat/contentbrowser/src/ContentBrowser.svelte.1.css!./ContentBrowser.svelte\";\n       export default content && content.locals ? content.locals : undefined;\n","<script>\n    import utils from \"@patternslib/patternslib/src/core/utils\";\n    import { getContext } from \"svelte\";\n    import * as animateScroll from \"svelte-scrollto\";\n    import { fly } from \"svelte/transition\";\n    import _t from \"../../../core/i18n-wrapper\";\n    import Upload from \"../../upload/upload\";\n    import contentStore from \"./ContentStore\";\n    import {\n        clickOutside,\n        formatDate,\n        get_items_from_uids,\n        request,\n        resolveIcon,\n        updateRecentlyUsed,\n    } from \"./utils\";\n    import Favorites from \"./Favorites.svelte\";\n    import RecentlyUsed from \"./RecentlyUsed.svelte\";\n\n    animateScroll.setGlobalOptions({\n        scrollX: true,\n        container: \".levelColumns\",\n        duration: 500,\n    });\n\n    // get context stores\n    const currentPath = getContext(\"currentPath\");\n    const config = getContext(\"config\");\n    const pathCache = getContext(\"pathCache\");\n    const showContentBrowser = getContext(\"showContentBrowser\");\n    const selectedItems = getContext(\"selectedItems\");\n    const selectedUids = getContext(\"selectedUids\");\n    const previewUids = getContext(\"previewUids\");\n\n    // initialize content browser store\n    const contentItems = contentStore($config, pathCache);\n\n    let showUpload = false;\n    let previewItem = {};\n    let keyboardNavInitialized = false;\n    let shiftKey = false;\n    let searchTerm = null;\n    let gridView = false;\n    let defaultConfigMode = $config.mode;\n\n    let vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n\n    function updatePreview({ data = null, uuid = null, action = \"show\" }) {\n        if (data && action == \"show\") {\n            previewItem = data;\n            $previewUids = [data.UID];\n        } else if (uuid && action == \"add\" && $previewUids.indexOf(uuid) === -1) {\n            if (\n                $config.maximumSelectionSize > 0 &&\n                $previewUids.length >= $config.maximumSelectionSize\n            ) {\n                // respect maximumSelectionSize\n                return;\n            }\n            $previewUids = [...$previewUids, uuid]; // NOTE: $previewUids.push() is not a reactive change\n        } else if (uuid && action == \"remove\" && $previewUids.indexOf(uuid) !== -1) {\n            previewUids.update((n) => {\n                n.splice(n.indexOf(uuid), 1);\n                return n;\n            });\n        } else if (action == \"clear\") {\n            previewItem = {};\n            $previewUids = [];\n        }\n    }\n\n    async function upload() {\n        updatePreview({ action: \"clear\" });\n        scrollToRight();\n        showUpload = true;\n        await utils.timeout(1);\n        const uploadEl = document.querySelector(\".upload-wrapper\");\n        uploadEl.classList.add(\"pat-upload\");\n        const patUpload = new Upload(uploadEl, {\n            baseUrl: $config.rootUrl,\n            currentPath: $currentPath,\n            relativePath: \"@@fileUpload\",\n            allowPathSelection: false,\n            hiddenInputContainer: \".upload-wrapper\",\n            success: (fileUpload, obj) => {\n                contentItems.get({ path: $currentPath, updateCache: true });\n            },\n        });\n    }\n\n    function showPreview(item) {\n        if ($config.mode == \"browse\") {\n            $previewUids = [item.UID];\n\n            if (item.is_folderish) {\n                // show folder\n                currentPath.set(item.path);\n            } else {\n                // show non folderish preview\n                const pathParts = item.path.split(\"/\");\n                const folderPath = pathParts.slice(0, pathParts.length - 1).join(\"/\");\n                currentPath.set(folderPath || \"/\");\n                updatePreview({ data: item });\n            }\n        } else {\n            updatePreview({ data: item });\n        }\n        scrollToRight();\n    }\n\n    function changePath(item, e) {\n        // always hide upload when changing path\n        showUpload = false;\n\n        // clear previous selection\n        updatePreview({ action: \"clear\" });\n\n        if (item === \"/\" || item === $config.rootPath) {\n            // clicked \"home\" button\n            currentPath.set($config.rootPath);\n            return;\n        }\n\n        // show clicked item\n        showPreview(item);\n    }\n\n    function clickItem(item, e) {\n        if (!keyboardNavInitialized) {\n            // if we've already clicked an element with the mouse\n            // do not start over keyboardnav\n            keyboardNavInitialized = true;\n        }\n\n        // check for multiselection\n        const levelWrapper = e.currentTarget.closest(\".levelItems\");\n        let prevSelection = levelWrapper.querySelectorAll(\".selectedItem\");\n\n        if (prevSelection.length && $config.maximumSelectionSize != 1) {\n            // check for pressed shift or ctrl/meta key for multiselection\n            if (shiftKey || e?.shiftKey) {\n                // iter through the wrapper children and select all\n                // inbetween current selection and last preview\n                let select = false;\n                for (const el of levelWrapper.children) {\n                    if ([item.UID, $previewUids[0]].indexOf(el.dataset.uuid) !== -1) {\n                        if (select) {\n                            // stop selecting but make sure the last item is selected too\n                            updatePreview({\n                                uuid: el.dataset.uuid,\n                                action: \"add\",\n                            });\n                            select = false;\n                            continue;\n                        }\n                        // start selecting\n                        select = true;\n                    }\n                    updatePreview({\n                        uuid: el.dataset.uuid,\n                        action: select ? \"add\" : \"remove\",\n                    });\n                }\n                shiftKey = false;\n            } else if (e?.metaKey || e?.ctrlKey) {\n                // de/select multiple single items\n                // NOTE: only for mouse click event\n                updatePreview({\n                    uuid: item.UID,\n                    action: $previewUids.indexOf(item.UID) == -1 ? \"add\" : \"remove\",\n                });\n            } else {\n                // unselect\n                [...prevSelection].map((el) => el.classList.remove(\"selectedItem\"));\n                changePath(item, e);\n            }\n        } else {\n            changePath(item, e);\n        }\n\n        e.currentTarget.focus(); // needed for keyboard navigation\n        e.currentTarget.classList.add(\"selectedItem\");\n    }\n\n    function initKeyboardNav() {\n        // focus first element when showing contentbrowser\n        if (keyboardNavInitialized) {\n            return;\n        }\n        const possibleFocusEls = [\n            ...document.querySelectorAll(\".levelColumn .inPath\"), // previously selected folder\n            ...document.querySelectorAll(\".levelColumn .selectedItem\"), // previously selected item\n        ];\n        if (\n            !possibleFocusEls.length &&\n            document.querySelector(\".levelColumn .contentItem\")\n        ) {\n            possibleFocusEls.push(document.querySelector(\".levelColumn .contentItem\"));\n        }\n        if (possibleFocusEls.length) {\n            keyboardNavInitialized = true;\n            possibleFocusEls[0].focus();\n        }\n    }\n\n    function keyboardNavigation(item, e) {\n        const node = e.currentTarget;\n        shiftKey = e.shiftKey;\n        if (e.key == \"Escape\") {\n            closeBrowser();\n        }\n        if (\n            e.key == \"ArrowDown\" &&\n            node?.nextElementSibling?.classList.contains(\"contentItem\")\n        ) {\n            node.nextElementSibling.click();\n        }\n        if (\n            e.key == \"ArrowUp\" &&\n            node?.previousElementSibling?.classList.contains(\"contentItem\")\n        ) {\n            node.previousElementSibling.click();\n        }\n        if (e.key == \"ArrowRight\") {\n            const currCol = e.target.closest(\".levelColumn\");\n            const nxtCol = currCol?.nextElementSibling;\n            if (!nxtCol || !nxtCol.classList.contains(\"levelColumn\")) {\n                return;\n            }\n            nxtCol.querySelector(\".contentItem\")?.click();\n        }\n        if (e.key == \"ArrowLeft\") {\n            const currCol = e.target.closest(\".levelColumn\");\n            const prevCol = currCol?.previousElementSibling;\n            if (!prevCol || !prevCol.classList.contains(\"levelColumn\")) {\n                return;\n            }\n            prevCol.querySelector(\".inPath\").click();\n        }\n        if (e.key == \"Space\") {\n            // add item to selection (like metaKey + click)\n            clickItem(item, e, true);\n        }\n        if (e.key == \"Enter\") {\n            if (isSelectable(item)) {\n                if ($config.maximumSelectionSize == 1) {\n                    addItem(item);\n                } else {\n                    addSelectedItems();\n                }\n            }\n        }\n    }\n\n    async function addItem(item) {\n        if ($config.maximumSelectionSize == 1) {\n            selectedItems.set([item]);\n            selectedUids.set([item.UID]);\n        } else {\n            selectedItems.update((n) => [...n, item]);\n            selectedUids.update(() => $selectedItems.map((x) => x.UID));\n        }\n        updateRecentlyUsed(item, $config);\n        closeBrowser();\n    }\n\n    async function addSelectedItems() {\n        const previewItems = await get_items_from_uids($previewUids, $config);\n        selectedItems.update((n) => {\n            for (const it of previewItems) {\n                if ($selectedUids.indexOf(it.UID) != -1) continue;\n                n.push(it);\n            }\n            return n;\n        });\n        selectedUids.update(() => $selectedItems.map((x) => x.UID));\n        closeBrowser();\n    }\n\n    function selectRecentlyUsed(event) {\n        addItem(event.detail.item);\n    }\n\n    async function selectFavorite(event) {\n        const path = event.detail.item.path;\n        const response = await request({\n            vocabularyUrl: $config.vocabularyUrl,\n            attributes: $config.attributes,\n            levelInfoPath: path,\n        });\n        if (!response.total) {\n            alert(`${path} not found!`);\n            return;\n        }\n        const item = response.results[0];\n        if (!item.path) {\n            // fix for root\n            item.path = $config.rootPath;\n        }\n        changePath(item);\n    }\n\n    function closeBrowser() {\n        searchTerm = null;\n        $config.mode = defaultConfigMode;\n        $showContentBrowser = false;\n        keyboardNavInitialized = false;\n        updatePreview({ action: \"clear\" });\n    }\n\n    function isSelectable(item) {\n        return $selectedUids.indexOf(item.UID) === -1;\n    }\n\n    function scrollToRight() {\n        const scrollContainer = document.querySelector(\".levelColumns\");\n        if (scrollContainer) {\n            animateScroll.scrollTo({\n                // element: \".levelColumn:last-child\",\n                x: scrollContainer.scrollWidth + 100,\n            });\n        }\n    }\n\n    function itemInPath(item) {\n        const item_path = item.path.split(\"/\");\n        const curr_path = $currentPath.split(\"/\");\n        let in_path = true;\n        for(const idx in item_path) {\n            // check path parts to be equal\n            in_path = in_path && (item_path[idx] === curr_path[idx]);\n        }\n        return in_path;\n    }\n\n    const searchItemsKeyup = utils.debounce(async (e) => {\n        await searchItems(e.target.value);\n    }, 300);\n\n    async function searchItems(val) {\n        searchTerm = val;\n        if (defaultConfigMode === \"browse\") {\n            // switching to search mode in global search if configured as \"browse\" mode\n            $config.mode = searchTerm !== \"\" ? \"search\" : \"browse\";\n        }\n        await contentItems.get({\n            path: $currentPath,\n            searchTerm: searchTerm,\n            mode: $config.mode,\n        });\n        updatePreview({ action: \"clear\" });\n        if(!val) {\n            scrollToRight();\n        }\n    }\n\n    const filterLevelKeyup = utils.debounce(async (e) => {\n        await filterLevel(e.target.value);\n    }, 300);\n\n    const filterLevel = async (val) => {\n        if (val !== \"\") {\n            updatePreview({ action: \"clear\" });\n        } else {\n            scrollToRight();\n        }\n        await contentItems.get({ path: $currentPath, searchTerm: val });\n    };\n\n    function loadMore(node) {\n        const observer = new IntersectionObserver(\n            (entries) => {\n                for (const entry of entries) {\n                    if (entry.isIntersecting) {\n                        const path = node.dataset.levelPath;\n                        const page = parseInt(node.dataset.levelNextPage);\n                        contentItems.get({\n                            loadMorePath: path,\n                            page: page,\n                        });\n                    }\n                }\n            },\n            { threshold: 0, root: null, margin: \"0px\" },\n        );\n        // defer observing\n        window.setTimeout(() => {\n            observer.observe(node);\n        }, 500);\n    }\n\n    $: {\n        if ($showContentBrowser) {\n            contentItems.get({ path: $currentPath });\n        }\n    }\n\n    $: {\n        $contentItems;\n        scrollToRight();\n    }\n\n    $: {\n        $previewUids;\n    }\n</script>\n\n{#if $showContentBrowser}\n    <div class=\"content-browser-position-wrapper\">\n        <nav\n            class=\"content-browser\"\n            transition:fly={{ x: (vw / 100) * 94, opacity: 1 }}\n            on:introend={() => {\n                scrollToRight();\n                initKeyboardNav();\n            }}\n            use:clickOutside\n            on:click_outside={closeBrowser}\n        >\n            <div class=\"toolBar navbar\">\n                <div class=\"input-group w-auto\">\n                    <input\n                        type=\"text\"\n                        name=\"filter\"\n                        class=\"form-control form-control-sm\"\n                        value={searchTerm}\n                        on:input={searchItemsKeyup}\n                    />\n                    {#if searchTerm}\n                        <button\n                            class=\"btn btn-light btn-sm\"\n                            type=\"button\"\n                            on:click|preventDefault={() => searchItems(\"\")}\n                            ><svg use:resolveIcon={{ iconName: \"x\" }} /></button\n                        >\n                    {/if}\n                </div>\n                <RecentlyUsed on:selectItem={selectRecentlyUsed} />\n                <Favorites on:selectItem={selectFavorite} />\n                {#if $config.uploadEnabled && $config.mode == \"browse\"}\n                    <div class=\"ms-2\">\n                        <button\n                            type=\"button\"\n                            class=\"upload btn btn-outline-light btn-sm\"\n                            tabindex=\"0\"\n                            on:keydown={upload}\n                            on:click={upload}\n                            ><svg use:resolveIcon={{ iconName: \"upload\" }} />\n                            {_t(\"upload to ${current_path}\", {\n                                current_path: $currentPath,\n                            })}</button\n                        >\n                    </div>\n                {/if}\n                <button\n                    class=\"btn btn-link text-white ms-auto\"\n                    tabindex=\"0\"\n                    on:click|preventDefault={() => closeBrowser()}\n                    ><svg use:resolveIcon={{ iconName: \"x-circle\" }} /></button\n                >\n            </div>\n            {#await $contentItems}\n                <p>{_t(\"loading content items\")}</p>\n            {:then levels}\n                <div class=\"levelColumns\">\n                    {#each levels as level, i (level.path)}\n                        {#if $previewUids.length < 2 || !$previewUids.includes(level.UID)}\n                            <div\n                                class=\"levelColumn{i % 2 == 0 ? ' odd' : ' even'} {i ===\n                                levels.length - 1\n                                    ? 'active'\n                                    : ''}\"\n                                in:fly|local={{ duration: 500 }}\n                            >\n                                <div class=\"levelToolbar\">\n                                    {#if i == 0 && $config.mode == \"browse\"}\n                                        <button\n                                            type=\"button\"\n                                            class=\"btn btn-link btn-xs ps-0\"\n                                            tabindex=\"0\"\n                                            on:keydown={() =>\n                                                changePath($config.rootPath)}\n                                            on:click={() => changePath($config.rootPath)}\n                                            ><svg\n                                                use:resolveIcon={{ iconName: \"house\" }}\n                                            /></button\n                                        >\n                                    {/if}\n                                    {#if i == levels.length - 1}\n                                        {#if level.selectable && !level.showFilter && !previewItem.UID}\n                                            <button\n                                                class=\"btn btn-xs btn-outline-primary d-flex align-items-center\"\n                                                title={_t(\"select ${level_path}\", {\n                                                    level_path: level.Title,\n                                                })}\n                                                disabled={!isSelectable(level)}\n                                                on:click|preventDefault={() =>\n                                                    addItem(level)}\n                                                ><svg\n                                                    use:resolveIcon={{\n                                                        iconName: \"plus\",\n                                                    }}\n                                                />\n                                                <span class=\"select-button-ellipsis\"\n                                                    >{level.Title}</span\n                                                ></button\n                                            >\n                                        {/if}\n                                        <div class=\"levelActions\">\n                                            {#if $config.mode !== \"search\"}\n                                                {#if level.searchTerm || level.showFilter}\n                                                    <input\n                                                        type=\"text\"\n                                                        name=\"levelFilter\"\n                                                        class=\"form-control form-control-sm\"\n                                                        value={level.searchTerm}\n                                                        on:input={filterLevelKeyup}\n                                                    />\n                                                    <button\n                                                        class=\"btn btn-link btn-xs level-filter\"\n                                                        title={_t(\"clear filter\")}\n                                                        on:click|preventDefault={() => {\n                                                            filterLevel(\"\");\n                                                            level.showFilter = false;\n                                                        }}\n                                                    >\n                                                        <svg\n                                                            use:resolveIcon={{\n                                                                iconName: \"x\",\n                                                            }}\n                                                        /></button\n                                                    >\n                                                {:else}\n                                                    <button\n                                                        class=\"btn btn-link btn-xs level-filter\"\n                                                        title={_t(\"level filter\")}\n                                                        on:click|preventDefault={() =>\n                                                            (level.showFilter = true)}\n                                                    >\n                                                        <svg\n                                                            use:resolveIcon={{\n                                                                iconName: \"filter\",\n                                                            }}\n                                                        /></button\n                                                    >\n                                                {/if}\n                                            {/if}\n                                            {#if !gridView}\n                                                <button\n                                                    class=\"btn btn-link btn-xs grid-view\"\n                                                    title={_t(\"grid view\")}\n                                                    on:click={() => (gridView = true)}\n                                                >\n                                                    <svg\n                                                        use:resolveIcon={{\n                                                            iconName: \"grid\",\n                                                        }}\n                                                    />\n                                                </button>\n                                            {:else}\n                                                <button\n                                                    class=\"btn btn-link btn-xs grid-view\"\n                                                    title={_t(\"list view\")}\n                                                    on:click={() => (gridView = false)}\n                                                >\n                                                    <svg\n                                                        use:resolveIcon={{\n                                                            iconName: \"list\",\n                                                        }}\n                                                    />\n                                                </button>\n                                            {/if}\n                                        </div>\n                                    {/if}\n                                </div>\n                                <div class=\"levelItems\">\n                                    {#each level.results || [] as item, n}\n                                        <!-- svelte-ignore missing-declaration -->\n                                        <div\n                                            class=\"contentItem{n % 2 == 0\n                                                ? ' odd'\n                                                : ' even'}{itemInPath(item)\n                                                ? ' inPath'\n                                                : ''}{$previewUids.indexOf(item.UID) !=\n                                            -1\n                                                ? ' selectedItem'\n                                                : ''}{!isSelectable(item)\n                                                ? ' text-body-tertiary'\n                                                : ''}\"\n                                            role=\"button\"\n                                            tabindex={n}\n                                            data-uuid={item.UID}\n                                            on:keydown|preventDefault={(e) =>\n                                                keyboardNavigation(item, e)}\n                                            on:click={(e) => clickItem(item, e)}\n                                        >\n                                            <div\n                                                class={gridView\n                                                    ? \"grid-preview\"\n                                                    : \"item-title\"}\n                                                title=\"{item.path}: {item.Title}\"\n                                            >\n                                                {#if gridView && item.getIcon}\n                                                    <img\n                                                        src={`${item.getURL}/@@images/image/thumb`}\n                                                        alt={item.Title}\n                                                    />\n                                                {:else}\n                                                    <span class=\"plone-icon\">\n                                                        <svg\n                                                            use:resolveIcon={{\n                                                                iconName: `contenttype/${item.portal_type.toLowerCase().replace(/\\.| /g, \"-\")}`,\n                                                            }}\n                                                        />\n                                                    </span>\n                                                {/if}\n                                                {item.Title}\n                                                {#if $config.mode == \"search\"}\n                                                    <br /><span class=\"small\"\n                                                        >{item.path}</span\n                                                    >\n                                                {/if}\n                                            </div>\n                                            {#if item.is_folderish && $config.mode == \"browse\"}\n                                                <div class=\"browseSub\">\n                                                    <svg\n                                                        use:resolveIcon={{\n                                                            iconName:\n                                                                \"arrow-right-circle\",\n                                                        }}\n                                                    />\n                                                </div>\n                                            {/if}\n                                        </div>\n                                    {/each}\n                                    {#if level.more}\n                                        <div\n                                            class=\"loadmore\"\n                                            data-level-path={level.path}\n                                            data-level-next-page={parseInt(level.page) +\n                                                1}\n                                            use:loadMore\n                                        >\n                                            <div\n                                                class=\"spinner-border\"\n                                                role=\"status\"\n                                            ></div>\n                                        </div>\n                                    {/if}\n                                    {#if level.total == 0}\n                                        <div class=\"contentItem\">\n                                            <p>{_t(\"no results found\")}</p>\n                                        </div>\n                                    {/if}\n                                </div>\n                            </div>\n                        {/if}\n                    {/each}\n                    {#if previewItem?.UID && $previewUids.length == 1}\n                        <div class=\"preview\" in:fly|local={{ duration: 500 }}>\n                            <div class=\"levelToolbar\">\n                                <div class=\"selectLevel me-3\">\n                                    {#if isSelectable(previewItem)}\n                                        <button\n                                            class=\"btn btn-xs btn-outline-primary d-flex align-items-center\"\n                                            title={_t(\"select ${preview_path}\", {\n                                                preview_path: previewItem.Title,\n                                            })}\n                                            on:click|preventDefault={() =>\n                                                addItem(previewItem)}\n                                            ><svg\n                                                use:resolveIcon={{ iconName: \"plus\" }}\n                                            />\n                                            <span class=\"select-button-ellipsis\"\n                                                >{previewItem.Title}</span\n                                            >\n                                        </button>\n                                    {/if}\n                                </div>\n                            </div>\n                            <div class=\"info\">\n                                {#if previewItem.getIcon}\n                                    <div class=\"previewImage\">\n                                        <img\n                                            src=\"{previewItem.getURL}/@@images/image/preview\"\n                                            alt={previewItem.Title}\n                                        />\n                                    </div>\n                                {:else}\n                                    <div class=\"previewIcon\">\n                                        <svg\n                                            use:resolveIcon={{\n                                                iconName: `contenttype/${previewItem.portal_type.toLowerCase().replace(/\\.| /g, \"-\")}`,\n                                            }}\n                                        />\n                                    </div>\n                                {/if}\n                                <dl>\n                                    <dt>{_t(\"Title\")}</dt>\n                                    <dd>{previewItem.Title}</dd>\n                                    {#if previewItem.Description}\n                                        <dt>{_t(\"Description\")}</dt>\n                                        <dd\n                                            class=\"text-truncate\"\n                                            title={previewItem.Description}\n                                        >\n                                            {previewItem.Description}\n                                        </dd>\n                                    {/if}\n                                    {#if previewItem.created}\n                                        <dt>{_t(\"created\")}</dt>\n                                        <dd>\n                                            <time datetime={previewItem.created}\n                                                >{formatDate(previewItem.created)}</time\n                                            >\n                                        </dd>\n                                    {/if}\n                                    {#if previewItem.modified}\n                                        <dt>{_t(\"modified\")}</dt>\n                                        <dd>\n                                            <time datetime={previewItem.modified}\n                                                >{formatDate(previewItem.modified)}</time\n                                            >\n                                        </dd>\n                                    {/if}\n                                    {#if previewItem.review_state}\n                                        <dt>{_t(\"review_state\")}</dt>\n                                        <dd>{previewItem.review_state}</dd>\n                                    {/if}\n                                </dl>\n                            </div>\n                        </div>\n                    {/if}\n                    {#if $previewUids.length > 1}\n                        <div class=\"preview\" in:fly|local={{ duration: 500 }}>\n                            <div class=\"levelToolbar\">\n                                <button\n                                    class=\"btn btn-xs btn-outline-primary d-flex align-items-center\"\n                                    title={_t(\"add selected items\")}\n                                    on:click|preventDefault={addSelectedItems}\n                                    ><svg use:resolveIcon={{ iconName: \"plus\" }} />\n                                    <span class=\"select-button-ellipsis\"\n                                        >{_t(\"add selected items\")}</span\n                                    >\n                                </button>\n                            </div>\n                            <div class=\"info\">\n                                <svg\n                                    use:resolveIcon={{\n                                        iconName: \"files\",\n                                    }}\n                                />\n                                <span class=\"\"\n                                    >{_t(\"${item_count} items selected\", {\n                                        item_count: $previewUids.length,\n                                    })}</span\n                                >\n                            </div>\n                        </div>\n                    {/if}\n                    {#if showUpload}\n                        <div class=\"upload-wrapper\"></div>\n                    {/if}\n                </div>\n            {:catch error}\n                <p style=\"color: red\">{error.message}</p>\n            {/await}\n        </nav>\n    </div>\n{/if}\n\n<style>\n    .content-browser-position-wrapper {\n        position: fixed;\n        top: 0;\n        right: 0;\n        display: flex;\n        justify-content: end;\n        z-index: 1500;\n        width: 100%;\n        height: 100vh;\n        background-color: rgba(0, 0, 0, 0.25);\n    }\n    .btn-xs {\n        --bs-btn-padding-y: 0.15rem;\n        --bs-btn-padding-x: 0.5rem;\n        --bs-btn-font-size: 0.75rem;\n    }\n    .content-browser {\n        height: 100vh;\n        min-width: 450px;\n        background-color: var(--bs-light-bg-subtle);\n        border-left: var(--bs-border-style) var(--bs-border-width) #fff;\n        z-index: 1500;\n        display: flex;\n        flex-direction: column;\n    }\n    .toolBar {\n        background-color: var(--bs-primary);\n        padding: 0.325rem 0.75rem;\n        color: var(--bs-light);\n        width: 100%;\n        display: flex;\n        justify-content: start;\n    }\n    .toolBar :global(svg) {\n        vertical-align: -0.125em;\n    }\n    .levelColumns {\n        display: flex;\n        flex-wrap: nowrap;\n        width: 100%;\n        overflow-y: hidden;\n        overflow-x: auto;\n        flex-grow: 3;\n        border-left: var(--bs-border-style) var(--bs-border-color) var(--bs-border-width);\n        user-select: none;\n    }\n\n    .levelColumn {\n        width: 320px;\n        background: rgba(var(--bs-secondary-bg-rgb), 0.55);\n        border-right: var(--bs-border-style) var(--bs-border-width)\n            var(--bs-border-color);\n        display: flex;\n        flex-direction: column;\n        flex-grow: 0;\n        flex-shrink: 0;\n    }\n    .levelColumn.active {\n        background: var(--bs-body-bg);\n        border-left: var(--bs-border-style) var(--bs-border-width) var(--bs-primary);\n        margin-left: -1px;\n    }\n    .levelToolbar {\n        width: 100%;\n        min-height: 2.5rem;\n        display: flex;\n        justify-content: space-between;\n        white-space: nowrap;\n        padding: 0.375rem;\n        border-bottom: var(--bs-border-style) var(--bs-border-width)\n            var(--bs-border-color);\n    }\n    .levelToolbar > .levelActions {\n        margin-left: auto;\n        display: flex;\n    }\n    .levelToolbar > button {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    .levelItems {\n        overflow-x: auto;\n    }\n    .contentItem {\n        /* padding: 1rem 1rem; */\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        font-size: 90%;\n        min-height: 2rem;\n    }\n    .contentItem:focus-visible {\n        outline: none;\n    }\n    .contentItem.even {\n        background-color: rgba(var(--bs-secondary-bg-rgb), 0.4);\n    }\n    .contentItem.inPath,\n    .contentItem.selectedItem {\n        background-color: rgba(var(--bs-primary-rgb), 0.15);\n    }\n    .contentItem > * {\n        padding: 0.5rem;\n        white-space: nowrap;\n        max-width: 450px;\n        text-overflow: ellipsis;\n        overflow: hidden;\n    }\n    .contentItem > .browseSub {\n        flex-shrink: 0;\n    }\n    .contentItem .plone-icon {\n        display: inline-block;\n    }\n    .contentItem .grid-preview > img {\n        width: 95px;\n        height: 95px;\n        object-fit: cover;\n        float: left;\n        margin-right: 1rem;\n    }\n    .preview {\n        width: 320px;\n        flex-shrink: 0;\n        min-height: 300px;\n    }\n    .preview .info {\n        padding: 0.5rem;\n        width: 100%;\n        word-wrap: anywhere;\n    }\n    .preview .info .previewIcon {\n        margin: 0 auto 1rem auto;\n    }\n    .preview .info .previewIcon svg {\n        width: 50px !important;\n        height: 50px !important;\n    }\n    .preview img {\n        max-width: 100%;\n        height: auto;\n        margin-bottom: 0.5rem;\n    }\n\n    .upload-wrapper {\n        padding: 1rem;\n        width: 540px;\n        overflow-x: auto;\n        flex-shrink: 0;\n    }\n    .loadmore {\n        text-align: center;\n        padding: 0.25rem 0;\n    }\n\n    .select-button-ellipsis {\n        white-space: nowrap;\n        max-width: 150px;\n        text-overflow: ellipsis;\n        overflow: hidden;\n    }\n</style>\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"../../../../node_modules/@patternslib/dev/webpack/style-inserter.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!../../../../node_modules/svelte-loader/index.js?cssPath=/home/runner/work/mockup/mockup/src/pat/contentbrowser/src/SelectedItems.svelte.2.css!./SelectedItems.svelte\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn;\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!../../../../node_modules/svelte-loader/index.js?cssPath=/home/runner/work/mockup/mockup/src/pat/contentbrowser/src/SelectedItems.svelte.2.css!./SelectedItems.svelte\";\n       export default content && content.locals ? content.locals : undefined;\n","<script>\n    import { getContext, onMount, setContext } from \"svelte\";\n    import { get_items_from_uids } from \"./utils.js\";\n    import Sortable from \"sortablejs\";\n    import _t from \"../../../core/i18n-wrapper\";\n    import events from \"@patternslib/patternslib/src/core/events\";\n    import plone_registry from \"@plone/registry\";\n\n    let ref;\n    let initializing = true;\n    let RegisteredSelectedItem;\n\n    // get reactive context config\n    const config = getContext(\"config\");\n    const fieldId = $config.fieldId;\n    const selectedItemsNode = document.getElementById(fieldId);\n\n    // get reactive context store\n    const selectedItems = getContext(\"selectedItems\");\n    const selectedUids = getContext(\"selectedUids\");\n\n    // showContentBrowser reactive state\n    const showContentBrowser = getContext(\"showContentBrowser\");\n\n    onMount(async () => {\n        await initializeSelectedItemsStore();\n        initializeSorting();\n        initializing = false;\n    });\n\n    async function getSelectedItemComponent() {\n        // get selectedItem component from registry.\n        // the registry key can be customized with pattern_options\n        // if an addon registers a custom component to a custom key\n        if ($config.componentRegistryKeys?.selectedItem) {\n            RegisteredSelectedItem = plone_registry.getComponent(\n                $config.componentRegistryKeys.selectedItem,\n            );\n        }\n        // fallback if no custom component was registered\n        // or no valid component in registry\n        if (!RegisteredSelectedItem?.component) {\n            RegisteredSelectedItem = plone_registry.getComponent(\n                \"pat-contentbrowser.SelectedItem\",\n            );\n        }\n    }\n\n    function unselectItem(uid) {\n        selectedItems.update((n) => {\n            return n.filter((x) => x.UID !== uid);\n        });\n        selectedUids.update(() => $selectedItems.map((x) => x.UID));\n    }\n\n    async function initializeSelectedItemsStore() {\n        const initialValue = $config.selection.length\n            ? $config.selection\n            : selectedItemsNode?.value\n              ? selectedItemsNode.value.split($config.separator)\n              : [];\n\n        if (!initialValue.length) {\n            return;\n        }\n\n        $selectedItems = await get_items_from_uids(initialValue, $config);\n        selectedUids.update(() => $selectedItems.map((x) => x.UID));\n    }\n\n    function initializeSorting() {\n        if ($config.maximumSelectionSize !== 1 && $selectedItems.length > 1) {\n            Sortable.create(\n                selectedItemsNode.previousSibling.querySelector(\n                    \".content-browser-selected-items\",\n                ),\n                {\n                    draggable: \"> div\",\n                    animation: 200,\n                    onUpdate: (e) => {\n                        let sortedUuids = [];\n                        e.target.querySelectorAll(\".selected-item\").forEach((el) => {\n                            sortedUuids.push(el.dataset[\"uuid\"]);\n                        });\n                        setNodeValue(sortedUuids);\n                    },\n                },\n            );\n        }\n    }\n\n    function selectedUidsFromSelectedItems() {\n        let items = [];\n        $selectedItems.forEach((item) => {\n            items.push(item.UID);\n        });\n        return items;\n    }\n\n    function setNodeValue(selectedUids) {\n        const node_val = selectedUids.join($config.separator);\n        selectedItemsNode.value = node_val;\n        selectedItemsNode.dispatchEvent(events.change_event());\n    }\n\n    function LoadSelectedItemComponent(node, props) {\n        const component = new RegisteredSelectedItem.component({\n            target: node,\n            props: props,\n        });\n    }\n\n    $: {\n        $selectedItems;\n        if ($selectedItems.length || !initializing) {\n            setNodeValue(selectedUidsFromSelectedItems());\n            initializeSorting();\n        }\n    }\n</script>\n\n<div\n    class=\"content-browser-selected-items-wrapper\"\n    style=\"width: {$config.width || 'auto'}\"\n    bind:this={ref}\n>\n    <!-- svelte-ignore a11y-click-events-have-key-events -->\n    <!-- svelte-ignore a11y-no-static-element-interactions -->\n    <div\n        class=\"content-browser-selected-items\"\n        on:click={() => ($showContentBrowser = $selectedItems.length ? false : true)}\n    >\n        {#if $selectedItems}\n            {#await getSelectedItemComponent() then}\n                {#each $selectedItems as selItem, i (selItem.UID)}\n                    <div use:LoadSelectedItemComponent={{ item: selItem, unselectItem: unselectItem }} />\n                {/each}\n            {:catch error}\n                <p style=\"color: red\">{error.message}</p>\n            {/await}\n        {/if}\n        {#if !$selectedItems}\n            <p>{_t(\"loading selected items\")}</p>\n        {/if}\n    </div>\n    <!-- svelte-ignore a11y-invalid-attribute -->\n    <a\n        class=\"btn btn-primary\"\n        href=\"#\"\n        style=\"border-radius:0 var(--bs-border-radius) var(--bs-border-radius) 0\"\n        on:click|preventDefault={() => ($showContentBrowser = true)}>{_t(\"Select\")}</a\n    >\n</div>\n\n<style>\n    .content-browser-selected-items-wrapper {\n        display: flex;\n        align-items: start;\n    }\n    .content-browser-selected-items {\n        list-style: none;\n        background-color: var(--bs-body-bg);\n        border-radius: var(--bs-border-radius) 0 0 var(--bs-border-radius);\n        border: var(--bs-border-style) var(--bs-border-color) var(--bs-border-width);\n        min-height: 2.4rem;\n        padding: 0.5rem 0.5rem 0 0.5rem;\n        flex: 1 1 auto;\n    }\n</style>\n","import { setContext } from 'svelte';\nimport { writable } from 'svelte/store';\n\nexport const gridView = writable(false);\n\nexport function setCurrentPath() {\n    let currentPath = writable('');\n    setContext('currentPath', currentPath);\n}\n\nexport function setPathCache() {\n    let pathCache = writable({});\n    setContext('pathCache', pathCache);\n}\n\n// reactive context stores\nexport function setSelectedItems() {\n    let selItems = writable([]);\n    setContext('selectedItems', selItems);\n}\n\nexport function setConfig() {\n    let config = writable({});\n    setContext('config', config);\n}\n\nexport function setShowContentBrowser() {\n    let showContentBrowser = writable(false);\n    setContext('showContentBrowser', showContentBrowser);\n}\n\nexport function setSelectedUids() {\n    let selUids = writable([]);\n    setContext(\"selectedUids\", selUids);\n}\n\nexport function setPreviewUids() {\n    let prevUids = writable([]);\n    setContext(\"previewUids\", prevUids);\n}\n","<script>\n    import logger from \"@patternslib/patternslib/src/core/logging\";\n    import { getContext } from \"svelte\";\n    import ContentBrowser from \"./ContentBrowser.svelte\";\n    import SelectedItems from \"./SelectedItems.svelte\";\n    import {\n        setConfig,\n        setCurrentPath,\n        setPathCache,\n        setSelectedItems,\n        setSelectedUids,\n        setPreviewUids,\n        setShowContentBrowser,\n    } from \"./stores\";\n\n    export let maxDepth;\n    export let width;\n    export let attributes;\n    export let contextPath;\n    export let vocabularyUrl;\n    export let mode = \"browse\";\n    export let rootPath = \"\";\n    export let rootUrl = \"\";\n    export let basePath = \"\";\n    export let selectableTypes = [];\n    export let browseableTypes = [\"Folder\", \"LIF\", \"LRF\"];\n    export let maximumSelectionSize = -1;\n    export let separator;\n    export let selection = [];\n    export let query = {};\n    export let fieldId;\n    export let upload;\n    export let favorites;\n    export let recentlyUsed;\n    export let recentlyUsedKey;\n    export let recentlyUsedMaxItems;\n    export let bSize = 20;\n    export let componentRegistryKeys = {};\n\n    const log = logger.getLogger(\"pat-contentbrowser\");\n\n    // initialize context stores\n    setCurrentPath();\n    setConfig();\n    setPathCache();\n    setSelectedItems();\n    setShowContentBrowser();\n    setSelectedUids();\n    setPreviewUids();\n\n    // initially set current path\n    const currentPath = getContext(\"currentPath\");\n\n    if (!$currentPath) {\n        if (basePath || rootPath) {\n            // if root path is not above base path we start at rootPath\n            $currentPath = basePath.indexOf(rootPath) != 0 ? rootPath : basePath;\n            if (\n                rootPath &&\n                $currentPath != rootPath &&\n                $currentPath.indexOf(rootPath) == 0\n            ) {\n                // remove rootPath from $currentPath\n                $currentPath = $currentPath.replace(rootPath, \"\");\n            }\n        } else {\n            // no path available. try to determine path from vocabularyUrl\n            const vocabPath = new URL(vocabularyUrl).pathname.split(\"/\");\n            rootPath =\n                contextPath =\n                $currentPath =\n                    vocabPath.slice(0, vocabPath.length - 1).join(\"/\") || \"/\";\n        }\n    }\n\n    let config = getContext(\"config\");\n    $config = {\n        mode: mode,\n        attributes: attributes,\n        contextPath: contextPath,\n        vocabularyUrl: vocabularyUrl,\n        width: width,\n        maxDepth: maxDepth,\n        rootPath: rootPath,\n        rootUrl: rootUrl,\n        basePath: basePath,\n        selectableTypes: selectableTypes,\n        browseableTypes: browseableTypes,\n        maximumSelectionSize: maximumSelectionSize,\n        separator: separator,\n        selection: selection,\n        query: query,\n        fieldId: fieldId,\n        uploadEnabled: upload,\n        favorites: favorites,\n        recentlyUsed: recentlyUsed,\n        recentlyUsedKey: recentlyUsedKey,\n        recentlyUsedMaxItems: recentlyUsedMaxItems,\n        pageSize: bSize,\n        componentRegistryKeys: componentRegistryKeys,\n    };\n\n    log.debug(`Initialized App<${fieldId}> with config ${JSON.stringify($config)}`);\n</script>\n\n<ContentBrowser />\n<SelectedItems />\n"],"names":["async","request","_ref","method","vocabularyUrl","attributes","path","uids","searchTerm","searchPath","levelInfoPath","selectableTypes","browseableTypes","pageSize","page","vocabQuery","criteria","i","o","v","sort_on","sort_order","length","push","concat","results","total","url","indexOf","JSON","stringify","size","headers","Headers","set","response","fetch","ok","errors","json","filtered_response","it","portal_type","is_folderish","get_items_from_uids","config","selectedItemsFromUids","sort","a","b","UID","resolveIcon","node","_ref2","iconName","iconCode","utils","getIcon","outerHTML","destroy","clickOutside","handleClick","event","contains","target","dispatchEvent","CustomEvent","document","addEventListener","removeEventListener","recentlyUsedItems","filterItems","ret","storage","get","recentlyUsedKey","slice","filter","max","parseInt","recentlyUsedMaxItems","updateRecentlyUsed","item","recentlyUsed","alreadyPresent","splice","formatDate","dateval","d","Date","parse","i18n","I18n","toLocaleString","currentLanguage","replace","___CSS_LOADER_EXPORT___","module","id","pathCache","store","writable","load","query","updateCache","loadMorePath","mode","rootPath","level","update","levels","has_more","more","selectable","search","pC","p","forEach","l","nextBatch","rootPathParts","split","physicalPath","hideRootPath","startsWith","pathParts","overlapIdx","idx","includes","join","paths","parts","maxDepth","Math","min","partsToShow","pathPrefix","sub_path","pop","pathCounter","isFirstPath","displayPath","RegExp","levelInfo","Title","showFilter","n","browse","favorites","title","dispatch","select","favorite","reverse","getURL","toLowerCase","items","$config","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","uploadEnabled","x","opacity","current_path","message","duration","level_path","Description","created","modified","review_state","preview_path","item_count","scrollX","container","currentPath","showContentBrowser","selectedItems","selectedUids","previewUids","contentItems","showUpload","previewItem","keyboardNavInitialized","shiftKey","gridView","defaultConfigMode","vw","documentElement","clientWidth","window","innerWidth","updatePreview","data","uuid","action","$previewUids","maximumSelectionSize","changePath","e","folderPath","scrollToRight","showPreview","clickItem","levelWrapper","currentTarget","closest","prevSelection","querySelectorAll","el","children","dataset","metaKey","ctrlKey","map","classList","remove","focus","add","initKeyboardNav","possibleFocusEls","querySelector","keyboardNavigation","key","closeBrowser","nextElementSibling","click","previousElementSibling","currCol","nxtCol","prevCol","isSelectable","addItem","addSelectedItems","$selectedItems","previewItems","$selectedUids","$showContentBrowser","scrollContainer","scrollWidth","searchItemsKeyup","debounce","searchItems","value","val","$currentPath","filterLevelKeyup","filterLevel","timeout","uploadEl","baseUrl","rootUrl","relativePath","allowPathSelection","hiddenInputContainer","success","fileUpload","obj","detail","alert","item_path","curr_path","in_path","observer","IntersectionObserver","entries","entry","isIntersecting","levelPath","levelNextPage","threshold","root","margin","setTimeout","observe","unselectItem","width","ref","RegisteredSelectedItem","initializing","fieldId","selectedItemsNode","getElementById","initializeSorting","previousSibling","draggable","animation","onUpdate","sortedUuids","setNodeValue","node_val","separator","events","change_event","initialValue","selection","initializeSelectedItemsStore","selectedUidsFromSelectedItems","componentRegistryKeys","selectedItem","component","uid","props","contextPath","basePath","upload","bSize","log","getLogger","setContext","setCurrentPath","setConfig","setPathCache","selItems","setSelectedItems","setShowContentBrowser","selUids","setSelectedUids","prevUids","setPreviewUids","vocabPath","URL","pathname","debug"],"sourceRoot":""}