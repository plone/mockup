{"version":3,"file":"chunks/54176.b70605a83b50e1b17603.min.js","mappings":"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","sources":["webpack://@plone/mockup/./node_modules/tinymce/plugins/quickbars/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 7.7.0 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const random = () => window.crypto.getRandomValues(new Uint32Array(1))[0] / 4294967295;\n\n    let unique = 0;\n    const generate = prefix => {\n      const date = new Date();\n      const time = date.getTime();\n      const random$1 = Math.floor(random() * 1000000000);\n      unique++;\n      return prefix + '_' + random$1 + unique + String(time);\n    };\n\n    const insertTable = (editor, columns, rows) => {\n      editor.execCommand('mceInsertTable', false, {\n        rows,\n        columns\n      });\n    };\n    const insertBlob = (editor, base64, blob) => {\n      const blobCache = editor.editorUpload.blobCache;\n      const blobInfo = blobCache.create(generate('mceu'), blob, base64);\n      blobCache.add(blobInfo);\n      editor.insertContent(editor.dom.createHTML('img', { src: blobInfo.blobUri() }));\n    };\n\n    const blobToBase64 = blob => {\n      return new Promise(resolve => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          resolve(reader.result.split(',')[1]);\n        };\n        reader.readAsDataURL(blob);\n      });\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    const pickFile = editor => new Promise(resolve => {\n      let resolved = false;\n      const fileInput = document.createElement('input');\n      fileInput.type = 'file';\n      fileInput.accept = 'image/*';\n      fileInput.style.position = 'fixed';\n      fileInput.style.left = '0';\n      fileInput.style.top = '0';\n      fileInput.style.opacity = '0.001';\n      document.body.appendChild(fileInput);\n      const resolveFileInput = value => {\n        var _a;\n        if (!resolved) {\n          (_a = fileInput.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(fileInput);\n          resolved = true;\n          resolve(value);\n        }\n      };\n      const changeHandler = e => {\n        resolveFileInput(Array.prototype.slice.call(e.target.files));\n      };\n      fileInput.addEventListener('input', changeHandler);\n      fileInput.addEventListener('change', changeHandler);\n      const cancelHandler = e => {\n        const cleanup = () => {\n          resolveFileInput([]);\n        };\n        if (!resolved) {\n          if (e.type === 'focusin') {\n            global.setEditorTimeout(editor, cleanup, 1000);\n          } else {\n            cleanup();\n          }\n        }\n        editor.off('focusin remove', cancelHandler);\n      };\n      editor.on('focusin remove', cancelHandler);\n      fileInput.click();\n    });\n\n    const register$1 = editor => {\n      editor.on('PreInit', () => {\n        if (!editor.queryCommandSupported('QuickbarInsertImage')) {\n          editor.addCommand('QuickbarInsertImage', () => {\n            pickFile(editor).then(files => {\n              if (files.length > 0) {\n                const blob = files[0];\n                blobToBase64(blob).then(base64 => {\n                  insertBlob(editor, base64, blob);\n                });\n              }\n            });\n          });\n        }\n      });\n    };\n\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const isString = isType('string');\n    const isBoolean = isSimpleType('boolean');\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isFunction = isSimpleType('function');\n\n    const option = name => editor => editor.options.get(name);\n    const register = editor => {\n      const registerOption = editor.options.register;\n      const toolbarProcessor = defaultValue => value => {\n        const valid = isBoolean(value) || isString(value);\n        if (valid) {\n          if (isBoolean(value)) {\n            return {\n              value: value ? defaultValue : '',\n              valid\n            };\n          } else {\n            return {\n              value: value.trim(),\n              valid\n            };\n          }\n        } else {\n          return {\n            valid: false,\n            message: 'Must be a boolean or string.'\n          };\n        }\n      };\n      const defaultSelectionToolbar = 'bold italic | quicklink h2 h3 blockquote';\n      registerOption('quickbars_selection_toolbar', {\n        processor: toolbarProcessor(defaultSelectionToolbar),\n        default: defaultSelectionToolbar\n      });\n      const defaultInsertToolbar = 'quickimage quicktable';\n      registerOption('quickbars_insert_toolbar', {\n        processor: toolbarProcessor(defaultInsertToolbar),\n        default: defaultInsertToolbar\n      });\n      const defaultImageToolbar = 'alignleft aligncenter alignright';\n      registerOption('quickbars_image_toolbar', {\n        processor: toolbarProcessor(defaultImageToolbar),\n        default: defaultImageToolbar\n      });\n    };\n    const getTextSelectionToolbarItems = option('quickbars_selection_toolbar');\n    const getInsertToolbarItems = option('quickbars_insert_toolbar');\n    const getImageToolbarItems = option('quickbars_image_toolbar');\n\n    const setupButtons = editor => {\n      editor.ui.registry.addButton('quickimage', {\n        icon: 'image',\n        tooltip: 'Insert image',\n        onAction: () => editor.execCommand('QuickbarInsertImage')\n      });\n      editor.ui.registry.addButton('quicktable', {\n        icon: 'table',\n        tooltip: 'Insert table',\n        onAction: () => {\n          insertTable(editor, 2, 2);\n        }\n      });\n    };\n\n    const constant = value => {\n      return () => {\n        return value;\n      };\n    };\n    const never = constant(false);\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    typeof window !== 'undefined' ? window : Function('return this;')();\n\n    const ELEMENT = 1;\n\n    const name = element => {\n      const r = element.dom.nodeName;\n      return r.toLowerCase();\n    };\n\n    const has$1 = (element, key) => {\n      const dom = element.dom;\n      return dom && dom.hasAttribute ? dom.hasAttribute(key) : false;\n    };\n\n    var ClosestOrAncestor = (is, ancestor, scope, a, isRoot) => {\n      if (is(scope, a)) {\n        return Optional.some(scope);\n      } else if (isFunction(isRoot) && isRoot(scope)) {\n        return Optional.none();\n      } else {\n        return ancestor(scope, a, isRoot);\n      }\n    };\n\n    const fromHtml = (html, scope) => {\n      const doc = scope || document;\n      const div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        const message = 'HTML does not have a single root node';\n        console.error(message, html);\n        throw new Error(message);\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    const fromTag = (tag, scope) => {\n      const doc = scope || document;\n      const node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    const fromText = (text, scope) => {\n      const doc = scope || document;\n      const node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    const fromDom = node => {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: node };\n    };\n    const fromPoint = (docElm, x, y) => Optional.from(docElm.dom.elementFromPoint(x, y)).map(fromDom);\n    const SugarElement = {\n      fromHtml,\n      fromTag,\n      fromText,\n      fromDom,\n      fromPoint\n    };\n\n    const is = (element, selector) => {\n      const dom = element.dom;\n      if (dom.nodeType !== ELEMENT) {\n        return false;\n      } else {\n        const elem = dom;\n        if (elem.matches !== undefined) {\n          return elem.matches(selector);\n        } else if (elem.msMatchesSelector !== undefined) {\n          return elem.msMatchesSelector(selector);\n        } else if (elem.webkitMatchesSelector !== undefined) {\n          return elem.webkitMatchesSelector(selector);\n        } else if (elem.mozMatchesSelector !== undefined) {\n          return elem.mozMatchesSelector(selector);\n        } else {\n          throw new Error('Browser lacks native selectors');\n        }\n      }\n    };\n\n    const ancestor$1 = (scope, predicate, isRoot) => {\n      let element = scope.dom;\n      const stop = isFunction(isRoot) ? isRoot : never;\n      while (element.parentNode) {\n        element = element.parentNode;\n        const el = SugarElement.fromDom(element);\n        if (predicate(el)) {\n          return Optional.some(el);\n        } else if (stop(el)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const closest$2 = (scope, predicate, isRoot) => {\n      const is = (s, test) => test(s);\n      return ClosestOrAncestor(is, ancestor$1, scope, predicate, isRoot);\n    };\n\n    const closest$1 = (scope, predicate, isRoot) => closest$2(scope, predicate, isRoot).isSome();\n\n    const ancestor = (scope, selector, isRoot) => ancestor$1(scope, e => is(e, selector), isRoot);\n    const closest = (scope, selector, isRoot) => {\n      const is$1 = (element, selector) => is(element, selector);\n      return ClosestOrAncestor(is$1, ancestor, scope, selector, isRoot);\n    };\n\n    const addToEditor$1 = editor => {\n      const insertToolbarItems = getInsertToolbarItems(editor);\n      if (insertToolbarItems.length > 0) {\n        editor.ui.registry.addContextToolbar('quickblock', {\n          predicate: node => {\n            const sugarNode = SugarElement.fromDom(node);\n            const textBlockElementsMap = editor.schema.getTextBlockElements();\n            const isRoot = elem => elem.dom === editor.getBody();\n            return !has$1(sugarNode, 'data-mce-bogus') && closest(sugarNode, 'table,[data-mce-bogus=\"all\"]', isRoot).fold(() => closest$1(sugarNode, elem => name(elem) in textBlockElementsMap && editor.dom.isEmpty(elem.dom), isRoot), never);\n          },\n          items: insertToolbarItems,\n          position: 'line',\n          scope: 'editor'\n        });\n      }\n    };\n\n    const supports = element => element.dom.classList !== undefined;\n\n    const has = (element, clazz) => supports(element) && element.dom.classList.contains(clazz);\n\n    const addToEditor = editor => {\n      const isEditable = node => editor.dom.isEditable(node);\n      const isInEditableContext = el => isEditable(el.parentElement);\n      const isImage = node => {\n        const isImageFigure = node.nodeName === 'FIGURE' && /image/i.test(node.className);\n        const isImage = node.nodeName === 'IMG' || isImageFigure;\n        const isPagebreak = has(SugarElement.fromDom(node), 'mce-pagebreak');\n        return isImage && isInEditableContext(node) && !isPagebreak;\n      };\n      const imageToolbarItems = getImageToolbarItems(editor);\n      if (imageToolbarItems.length > 0) {\n        editor.ui.registry.addContextToolbar('imageselection', {\n          predicate: isImage,\n          items: imageToolbarItems,\n          position: 'node'\n        });\n      }\n      const textToolbarItems = getTextSelectionToolbarItems(editor);\n      if (textToolbarItems.length > 0) {\n        editor.ui.registry.addContextToolbar('textselection', {\n          predicate: node => !isImage(node) && !editor.selection.isCollapsed() && isEditable(node),\n          items: textToolbarItems,\n          position: 'selection',\n          scope: 'editor'\n        });\n      }\n    };\n\n    var Plugin = () => {\n      global$1.add('quickbars', editor => {\n        register(editor);\n        register$1(editor);\n        setupButtons(editor);\n        addToEditor$1(editor);\n        addToEditor(editor);\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["global$1","tinymce","util","Tools","resolve","unique","generate","prefix","time","Date","getTime","random$1","Math","floor","window","crypto","getRandomValues","Uint32Array","String","global","register$1","editor","on","queryCommandSupported","addCommand","Promise","resolved","fileInput","document","createElement","type","accept","style","position","left","top","opacity","body","appendChild","resolveFileInput","value","_a","parentNode","removeChild","changeHandler","e","Array","prototype","slice","call","target","files","addEventListener","cancelHandler","cleanup","setEditorTimeout","off","click","pickFile","then","length","blob","reader","FileReader","onloadend","result","split","readAsDataURL","blobToBase64","base64","blobCache","editorUpload","blobInfo","create","add","insertContent","dom","createHTML","src","blobUri","insertBlob","isSimpleType","isString","x","t","isArray","o","v","constructor","isPrototypeOf","name","typeOf","isBoolean","isFunction","option","options","get","getTextSelectionToolbarItems","getInsertToolbarItems","getImageToolbarItems","never","Optional","tag","this","some","none","singletonNone","fold","onNone","onSome","isSome","isNone","map","mapper","bind","binder","exists","predicate","forall","filter","getOr","replacement","or","getOrThunk","thunk","orThunk","getOrDie","message","Error","from","a","isNullable","getOrNull","getOrUndefined","each","worker","toArray","toString","Function","ClosestOrAncestor","is","ancestor","scope","isRoot","fromDom","node","SugarElement","fromHtml","html","div","innerHTML","hasChildNodes","childNodes","console","error","fromTag","fromText","text","createTextNode","fromPoint","docElm","y","elementFromPoint","element","selector","nodeType","elem","undefined","matches","msMatchesSelector","webkitMatchesSelector","mozMatchesSelector","ancestor$1","stop","el","closest$1","s","test","closest$2","addToEditor$1","insertToolbarItems","ui","registry","addContextToolbar","sugarNode","textBlockElementsMap","schema","getTextBlockElements","getBody","key","hasAttribute","has$1","closest","nodeName","toLowerCase","isEmpty","items","addToEditor","isEditable","isImage","isImageFigure","className","isPagebreak","clazz","classList","supports","contains","parentElement","imageToolbarItems","textToolbarItems","selection","isCollapsed","registerOption","register","toolbarProcessor","defaultValue","valid","trim","defaultSelectionToolbar","processor","default","defaultInsertToolbar","defaultImageToolbar","addButton","icon","tooltip","onAction","execCommand","columns","rows","insertTable","setupButtons"],"sourceRoot":""}