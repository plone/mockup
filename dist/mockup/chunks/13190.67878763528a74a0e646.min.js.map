{"version":3,"file":"chunks/13190.67878763528a74a0e646.min.js","mappings":"sHAAO,SAASA,EAAgBC,EAAWC,EAAU,CAAC,GAClD,MAAMC,EAAOC,OAAOC,OAAO,CAAEC,MAAO,sBAAuBC,UAAW,eAAgBC,MAAO,OAAQC,gBAAiB,4BAA6BC,MAAO,IAAMR,GAChK,IAAIS,EACJ,OAAO,SAAUC,GACbX,EAAUW,GACLD,IACDA,EAYZ,SAAcC,EAAQT,GAClB,MAAMU,EAAMC,iBAAiBF,GACvBG,EAAOC,SAASC,cAAc,OACpCF,EAAKG,UAAYf,EAAKI,UACtBQ,EAAKI,MAAMC,SAAW,WACtB,MAAMC,EAASL,SAASC,cAAc,OACtCI,EAAOH,UAAYf,EAAKG,MACxBS,EAAKO,YAAYD,GAEjBA,EAAOF,MAAMC,SAAW,WACxBC,EAAOF,MAAMI,IAAM,MACnBF,EAAOF,MAAMK,KAAO,MACpBH,EAAOF,MAAMM,OAAS,MACtBJ,EAAOF,MAAMX,MAAQL,EAAKK,MAC1Ba,EAAOF,MAAMO,SAAW,SACxBL,EAAOF,MAAMV,gBAAkBN,EAAKM,gBACpCY,EAAOF,MAAMT,MAAQP,EAAKO,OAASG,EAAIH,MACvCW,EAAOF,MAAMQ,YAAY,iBAAkB,cAE3CN,EAAOF,MAAMS,WAAaf,EAAIe,WAC9BP,EAAOF,MAAMU,SAAWhB,EAAIgB,SAC5BR,EAAOF,MAAMW,WAAajB,EAAIiB,WAC9BT,EAAOF,MAAMY,WAAalB,EAAIkB,WAC9BV,EAAOF,MAAMa,YAAcnB,EAAImB,YAC/BX,EAAOF,MAAMc,oBAAsBpB,EAAIoB,oBACvCZ,EAAOF,MAAMe,uBAAyBrB,EAAIqB,uBAE1C,MAAMvB,EAAcK,SAASC,cAAc,OAU3C,OATAN,EAAYQ,MAAMC,SAAW,WAC7BT,EAAYQ,MAAMI,IAAM,MACxBF,EAAOC,YAAYX,GAEnBC,EAAOO,MAAMa,YAAc,QAAQ7B,EAAKK,WAAWa,EAAOF,MAAMa,eAChEpB,EAAOO,MAAMgB,WAAa,MAE1BvB,EAAOwB,WAAWC,aAAatB,EAAMH,GACrCG,EAAKO,YAAYV,GACVD,CACX,CAlD0B2B,CAAK1B,EAAQT,GAC3BS,EAAO2B,iBAAiB,SAAU,IAAM5B,EAAYQ,MAAMI,IAAM,IAAIX,EAAO4B,gBAE/E,MACMC,GADO7B,EAAO8B,aAAe,IACXC,QAAQ,OAAQ,MAAMC,MAAM,MAAMC,OAAS,EACnE,IAAIC,EAAO,GACX,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAYM,IAC5BD,GAAQ,GAAGC,MAEfpC,EAAYqC,UAAYF,CAC5B,CACJ,C","sources":["webpack://@plone/mockup/./node_modules/codejar/linenumbers.js"],"sourcesContent":["export function withLineNumbers(highlight, options = {}) {\n    const opts = Object.assign({ class: \"codejar-linenumbers\", wrapClass: \"codejar-wrap\", width: \"35px\", backgroundColor: \"rgba(128, 128, 128, 0.15)\", color: \"\" }, options);\n    let lineNumbers;\n    return function (editor) {\n        highlight(editor);\n        if (!lineNumbers) {\n            lineNumbers = init(editor, opts);\n            editor.addEventListener(\"scroll\", () => lineNumbers.style.top = `-${editor.scrollTop}px`);\n        }\n        const code = editor.textContent || \"\";\n        const linesCount = code.replace(/\\n+$/, \"\\n\").split(\"\\n\").length + 1;\n        let text = \"\";\n        for (let i = 1; i < linesCount; i++) {\n            text += `${i}\\n`;\n        }\n        lineNumbers.innerText = text;\n    };\n}\nfunction init(editor, opts) {\n    const css = getComputedStyle(editor);\n    const wrap = document.createElement(\"div\");\n    wrap.className = opts.wrapClass;\n    wrap.style.position = \"relative\";\n    const gutter = document.createElement(\"div\");\n    gutter.className = opts.class;\n    wrap.appendChild(gutter);\n    // Add own styles\n    gutter.style.position = \"absolute\";\n    gutter.style.top = \"0px\";\n    gutter.style.left = \"0px\";\n    gutter.style.bottom = \"0px\";\n    gutter.style.width = opts.width;\n    gutter.style.overflow = \"hidden\";\n    gutter.style.backgroundColor = opts.backgroundColor;\n    gutter.style.color = opts.color || css.color;\n    gutter.style.setProperty(\"mix-blend-mode\", \"difference\");\n    // Copy editor styles\n    gutter.style.fontFamily = css.fontFamily;\n    gutter.style.fontSize = css.fontSize;\n    gutter.style.lineHeight = css.lineHeight;\n    gutter.style.paddingTop = css.paddingTop;\n    gutter.style.paddingLeft = css.paddingLeft;\n    gutter.style.borderTopLeftRadius = css.borderTopLeftRadius;\n    gutter.style.borderBottomLeftRadius = css.borderBottomLeftRadius;\n    // Add line numbers\n    const lineNumbers = document.createElement(\"div\");\n    lineNumbers.style.position = \"relative\";\n    lineNumbers.style.top = \"0px\";\n    gutter.appendChild(lineNumbers);\n    // Tweak editor styles\n    editor.style.paddingLeft = `calc(${opts.width} + ${gutter.style.paddingLeft})`;\n    editor.style.whiteSpace = \"pre\";\n    // Swap editor with a wrap\n    editor.parentNode.insertBefore(wrap, editor);\n    wrap.appendChild(editor);\n    return lineNumbers;\n}\n"],"names":["withLineNumbers","highlight","options","opts","Object","assign","class","wrapClass","width","backgroundColor","color","lineNumbers","editor","css","getComputedStyle","wrap","document","createElement","className","style","position","gutter","appendChild","top","left","bottom","overflow","setProperty","fontFamily","fontSize","lineHeight","paddingTop","paddingLeft","borderTopLeftRadius","borderBottomLeftRadius","whiteSpace","parentNode","insertBefore","init","addEventListener","scrollTop","linesCount","textContent","replace","split","length","text","i","innerText"],"sourceRoot":""}