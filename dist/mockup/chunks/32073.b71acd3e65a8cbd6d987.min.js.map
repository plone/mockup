{"version":3,"file":"chunks/32073.b71acd3e65a8cbd6d987.min.js","mappings":"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","sources":["webpack://@plone/mockup/./node_modules/tinymce/plugins/help/index.js","webpack://@plone/mockup/./node_modules/tinymce/plugins/help/plugin.js"],"sourcesContent":["// Exports the \"help\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/help')\n//   ES2015:\n//     import 'tinymce/plugins/help'\nrequire('./plugin.js');","/**\n * TinyMCE version 7.9.1 (2025-05-29)\n */\n\n(function () {\n    'use strict';\n\n    /* eslint-disable @typescript-eslint/no-wrapper-object-types */\n    const hasProto = (v, constructor, predicate) => {\n        var _a;\n        if (predicate(v, constructor.prototype)) {\n            return true;\n        }\n        else {\n            // String-based fallback time\n            return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n        }\n    };\n    const typeOf = (x) => {\n        const t = typeof x;\n        if (x === null) {\n            return 'null';\n        }\n        else if (t === 'object' && Array.isArray(x)) {\n            return 'array';\n        }\n        else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n            return 'string';\n        }\n        else {\n            return t;\n        }\n    };\n    const isType = (type) => (value) => typeOf(value) === type;\n    const isSimpleType = (type) => (value) => typeof value === type;\n    const eq = (t) => (a) => t === a;\n    const isString = isType('string');\n    const isUndefined = eq(undefined);\n    const isNullable = (a) => a === null || a === undefined;\n    const isNonNullable = (a) => !isNullable(a);\n    const isFunction = isSimpleType('function');\n\n    const constant = (value) => {\n        return () => {\n            return value;\n        };\n    };\n    const never = constant(false);\n\n    /**\n     * The `Optional` type represents a value (of any type) that potentially does\n     * not exist. Any `Optional<T>` can either be a `Some<T>` (in which case the\n     * value does exist) or a `None` (in which case the value does not exist). This\n     * module defines a whole lot of FP-inspired utility functions for dealing with\n     * `Optional` objects.\n     *\n     * Comparison with null or undefined:\n     * - We don't get fancy null coalescing operators with `Optional`\n     * - We do get fancy helper functions with `Optional`\n     * - `Optional` support nesting, and allow for the type to still be nullable (or\n     * another `Optional`)\n     * - There is no option to turn off strict-optional-checks like there is for\n     * strict-null-checks\n     */\n    class Optional {\n        // The internal representation has a `tag` and a `value`, but both are\n        // private: able to be console.logged, but not able to be accessed by code\n        constructor(tag, value) {\n            this.tag = tag;\n            this.value = value;\n        }\n        // --- Identities ---\n        /**\n         * Creates a new `Optional<T>` that **does** contain a value.\n         */\n        static some(value) {\n            return new Optional(true, value);\n        }\n        /**\n         * Create a new `Optional<T>` that **does not** contain a value. `T` can be\n         * any type because we don't actually have a `T`.\n         */\n        static none() {\n            return Optional.singletonNone;\n        }\n        /**\n         * Perform a transform on an `Optional` type. Regardless of whether this\n         * `Optional` contains a value or not, `fold` will return a value of type `U`.\n         * If this `Optional` does not contain a value, the `U` will be created by\n         * calling `onNone`. If this `Optional` does contain a value, the `U` will be\n         * created by calling `onSome`.\n         *\n         * For the FP enthusiasts in the room, this function:\n         * 1. Could be used to implement all of the functions below\n         * 2. Forms a catamorphism\n         */\n        fold(onNone, onSome) {\n            if (this.tag) {\n                return onSome(this.value);\n            }\n            else {\n                return onNone();\n            }\n        }\n        /**\n         * Determine if this `Optional` object contains a value.\n         */\n        isSome() {\n            return this.tag;\n        }\n        /**\n         * Determine if this `Optional` object **does not** contain a value.\n         */\n        isNone() {\n            return !this.tag;\n        }\n        // --- Functor (name stolen from Haskell / maths) ---\n        /**\n         * Perform a transform on an `Optional` object, **if** there is a value. If\n         * you provide a function to turn a T into a U, this is the function you use\n         * to turn an `Optional<T>` into an `Optional<U>`. If this **does** contain\n         * a value then the output will also contain a value (that value being the\n         * output of `mapper(this.value)`), and if this **does not** contain a value\n         * then neither will the output.\n         */\n        map(mapper) {\n            if (this.tag) {\n                return Optional.some(mapper(this.value));\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Monad (name stolen from Haskell / maths) ---\n        /**\n         * Perform a transform on an `Optional` object, **if** there is a value.\n         * Unlike `map`, here the transform itself also returns an `Optional`.\n         */\n        bind(binder) {\n            if (this.tag) {\n                return binder(this.value);\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Traversable (name stolen from Haskell / maths) ---\n        /**\n         * For a given predicate, this function finds out if there **exists** a value\n         * inside this `Optional` object that meets the predicate. In practice, this\n         * means that for `Optional`s that do not contain a value it returns false (as\n         * no predicate-meeting value exists).\n         */\n        exists(predicate) {\n            return this.tag && predicate(this.value);\n        }\n        /**\n         * For a given predicate, this function finds out if **all** the values inside\n         * this `Optional` object meet the predicate. In practice, this means that\n         * for `Optional`s that do not contain a value it returns true (as all 0\n         * objects do meet the predicate).\n         */\n        forall(predicate) {\n            return !this.tag || predicate(this.value);\n        }\n        filter(predicate) {\n            if (!this.tag || predicate(this.value)) {\n                return this;\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Getters ---\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value.\n         */\n        getOr(replacement) {\n            return this.tag ? this.value : replacement;\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value.  Unlike `getOr`, in this method the `replacement` object is also\n         * `Optional` - meaning that this method will always return an `Optional`.\n         */\n        or(replacement) {\n            return this.tag ? this : replacement;\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value. Unlike `getOr`, in this method the `replacement` value is\n         * \"thunked\" - that is to say that you don't pass a value to `getOrThunk`, you\n         * pass a function which (if called) will **return** the `value` you want to\n         * use.\n         */\n        getOrThunk(thunk) {\n            return this.tag ? this.value : thunk();\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided Optional object does not contain a\n         * value.\n         *\n         * Unlike `or`, in this method the `replacement` value is \"thunked\" - that is\n         * to say that you don't pass a value to `orThunk`, you pass a function which\n         * (if called) will **return** the `value` you want to use.\n         *\n         * Unlike `getOrThunk`, in this method the `replacement` value is also\n         * `Optional`, meaning that this method will always return an `Optional`.\n         */\n        orThunk(thunk) {\n            return this.tag ? this : thunk();\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, throwing an\n         * exception if the provided `Optional` object does not contain a value.\n         *\n         * WARNING:\n         * You should only be using this function if you know that the `Optional`\n         * object **is not** empty (otherwise you're throwing exceptions in production\n         * code, which is bad).\n         *\n         * In tests this is more acceptable.\n         *\n         * Prefer other methods to this, such as `.each`.\n         */\n        getOrDie(message) {\n            if (!this.tag) {\n                throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n            }\n            else {\n                return this.value;\n            }\n        }\n        // --- Interop with null and undefined ---\n        /**\n         * Creates an `Optional` value from a nullable (or undefined-able) input.\n         * Null, or undefined, is converted to `None`, and anything else is converted\n         * to `Some`.\n         */\n        static from(value) {\n            return isNonNullable(value) ? Optional.some(value) : Optional.none();\n        }\n        /**\n         * Converts an `Optional` to a nullable type, by getting the value if it\n         * exists, or returning `null` if it does not.\n         */\n        getOrNull() {\n            return this.tag ? this.value : null;\n        }\n        /**\n         * Converts an `Optional` to an undefined-able type, by getting the value if\n         * it exists, or returning `undefined` if it does not.\n         */\n        getOrUndefined() {\n            return this.value;\n        }\n        // --- Utilities ---\n        /**\n         * If the `Optional` contains a value, perform an action on that value.\n         * Unlike the rest of the methods on this type, `.each` has side-effects. If\n         * you want to transform an `Optional<T>` **into** something, then this is not\n         * the method for you. If you want to use an `Optional<T>` to **do**\n         * something, then this is the method for you - provided you're okay with not\n         * doing anything in the case where the `Optional` doesn't have a value inside\n         * it. If you're not sure whether your use-case fits into transforming\n         * **into** something or **doing** something, check whether it has a return\n         * value. If it does, you should be performing a transform.\n         */\n        each(worker) {\n            if (this.tag) {\n                worker(this.value);\n            }\n        }\n        /**\n         * Turn the `Optional` object into an array that contains all of the values\n         * stored inside the `Optional`. In practice, this means the output will have\n         * either 0 or 1 elements.\n         */\n        toArray() {\n            return this.tag ? [this.value] : [];\n        }\n        /**\n         * Turn the `Optional` object into a string for debugging or printing. Not\n         * recommended for production code, but good for debugging. Also note that\n         * these days an `Optional` object can be logged to the console directly, and\n         * its inner value (if it exists) will be visible.\n         */\n        toString() {\n            return this.tag ? `some(${this.value})` : 'none()';\n        }\n    }\n    // Sneaky optimisation: every instance of Optional.none is identical, so just\n    // reuse the same object\n    Optional.singletonNone = new Optional(false);\n\n    /* eslint-disable @typescript-eslint/unbound-method */\n    const nativeSlice = Array.prototype.slice;\n    const nativeIndexOf = Array.prototype.indexOf;\n    /* eslint-enable */\n    const rawIndexOf = (ts, t) => nativeIndexOf.call(ts, t);\n    const contains = (xs, x) => rawIndexOf(xs, x) > -1;\n    const map = (xs, f) => {\n        // pre-allocating array size when it's guaranteed to be known\n        // http://jsperf.com/push-allocated-vs-dynamic/22\n        const len = xs.length;\n        const r = new Array(len);\n        for (let i = 0; i < len; i++) {\n            const x = xs[i];\n            r[i] = f(x, i);\n        }\n        return r;\n    };\n    const filter = (xs, pred) => {\n        const r = [];\n        for (let i = 0, len = xs.length; i < len; i++) {\n            const x = xs[i];\n            if (pred(x, i)) {\n                r.push(x);\n            }\n        }\n        return r;\n    };\n    const findUntil = (xs, pred, until) => {\n        for (let i = 0, len = xs.length; i < len; i++) {\n            const x = xs[i];\n            if (pred(x, i)) {\n                return Optional.some(x);\n            }\n            else if (until(x, i)) {\n                break;\n            }\n        }\n        return Optional.none();\n    };\n    const find = (xs, pred) => {\n        return findUntil(xs, pred, never);\n    };\n    const sort = (xs, comparator) => {\n        const copy = nativeSlice.call(xs, 0);\n        copy.sort(comparator);\n        return copy;\n    };\n    isFunction(Array.from) ? Array.from : (x) => nativeSlice.call(x);\n\n    // There are many variations of Object iteration that are faster than the 'for-in' style:\n    // http://jsperf.com/object-keys-iteration/107\n    //\n    // Use the native keys if it is available (IE9+), otherwise fall back to manually filtering\n    const keys = Object.keys;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const hasOwnProperty = Object.hasOwnProperty;\n    const get$1 = (obj, key) => {\n        return has(obj, key) ? Optional.from(obj[key]) : Optional.none();\n    };\n    const has = (obj, key) => hasOwnProperty.call(obj, key);\n\n    const Cell = (initial) => {\n        let value = initial;\n        const get = () => {\n            return value;\n        };\n        const set = (v) => {\n            value = v;\n        };\n        return {\n            get,\n            set\n        };\n    };\n\n    /**\n     * Adds two numbers, and wrap to a range.\n     * If the result overflows to the right, snap to the left.\n     * If the result overflows to the left, snap to the right.\n     */\n    // the division is meant to get a number between 0 and 1 for more information check this discussion: https://stackoverflow.com/questions/58285941/how-to-replace-math-random-with-crypto-getrandomvalues-and-keep-same-result\n    const random = () => window.crypto.getRandomValues(new Uint32Array(1))[0] / 4294967295;\n\n    /**\n     * Generate a unique identifier.\n     *\n     * The unique portion of the identifier only contains an underscore\n     * and digits, so that it may safely be used within HTML attributes.\n     *\n     * The chance of generating a non-unique identifier has been minimized\n     * by combining the current time, a random number and a one-up counter.\n     *\n     * generate :: String -> String\n     */\n    let unique = 0;\n    const generate = (prefix) => {\n        const date = new Date();\n        const time = date.getTime();\n        const random$1 = Math.floor(random() * 1000000000);\n        unique++;\n        return prefix + '_' + random$1 + unique + String(time);\n    };\n\n    const cat = (arr) => {\n        const r = [];\n        const push = (x) => {\n            r.push(x);\n        };\n        for (let i = 0; i < arr.length; i++) {\n            arr[i].each(push);\n        }\n        return r;\n    };\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const get = (customTabs) => {\n        const addTab = (spec) => {\n            var _a;\n            const name = (_a = spec.name) !== null && _a !== void 0 ? _a : generate('tab-name');\n            const currentCustomTabs = customTabs.get();\n            currentCustomTabs[name] = spec;\n            customTabs.set(currentCustomTabs);\n        };\n        return {\n            addTab\n        };\n    };\n\n    const register$2 = (editor, dialogOpener) => {\n        editor.addCommand('mceHelp', dialogOpener);\n    };\n\n    const option = (name) => (editor) => editor.options.get(name);\n    const register$1 = (editor) => {\n        const registerOption = editor.options.register;\n        registerOption('help_tabs', {\n            processor: 'array'\n        });\n    };\n    const getHelpTabs = option('help_tabs');\n    const getForcedPlugins = option('forced_plugins');\n\n    const register = (editor, dialogOpener) => {\n        editor.ui.registry.addButton('help', {\n            icon: 'help',\n            tooltip: 'Help',\n            onAction: dialogOpener,\n            context: 'any'\n        });\n        editor.ui.registry.addMenuItem('help', {\n            text: 'Help',\n            icon: 'help',\n            shortcut: 'Alt+0',\n            onAction: dialogOpener,\n            context: 'any'\n        });\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.Resource');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.I18n');\n\n    const pLoadHtmlByLangCode = (baseUrl, langCode) => global$3.load(`tinymce.html-i18n.help-keynav.${langCode}`, `${baseUrl}/js/i18n/keynav/${langCode}.js`);\n    const pLoadI18nHtml = (baseUrl) => \n    // TINY-9928: Load language file for the current language, or English if the file is not available\n    pLoadHtmlByLangCode(baseUrl, global$2.getCode()).catch(() => pLoadHtmlByLangCode(baseUrl, 'en'));\n    const initI18nLoad = (editor, baseUrl) => {\n        editor.on('init', () => {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            pLoadI18nHtml(baseUrl);\n        });\n    };\n\n    const pTab = async (pluginUrl) => {\n        const body = {\n            type: 'htmlpanel',\n            presets: 'document',\n            html: await pLoadI18nHtml(pluginUrl)\n        };\n        return {\n            name: 'keyboardnav',\n            title: 'Keyboard Navigation',\n            items: [body]\n        };\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    // Converts shortcut format to Mac/PC variants\n    const convertText = (source) => {\n        const isMac = global$1.os.isMacOS() || global$1.os.isiOS();\n        const mac = {\n            alt: '&#x2325;',\n            ctrl: '&#x2303;',\n            shift: '&#x21E7;',\n            meta: '&#x2318;',\n            access: '&#x2303;&#x2325;'\n        };\n        const other = {\n            meta: 'Ctrl ',\n            access: 'Shift + Alt '\n        };\n        const replace = isMac ? mac : other;\n        const shortcut = source.split('+');\n        const updated = map(shortcut, (segment) => {\n            // search lowercase, but if not found use the original\n            const search = segment.toLowerCase().trim();\n            return has(replace, search) ? replace[search] : segment;\n        });\n        return isMac ? (updated.join('')).replace(/\\s/, '') : updated.join('+');\n    };\n\n    const shortcuts = [\n        { shortcuts: ['Meta + B'], action: 'Bold' },\n        { shortcuts: ['Meta + I'], action: 'Italic' },\n        { shortcuts: ['Meta + U'], action: 'Underline' },\n        { shortcuts: ['Meta + A'], action: 'Select all' },\n        { shortcuts: ['Meta + Y', 'Meta + Shift + Z'], action: 'Redo' },\n        { shortcuts: ['Meta + Z'], action: 'Undo' },\n        { shortcuts: ['Access + 1'], action: 'Heading 1' },\n        { shortcuts: ['Access + 2'], action: 'Heading 2' },\n        { shortcuts: ['Access + 3'], action: 'Heading 3' },\n        { shortcuts: ['Access + 4'], action: 'Heading 4' },\n        { shortcuts: ['Access + 5'], action: 'Heading 5' },\n        { shortcuts: ['Access + 6'], action: 'Heading 6' },\n        { shortcuts: ['Access + 7'], action: 'Paragraph' },\n        { shortcuts: ['Access + 8'], action: 'Div' },\n        { shortcuts: ['Access + 9'], action: 'Address' },\n        { shortcuts: ['Alt + 0'], action: 'Open help dialog' },\n        { shortcuts: ['Alt + F9'], action: 'Focus to menubar' },\n        { shortcuts: ['Alt + F10'], action: 'Focus to toolbar' },\n        { shortcuts: ['Alt + F11'], action: 'Focus to element path' },\n        { shortcuts: ['Alt + F12'], action: 'Focus to notification' },\n        { shortcuts: ['Ctrl + F9'], action: 'Focus to contextual toolbar' },\n        { shortcuts: ['Shift + Enter'], action: 'Open popup menu for split buttons' },\n        { shortcuts: ['Meta + K'], action: 'Insert link (if link plugin activated)' },\n        { shortcuts: ['Meta + S'], action: 'Save (if save plugin activated)' },\n        { shortcuts: ['Meta + F'], action: 'Find (if searchreplace plugin activated)' },\n        { shortcuts: ['Meta + Shift + F'], action: 'Switch to or from fullscreen mode' }\n    ];\n\n    const tab$2 = () => {\n        const shortcutList = map(shortcuts, (shortcut) => {\n            const shortcutText = map(shortcut.shortcuts, convertText).join(' or ');\n            return [shortcut.action, shortcutText];\n        });\n        const tablePanel = {\n            type: 'table',\n            // TODO: Fix table styles #TINY-2909\n            header: ['Action', 'Shortcut'],\n            cells: shortcutList\n        };\n        return {\n            name: 'shortcuts',\n            title: 'Handy Shortcuts',\n            items: [\n                tablePanel\n            ]\n        };\n    };\n\n    // These lists are automatically sorted when generating the dialog.\n    const urls = map([\n        { key: 'accordion', name: 'Accordion' },\n        { key: 'anchor', name: 'Anchor' },\n        { key: 'autolink', name: 'Autolink' },\n        { key: 'autoresize', name: 'Autoresize' },\n        { key: 'autosave', name: 'Autosave' },\n        { key: 'charmap', name: 'Character Map' },\n        { key: 'code', name: 'Code' },\n        { key: 'codesample', name: 'Code Sample' },\n        { key: 'colorpicker', name: 'Color Picker' },\n        { key: 'directionality', name: 'Directionality' },\n        { key: 'emoticons', name: 'Emoticons' },\n        { key: 'fullscreen', name: 'Full Screen' },\n        { key: 'help', name: 'Help' },\n        { key: 'image', name: 'Image' },\n        { key: 'importcss', name: 'Import CSS' },\n        { key: 'insertdatetime', name: 'Insert Date/Time' },\n        { key: 'link', name: 'Link' },\n        { key: 'lists', name: 'Lists' },\n        { key: 'advlist', name: 'List Styles' },\n        { key: 'media', name: 'Media' },\n        { key: 'nonbreaking', name: 'Nonbreaking' },\n        { key: 'pagebreak', name: 'Page Break' },\n        { key: 'preview', name: 'Preview' },\n        { key: 'quickbars', name: 'Quick Toolbars' },\n        { key: 'save', name: 'Save' },\n        { key: 'searchreplace', name: 'Search and Replace' },\n        { key: 'table', name: 'Table' },\n        { key: 'textcolor', name: 'Text Color' },\n        { key: 'visualblocks', name: 'Visual Blocks' },\n        { key: 'visualchars', name: 'Visual Characters' },\n        { key: 'wordcount', name: 'Word Count' },\n        // TODO: Add other premium plugins when they are included in the website\n        { key: 'a11ychecker', name: 'Accessibility Checker', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'typography', name: 'Advanced Typography', type: \"premium\" /* PluginType.Premium */, slug: 'advanced-typography' },\n        { key: 'ai', name: 'AI Assistant', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'casechange', name: 'Case Change', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'checklist', name: 'Checklist', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'advcode', name: 'Enhanced Code Editor', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'mediaembed', name: 'Enhanced Media Embed', type: \"premium\" /* PluginType.Premium */, slug: 'introduction-to-mediaembed' },\n        { key: 'advtable', name: 'Enhanced Tables', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'exportpdf', name: 'Export to PDF', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'exportword', name: 'Export to Word', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'footnotes', name: 'Footnotes', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'formatpainter', name: 'Format Painter', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'editimage', name: 'Image Editing', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'uploadcare', name: 'Image Optimizer Powered by Uploadcare', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'importword', name: 'Import from Word', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'inlinecss', name: 'Inline CSS', type: \"premium\" /* PluginType.Premium */, slug: 'inline-css' },\n        { key: 'linkchecker', name: 'Link Checker', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'math', name: 'Math', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'markdown', name: 'Markdown', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'mentions', name: 'Mentions', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'mergetags', name: 'Merge Tags', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'pageembed', name: 'Page Embed', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'permanentpen', name: 'Permanent Pen', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'powerpaste', name: 'PowerPaste', type: \"premium\" /* PluginType.Premium */, slug: 'introduction-to-powerpaste' },\n        { key: 'revisionhistory', name: 'Revision History', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'tinymcespellchecker', name: 'Spell Checker', type: \"premium\" /* PluginType.Premium */, slug: 'introduction-to-tiny-spellchecker' },\n        { key: 'autocorrect', name: 'Spelling Autocorrect', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'tableofcontents', name: 'Table of Contents', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'advtemplate', name: 'Templates', type: \"premium\" /* PluginType.Premium */, slug: 'advanced-templates' },\n        { key: 'tinycomments', name: 'Tiny Comments', type: \"premium\" /* PluginType.Premium */, slug: 'introduction-to-tiny-comments' },\n        { key: 'tinydrive', name: 'Tiny Drive', type: \"premium\" /* PluginType.Premium */, slug: 'tinydrive-introduction' },\n    ], (item) => ({\n        ...item,\n        // Set the defaults/fallbacks for the plugin urls\n        type: item.type || \"opensource\" /* PluginType.OpenSource */,\n        slug: item.slug || item.key\n    }));\n\n    const tab$1 = (editor) => {\n        const availablePlugins = () => {\n            const premiumPlugins = filter(urls, ({ type }) => {\n                return type === \"premium\" /* PluginUrls.PluginType.Premium */;\n            });\n            const sortedPremiumPlugins = sort(map(premiumPlugins, (p) => p.name), (s1, s2) => s1.localeCompare(s2));\n            const premiumPluginList = map(sortedPremiumPlugins, (pluginName) => `<li>${pluginName}</li>`).join('');\n            return '<div>' +\n                '<p><b>' + global$2.translate('Premium plugins:') + '</b></p>' +\n                '<ul>' +\n                premiumPluginList +\n                '<li class=\"tox-help__more-link\" \">' +\n                '<a href=\"https://www.tiny.cloud/pricing/?utm_campaign=help_dialog_plugin_tab&utm_source=tiny&utm_medium=referral&utm_term=read_more&utm_content=premium_plugin_heading\" rel=\"noopener\" target=\"_blank\"' +\n                ' data-alloy-tabstop=\"true\" tabindex=\"-1\">' + global$2.translate('Learn more...') + '</a></li>' +\n                '</ul>' +\n                '</div>';\n        };\n        const makeLink = (p) => `<a data-alloy-tabstop=\"true\" tabindex=\"-1\" href=\"${p.url}\" target=\"_blank\" rel=\"noopener\">${p.name}</a>`;\n        const identifyUnknownPlugin = (editor, key) => {\n            const getMetadata = editor.plugins[key].getMetadata;\n            if (isFunction(getMetadata)) {\n                const metadata = getMetadata();\n                return { name: metadata.name, html: makeLink(metadata) };\n            }\n            else {\n                return { name: key, html: key };\n            }\n        };\n        const getPluginData = (editor, key) => find(urls, (x) => {\n            return x.key === key;\n        }).fold(() => {\n            return identifyUnknownPlugin(editor, key);\n        }, (x) => {\n            // We know this plugin, so use our stored details.\n            const name = x.type === \"premium\" /* PluginUrls.PluginType.Premium */ ? `${x.name}*` : x.name;\n            const html = makeLink({ name, url: `https://www.tiny.cloud/docs/tinymce/7/${x.slug}/` });\n            return { name, html };\n        });\n        const getPluginKeys = (editor) => {\n            const keys$1 = keys(editor.plugins);\n            const forcedPlugins = getForcedPlugins(editor);\n            const hiddenPlugins = isUndefined(forcedPlugins) ? ['onboarding'] : forcedPlugins.concat(['onboarding']);\n            return filter(keys$1, (k) => !contains(hiddenPlugins, k));\n        };\n        const pluginLister = (editor) => {\n            const pluginKeys = getPluginKeys(editor);\n            const sortedPluginData = sort(map(pluginKeys, (k) => getPluginData(editor, k)), (pd1, pd2) => pd1.name.localeCompare(pd2.name));\n            const pluginLis = map(sortedPluginData, (key) => {\n                return '<li>' + key.html + '</li>';\n            });\n            const count = pluginLis.length;\n            const pluginsString = pluginLis.join('');\n            const html = '<p><b>' + global$2.translate(['Plugins installed ({0}):', count]) + '</b></p>' +\n                '<ul>' + pluginsString + '</ul>';\n            return html;\n        };\n        const installedPlugins = (editor) => {\n            if (editor == null) {\n                return '';\n            }\n            return '<div>' +\n                pluginLister(editor) +\n                '</div>';\n        };\n        const htmlPanel = {\n            type: 'htmlpanel',\n            presets: 'document',\n            html: [\n                installedPlugins(editor),\n                availablePlugins()\n            ].join('')\n        };\n        return {\n            name: 'plugins',\n            title: 'Plugins',\n            items: [\n                htmlPanel\n            ]\n        };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.EditorManager');\n\n    const tab = () => {\n        const getVersion = (major, minor) => major.indexOf('@') === 0 ? 'X.X.X' : major + '.' + minor;\n        const version = getVersion(global.majorVersion, global.minorVersion);\n        const changeLogLink = '<a data-alloy-tabstop=\"true\" tabindex=\"-1\" href=\"https://www.tiny.cloud/docs/tinymce/7/changelog/?utm_campaign=help_dialog_version_tab&utm_source=tiny&utm_medium=referral\" rel=\"noopener\" target=\"_blank\">TinyMCE ' + version + '</a>';\n        const htmlPanel = {\n            type: 'htmlpanel',\n            html: '<p>' + global$2.translate(['You are using {0}', changeLogLink]) + '</p>',\n            presets: 'document'\n        };\n        return {\n            name: 'versions',\n            title: 'Version',\n            items: [\n                htmlPanel\n            ]\n        };\n    };\n\n    const parseHelpTabsSetting = (tabsFromSettings, tabs) => {\n        const newTabs = {};\n        const names = map(tabsFromSettings, (t) => {\n            var _a;\n            if (isString(t)) {\n                // Code below shouldn't care if a tab name doesn't have a spec.\n                // If we find it does, we'll need to make this smarter.\n                // CustomTabsTest has a case for this.\n                if (has(tabs, t)) {\n                    newTabs[t] = tabs[t];\n                }\n                return t;\n            }\n            else {\n                const name = (_a = t.name) !== null && _a !== void 0 ? _a : generate('tab-name');\n                newTabs[name] = t;\n                return name;\n            }\n        });\n        return { tabs: newTabs, names };\n    };\n    const getNamesFromTabs = (tabs) => {\n        const names = keys(tabs);\n        // Move the versions tab to the end if it exists\n        const idx = names.indexOf('versions');\n        if (idx !== -1) {\n            names.splice(idx, 1);\n            names.push('versions');\n        }\n        return { tabs, names };\n    };\n    const pParseCustomTabs = async (editor, customTabs, pluginUrl) => {\n        const shortcuts = tab$2();\n        const nav = await pTab(pluginUrl);\n        const plugins = tab$1(editor);\n        const versions = tab();\n        const tabs = {\n            [shortcuts.name]: shortcuts,\n            [nav.name]: nav,\n            [plugins.name]: plugins,\n            [versions.name]: versions,\n            ...customTabs.get()\n        };\n        return Optional.from(getHelpTabs(editor)).fold(() => getNamesFromTabs(tabs), (tabsFromSettings) => parseHelpTabsSetting(tabsFromSettings, tabs));\n    };\n    const init = (editor, customTabs, pluginUrl) => () => {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        pParseCustomTabs(editor, customTabs, pluginUrl).then(({ tabs, names }) => {\n            const foundTabs = map(names, (name) => get$1(tabs, name));\n            const dialogTabs = cat(foundTabs);\n            const body = {\n                type: 'tabpanel',\n                tabs: dialogTabs\n            };\n            editor.windowManager.open({\n                title: 'Help',\n                size: 'medium',\n                body,\n                buttons: [\n                    {\n                        type: 'cancel',\n                        name: 'close',\n                        text: 'Close',\n                        primary: true\n                    }\n                ],\n                initialData: {}\n            });\n        });\n    };\n\n    var Plugin = () => {\n        global$4.add('help', (editor, pluginUrl) => {\n            const customTabs = Cell({});\n            const api = get(customTabs);\n            register$1(editor);\n            const dialogOpener = init(editor, customTabs, pluginUrl);\n            register(editor, dialogOpener);\n            register$2(editor, dialogOpener);\n            editor.shortcuts.add('Alt+0', 'Open help dialog', 'mceHelp');\n            initI18nLoad(editor, pluginUrl);\n            return api;\n        });\n    };\n\n    Plugin();\n    /** *****\n     * DO NOT EXPORT ANYTHING\n     *\n     * IF YOU DO ROLLUP WILL LEAVE A GLOBAL ON THE PAGE\n     *******/\n\n})();\n"],"names":["isString","type","value","x","t","Array","isArray","o","v","constructor","String","prototype","isPrototypeOf","_a","name","typeOf","isUndefined","undefined","a","isFunction","isSimpleType","never","Optional","tag","this","some","none","singletonNone","fold","onNone","onSome","isSome","isNone","map","mapper","bind","binder","exists","predicate","forall","filter","getOr","replacement","or","getOrThunk","thunk","orThunk","getOrDie","message","Error","from","isNullable","getOrNull","getOrUndefined","each","worker","toArray","toString","nativeSlice","slice","nativeIndexOf","indexOf","contains","xs","ts","call","rawIndexOf","f","len","length","r","i","pred","push","find","until","findUntil","sort","comparator","copy","keys","Object","hasOwnProperty","has","obj","key","unique","generate","prefix","time","Date","getTime","random$1","Math","floor","window","crypto","getRandomValues","Uint32Array","global$4","tinymce","util","Tools","resolve","option","editor","options","get","getHelpTabs","getForcedPlugins","global$3","global$2","pLoadHtmlByLangCode","baseUrl","langCode","load","pLoadI18nHtml","getCode","catch","global$1","convertText","source","isMac","os","isMacOS","isiOS","replace","alt","ctrl","shift","meta","access","shortcut","split","updated","segment","search","toLowerCase","trim","join","shortcuts","action","tab$2","title","items","header","cells","shortcutText","urls","slug","item","tab$1","makeLink","p","url","getPluginData","getMetadata","plugins","metadata","html","identifyUnknownPlugin","pluginLister","pluginKeys","keys$1","forcedPlugins","hiddenPlugins","concat","k","getPluginKeys","sortedPluginData","pd1","pd2","localeCompare","pluginLis","count","pluginsString","translate","htmlPanel","presets","installedPlugins","premiumPlugins","sortedPremiumPlugins","s1","s2","premiumPluginList","pluginName","availablePlugins","global","pParseCustomTabs","async","customTabs","pluginUrl","nav","pTab","versions","major","minor","changeLogLink","majorVersion","minorVersion","tab","tabs","names","idx","splice","getNamesFromTabs","tabsFromSettings","newTabs","parseHelpTabsSetting","init","then","body","arr","cat","get$1","windowManager","open","size","buttons","text","primary","initialData","add","initial","set","Cell","api","addTab","spec","currentCustomTabs","registerOption","register","processor","register$1","dialogOpener","ui","registry","addButton","icon","tooltip","onAction","context","addMenuItem","addCommand","register$2","on","initI18nLoad"],"sourceRoot":""}