{"version":3,"file":"chunks/61067.0efd3788ef341d5c1ec7.min.js","mappings":"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","sources":["webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/validation/validation.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/utils.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/depends/depends.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/logging.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/datetime-picker/datetime-picker.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/basepattern.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/parser.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/ajax/ajax.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/inject/inject.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/events.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/jquery-ext.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/checklist/checklist.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/registry.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/dom.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/mockup-parser.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/base.js","webpack://@plone/mockup/./node_modules/@patternslib/pat-code-editor/src/code-editor.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/uuid.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/polyfills.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/display-time/display-time.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/close-panel/close-panel.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/tooltip/tooltip.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/store.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/date-picker/date-picker.js"],"sourcesContent":["// Patterns validate - Form vlidation\nimport \"../../core/polyfills\"; // SubmitEvent.submitter for Safari < 15.4 and jsDOM\nimport $ from \"jquery\";\nimport { BasePattern } from \"../../core/basepattern\";\nimport Parser from \"../../core/parser\";\nimport dom from \"../../core/dom\";\nimport events from \"../../core/events\";\nimport logging from \"../../core/logging\";\nimport utils from \"../../core/utils\";\nimport registry from \"../../core/registry\";\n\nconst logger = logging.getLogger(\"pat-validation\");\n//logger.setLevel(logging.Level.DEBUG);\n\nexport const parser = new Parser(\"validation\");\nparser.addArgument(\"disable-selector\", \"[type=submit], button:not([type=button])\"); // Elements which must be disabled if there are errors\nparser.addArgument(\"message-date\", \"\"); // \"This value must be a valid date\");\nparser.addArgument(\"message-datetime\", \"\"); // \"This value must be a valid date and time\");\nparser.addArgument(\"message-email\", \"\"); // \"This value must be a valid email address\");\nparser.addArgument(\"message-max\", \"\"); // \"This value must be less than or equal to %{count}\");\nparser.addArgument(\"message-min\", \"\"); // \"This value must be greater than or equal to %{count}\"); // prettier-ignore\nparser.addArgument(\"message-number\", \"\"); // \"This value must be a number\");\nparser.addArgument(\"message-required\", \"\"); // \"This field is required\");\nparser.addArgument(\"message-equality\", \"is not equal to %{attribute}.\");\nparser.addArgument(\"not-after\", null);\nparser.addArgument(\"not-before\", null);\nparser.addArgument(\"equality\", null);\nparser.addArgument(\"delay\", 100); // Delay before validation is done to avoid validating while typing.\n\n// BBB\n// TODO: deprecated. Will be removed with next major version.\nparser.addAlias(\"message-integer\", \"message-number\");\nparser.addArgument(\"error-template\");\n\nconst KEY_ERROR_EL = \"__patternslib__input__error__el\";\nconst KEY_ERROR_MSG = \"__patternslib__input__error__msg\";\n\nclass Pattern extends BasePattern {\n    static name = \"validation\";\n    static trigger = \"form.pat-validation\";\n    static parser = parser;\n\n    init() {\n        events.add_event_listener(\n            this.el,\n            \"submit\",\n            `pat-validation--submit--validator`,\n            (e) => {\n                // On submit, check all.\n                // Immediate, non-debounced check with submit. Otherwise submit\n                // is not cancelable.\n                for (const input of this.inputs) {\n                    logger.debug(\"Checking input for submit\", input, e);\n                    this.check_input({ input: input, event: e });\n                }\n            },\n            // Make sure this event handler is run early, in the capturing\n            // phase in order to be able to cancel later non-capturing submit\n            // events.\n            { capture: true }\n        );\n\n        this.initialize_inputs();\n        $(this.el).on(\"pat-update\", () => {\n            this.initialize_inputs();\n        });\n\n        // Set ``novalidate`` attribute to disable the browser's validation\n        // bubbles but not disable the validation API.\n        this.el.setAttribute(\"novalidate\", \"\");\n    }\n\n    initialize_inputs() {\n        this.inputs = [\n            ...this.el.querySelectorAll(\"input[name], select[name], textarea[name]\"),\n        ];\n        this.disabled_elements = [\n            ...this.el.querySelectorAll(this.options.disableSelector),\n        ];\n\n        for (const [cnt, input] of this.inputs.entries()) {\n            // Cancelable debouncer.\n            const debouncer = utils.debounce((e) => {\n                logger.debug(\"Checking input for event\", input, e);\n                this.check_input({ input: input, event: e });\n            }, this.options.delay);\n\n            events.add_event_listener(\n                input,\n                \"input\",\n                `pat-validation--input-${input.name}--${cnt}--validator`,\n                (e) => debouncer(e)\n            );\n            events.add_event_listener(\n                input,\n                \"change\",\n                `pat-validation--change-${input.name}--${cnt}--validator`,\n                (e) => debouncer(e)\n            );\n            events.add_event_listener(\n                input,\n                \"blur\",\n                `pat-validation--blur-${input.name}--${cnt}--validator`,\n                (e) => debouncer(e)\n            );\n        }\n    }\n\n    check_input({ input, event, stop = false }) {\n        if (input.disabled) {\n            // No need to check disabled inputs.\n            return;\n        }\n\n        // In any case, clear the custom validity first.\n        this.set_error({ input: input, msg: \"\", skip_event: true });\n        const validity_state = input.validity;\n\n        if (event?.submitter?.hasAttribute(\"formnovalidate\")) {\n            // Do not check when a button with ``formnovalidate`` was used.\n            return;\n        }\n\n        logger.debug(`\n            validity_state.badInput ${validity_state.badInput}\n            validity_state.customError ${validity_state.customError}\n            validity_state.patternMismatch ${validity_state.patternMismatch}\n            validity_state.rangeOverflow ${validity_state.rangeOverflow}\n            validity_state.rangeUnderflow ${validity_state.rangeUnderflow}\n            validity_state.stepMismatch ${validity_state.stepMismatch}\n            validity_state.tooLong ${validity_state.tooLong}\n            validity_state.tooShort ${validity_state.tooShort}\n            validity_state.typeMismatch ${validity_state.typeMismatch}\n            validity_state.valid ${validity_state.valid}\n            validity_state.valueMissing ${validity_state.valueMissing}\n        `);\n\n        const input_options = parser.parse(input);\n\n        if (validity_state.valid) {\n            // Custom error cases or no invalid state.\n\n            if (\n                input_options.equality &&\n                this.el.querySelector(`[name=${input_options.equality}]`)?.value !==\n                    input.value\n            ) {\n                const message =\n                    input_options.message.equality ||\n                    `The value is not equal to %{attribute}`;\n                this.set_error({\n                    input: input,\n                    msg: message,\n                    attribute: input_options.equality,\n                });\n            } else if (input_options.not.after || input_options.not.before) {\n                const msg = input_options.message.date || input_options.message.datetime;\n                const msg_default_not_before = \"The date must be after %{attribute}\";\n                const msg_default_not_after = \"The date must be before %{attribute}\";\n\n                let not_after;\n                let not_after_el;\n                if (input_options.not.after) {\n                    if (utils.is_iso_date_time(input_options.not.after, true)) {\n                        not_after = new Date(input_options.not.after);\n                    } else {\n                        // Handle value as selector\n                        not_after_el = document.querySelector(input_options.not.after);\n                        not_after = not_after_el?.value\n                            ? new Date(not_after_el?.value)\n                            : undefined;\n                    }\n\n                    // Use null if no valid date.\n                    not_after = isNaN(not_after) ? null : not_after;\n                }\n\n                let not_before;\n                let not_before_el;\n                if (input_options.not.before) {\n                    if (utils.is_iso_date_time(input_options.not.before, true)) {\n                        not_before = new Date(input_options.not.before);\n                    } else {\n                        // Handle value as selector\n                        not_before_el = document.querySelector(input_options.not.before);\n                        not_before = not_before_el?.value\n                            ? new Date(not_before_el?.value)\n                            : undefined;\n                    }\n\n                    // Use null if no valid date.\n                    not_before = isNaN(not_before) ? null : not_before;\n                }\n\n                if (\n                    input.value &&\n                    utils.is_iso_date_time(input.value, true) &&\n                    !isNaN(new Date(input.value))\n                ) {\n                    // That's 1 valid date!\n                    const date = new Date(input.value);\n\n                    if (not_after && date > not_after) {\n                        let msg_attr;\n                        // Try to construct a meaningfull error message\n                        if (!not_after_el && input_options.not.after) {\n                            // fixed date case\n                            msg_attr = input_options.not.after;\n                        } else {\n                            // Get the label + other text content within the\n                            // label and replace all whitespace and newlines\n                            // with a single space.\n                            msg_attr = not_after_el?.labels?.[0]?.textContent.replace(\n                                /\\s\\s+/g, // replace all whitespace\n                                \" \" // with a single space\n                            );\n                            msg_attr = msg_attr || not_after_el.name;\n                        }\n                        this.set_error({\n                            input: input,\n                            msg: msg || msg_default_not_after,\n                            attribute: msg_attr.trim(),\n                        });\n                    } else if (not_before && date < not_before) {\n                        let msg_attr;\n                        // Try to construct a meaningfull error message\n                        if (!not_before_el && input_options.not.before) {\n                            // fixed date case\n                            msg_attr = input_options.not.before;\n                        } else {\n                            // Get the label + other text content within the\n                            // label and replace all whitespace and newlines\n                            // with a single space.\n                            msg_attr = not_before_el?.labels?.[0]?.textContent.replace(\n                                /\\s\\s+/g, // replace all whitespace\n                                \" \" // with a single space\n                            );\n                            msg_attr = msg_attr || not_before_el.name;\n                        }\n                        this.set_error({\n                            input: input,\n                            msg: msg || msg_default_not_before,\n                            attribute: msg_attr.trim(),\n                        });\n                    }\n                }\n\n                // always check the other input to clear/set errors\n                // do not re-check when stop is set to avoid infinite loops\n                if (!stop && not_after_el) {\n                    logger.debug(\"Check `not-after` input.\", not_after_el);\n                    this.check_input({ input: not_after_el, stop: true });\n                }\n                if (!stop && not_before_el) {\n                    logger.debug(\"Check `no-before` input.\", not_after_el);\n                    this.check_input({ input: not_before_el, stop: true });\n                }\n            }\n\n            if (!validity_state.customError) {\n                // No error to handle. Return.\n                this.remove_error(input, true);\n                return;\n            }\n        } else {\n            // Default error cases with custom messages.\n\n            if (validity_state.valueMissing && input_options.message.required) {\n                this.set_error({ input: input, msg: input_options.message.required });\n            } else if (validity_state.rangeUnderflow && input_options.message.min) {\n                this.set_error({\n                    input: input,\n                    msg: input_options.message.min,\n                    min: input.getAttribute(\"min\"),\n                });\n            } else if (validity_state.rangeOverflow && input_options.message.max) {\n                this.set_error({\n                    input: input,\n                    msg: input_options.message.max,\n                    max: input.getAttribute(\"max\"),\n                });\n            } else if (\n                (validity_state.badInput || validity_state.stepMismatch) &&\n                input.type === \"number\" &&\n                input_options.message.number\n            ) {\n                this.set_error({ input: input, msg: input_options.message.number });\n            } else if (\n                validity_state.typeMismatch &&\n                input.type === \"email\" &&\n                input_options.message.email\n            ) {\n                this.set_error({ input: input, msg: input_options.message.email });\n            } else if (\n                validity_state.rangeUnderflow &&\n                input.type === \"date\" &&\n                input_options.message.date\n            ) {\n                this.set_error({ input: input, msg: input_options.message.date });\n            } else if (\n                validity_state.rangeOverflow &&\n                input.type === \"date\" &&\n                input_options.message.date\n            ) {\n                this.set_error({ input: input, msg: input_options.message.date });\n            } else if (\n                validity_state.rangeUnderflow &&\n                input.type === \"datetime\" &&\n                input_options.message.datetime\n            ) {\n                this.set_error({ input: input, msg: input_options.message.datetime });\n            } else if (\n                validity_state.rangeOverflow &&\n                input.type === \"datetime\" &&\n                input_options.message.datetime\n            ) {\n                this.set_error({ input: input, msg: input_options.message.datetime });\n            } else {\n                // Still an error, but without customized messages.\n                // Call `emit_update` separately\n                this.emit_update(\"invalid\");\n            }\n\n        }\n\n        if (event?.type === \"submit\") {\n            // Do not submit in error case and prevent other handlers to take action.\n            event.preventDefault();\n            event.stopPropagation();\n            event.stopImmediatePropagation();\n        }\n        this.set_error_message(input);\n    }\n\n    set_error({ input, msg, attribute = null, min = null, max = null, skip_event = false }) {\n        // Replace some variables, as like validate.js\n        if (attribute) {\n            msg = msg.replace(/%{attribute}/g, attribute);\n        }\n        if (min) {\n            msg = msg.replace(/%{count}/g, min);\n        }\n        if (max) {\n            msg = msg.replace(/%{count}/g, max);\n        }\n        msg = msg.replace(/%{value}/g, JSON.stringify(input.value));\n\n        input.setCustomValidity(msg);\n        // Store the error message on the input.\n        // Hidden inputs do not participate in validation but we need this\n        // (e.g. styled date input).\n        input[KEY_ERROR_MSG] = msg;\n\n        if (!skip_event) {\n            this.emit_update(\"invalid\");\n        }\n    }\n\n    remove_error(input, all_of_group = false, skip_event = false) {\n        // Remove error message and related referencesfrom input.\n\n        let inputs = [input];\n        if (all_of_group) {\n            // Get all inputs with the same name - e.g. radio buttons, checkboxes.\n            inputs = this.inputs.filter((it) => it.name === input.name);\n        }\n        for (const it of inputs) {\n            const error_node = it[KEY_ERROR_EL];\n            it[KEY_ERROR_EL] = null;\n            error_node?.remove();\n        }\n\n        // disable selector\n        if (this.el.checkValidity()) {\n            for (const it of this.disabled_elements) {\n                if (it.disabled) {\n                    it.removeAttribute(\"disabled\");\n                    it.classList.remove(\"disabled\");\n                }\n            }\n        }\n\n        if (!skip_event) {\n            this.emit_update(\"valid\");\n        }\n    }\n\n    set_error_message(input) {\n        // First, remove the old error message.\n        this.remove_error(input, false, true);\n\n        // Do not set a error message for a input group like radio buttons or\n        // checkboxes where one has already been set.\n        const inputs = this.inputs.filter((it) => it.name === input.name);\n        if (inputs.length > 1 && inputs.some((it) => !!it[KEY_ERROR_EL])) {\n            // error message for input group already set.\n            return;\n        }\n\n        // Create the validation error DOM node from the template\n        const validation_message = input.validationMessage || input[KEY_ERROR_MSG];\n        const error_node = dom.create_from_string(\n            this.error_template(validation_message)\n        ).firstChild;\n\n        let fieldset;\n        if (input.type === \"radio\" || input.type === \"checkbox\") {\n            fieldset = input.closest(\"fieldset.pat-checklist\");\n        }\n        if (fieldset) {\n            fieldset.append(error_node);\n        } else {\n            input.after(error_node);\n        }\n        input[KEY_ERROR_EL] = error_node;\n\n        let did_disable = false;\n        for (const it of this.disabled_elements) {\n            // Disable for melements if they are not already disabled and which\n            // do not have set the `formnovalidate` attribute, e.g.\n            // `<button formnovalidate>cancel</button>`.\n            if (!it.disabled && !it.formNoValidate) {\n                did_disable = true;\n                it.setAttribute(\"disabled\", \"disabled\");\n                it.classList.add(\"disabled\");\n                logger.debug(\"Disable element\", it);\n            }\n        }\n\n        // Do an initial check of the whole form when a form element (e.g. the\n        // submit button) was disabled. We want to show the user all possible\n        // errors at once and after the submit button is disabled there is no\n        // way to check the whole form at once. ... well we also do not want to\n        // check the whole form when one input was changed....\n        if (did_disable) {\n            logger.debug(\"Checking whole form after element was disabled.\");\n            for (const _input of this.inputs.filter((it) => it !== input)) {\n                this.check_input({ input: _input, stop: true });\n            }\n        }\n    }\n\n    error_template(message) {\n        // Template for the validation message\n        return `<em class=\"validation warning message\">${message}</em>`;\n    }\n}\n\nregistry.register(Pattern);\n\nexport default Pattern;\nexport { Pattern };\n","import $ from \"jquery\";\nimport dom from \"./dom\";\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24; // Milliseconds per day.\n\n$.fn.safeClone = function () {\n    var $clone = this.clone();\n    return $clone;\n};\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(\" this is null or not defined\");\n        }\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + \" is not a function\");\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\nvar singleBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR EACH\n     * matched element in the DOM.\n     *\n     * This is how the Mockup-type patterns behave. They are constructor\n     * functions which need to be invoked once per jQuery-wrapped DOM node\n     * for all DOM nodes on which the pattern applies.\n     */\n    var $this = this;\n    $this.each(function () {\n        var pat,\n            $el = $(this);\n        pat = pattern.init($el, options);\n        if (method) {\n            if (pat[method] === undefined) {\n                $.error(\n                    \"Method \" + method + \" does not exist on jQuery.\" + pattern.name\n                );\n                return false;\n            }\n            if (method.charAt(0) === \"_\") {\n                $.error(\"Method \" + method + \" is private on jQuery.\" + pattern.name);\n                return false;\n            }\n            pat[method].apply(pat, [options]);\n        }\n    });\n    return $this;\n};\n\nvar pluralBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR ALL\n     * matched elements in the DOM.\n     *\n     * This is how the vanilla Patternslib-type patterns behave. They are\n     * simple objects with an init method and this method gets called once\n     * with a list of jQuery-wrapped DOM nodes on which the pattern\n     * applies.\n     */\n    var $this = this;\n    if (method) {\n        if (pattern[method]) {\n            return pattern[method].apply($this, [$this].concat([options]));\n        } else {\n            $.error(\"Method \" + method + \" does not exist on jQuery.\" + pattern.name);\n        }\n    } else {\n        pattern.init.apply($this, [$this].concat([options]));\n    }\n    return $this;\n};\n\nvar jqueryPlugin = function (pattern) {\n    return function (method, options) {\n        var $this = this;\n        if ($this.length === 0) {\n            return $this;\n        }\n        if (typeof method === \"object\") {\n            options = method;\n            method = undefined;\n        }\n        if (typeof pattern === \"function\") {\n            return singleBoundJQueryPlugin.call(this, pattern, method, options);\n        } else {\n            return pluralBoundJQueryPlugin.call(this, pattern, method, options);\n        }\n    };\n};\n\n// Is a given variable an object?\nfunction isObject(obj) {\n    var type = typeof obj;\n    return type === \"function\" || (type === \"object\" && !!obj);\n}\n\n// Extend a given object with all the properties in passed-in object(s).\nfunction extend(obj) {\n    if (!isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (hasOwnProperty.call(source, prop)) {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n}\n// END: Taken from Underscore.js until here.\n\nfunction findLabel(input) {\n    var $label;\n    for (\n        var label = input.parentNode;\n        label && label.nodeType !== 11;\n        label = label.parentNode\n    ) {\n        if (label.tagName === \"LABEL\") {\n            return label;\n        }\n    }\n    if (input.id) {\n        $label = $('label[for=\"' + input.id + '\"]');\n    }\n    if ($label && $label.length === 0 && input.form) {\n        $label = $('label[for=\"' + input.name + '\"]', input.form);\n    }\n    if ($label && $label.length) {\n        return $label[0];\n    } else {\n        return null;\n    }\n}\n\n// Taken from http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Create a RegExp object of a wildcard search string.\n *\n * @param {string} wildcard: A search string which can contain wildcards \"*\".\n *                           The wildcard \"*\" can be anywhere in the string and\n *                           can also be used multiple times. If no wildcard is\n *                           present the search string is used for an exact match.\n\n * @returns {RegExp}: A RegExp object which can be used to match strings.\n */\nfunction regexp_from_wildcard(wildcard) {\n    let regexp = wildcard.replace(/[\\-\\[\\]{}()+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n    regexp = regexp.replace(/[*]/g, \".*\");\n    regexp = new RegExp(`^${regexp}$`);\n    return regexp;\n}\n\n/**\n * Remove classes from a list of targets if they match a specific pattern.\n *\n * @param {Node, NodeList} targets: Dom Node or NodeList where the classes should be removed.\n * @param {string} classes: String matching classes to be removed.\n *                          You can add a \"*\" as wildcard to search for classes to be removed.\n *                          E.g. \"icon-*-alert\" to remove any of \"icon-1-alert icon-2-alert\".\n *\n * @returns {undefined}: This method directly operates on the targets.\n */\nfunction removeWildcardClass(targets, classes) {\n    targets = utils.ensureArray(targets);\n\n    if (classes.indexOf(\"*\") === -1) {\n        for (const target of targets) {\n            target.classList.remove(classes);\n        }\n    } else {\n        const matcher = regexp_from_wildcard(classes);\n        for (const target of targets) {\n            const class_list = (target.getAttribute(\"class\") || \"\").split(/\\s+/);\n            if (!class_list.length) {\n                continue;\n            }\n            const ok = class_list.filter((it) => !matcher.test(it));\n            if (ok.length) {\n                target.setAttribute(\"class\", ok.join(\" \"));\n            } else {\n                target.removeAttribute(\"class\");\n            }\n        }\n    }\n}\n\nfunction hasValue(el) {\n    if (el.tagName === \"INPUT\") {\n        if (el.type === \"checkbox\" || el.type === \"radio\") {\n            return el.checked;\n        }\n        return el.value !== \"\";\n    }\n    if (el.tagName === \"SELECT\") {\n        return el.selectedIndex !== -1;\n    }\n    if (el.tagName === \"TEXTAREA\") {\n        return el.value !== \"\";\n    }\n    return false;\n}\n\nconst hideOrShow = (nodes, visible, options, pattern_name) => {\n    nodes = dom.toNodeArray(nodes);\n\n    const transitions = {\n        none: { hide: \"hide\", show: \"show\" },\n        fade: { hide: \"fadeOut\", show: \"fadeIn\" },\n        slide: { hide: \"slideUp\", show: \"slideDown\" },\n    };\n\n    const duration =\n        options.transition === \"css\" || options.transition === \"none\"\n            ? null\n            : options.effect.duration;\n\n    const on_complete = (el) => {\n        el.classList.remove(\"in-progress\");\n        el.classList.add(visible ? \"visible\" : \"hidden\");\n        $(el).trigger(\"pat-update\", {\n            pattern: pattern_name,\n            action: \"attribute-changed\",\n            dom: el,\n            transition: \"complete\",\n        });\n    };\n\n    for (const el of nodes) {\n        el.classList.remove(\"visible\");\n        el.classList.remove(\"hidden\");\n        el.classList.remove(\"in-progress\");\n\n        if (duration) {\n            const t = transitions[options.transition];\n            el.classList.add(\"in-progress\");\n            $(el).trigger(\"pat-update\", {\n                pattern: pattern_name,\n                action: \"attribute-changed\",\n                dom: el,\n                transition: \"start\",\n            });\n            $(el)[visible ? t.show : t.hide]({\n                duration: duration,\n                easing: options.effect.easing,\n                complete: () => on_complete(el),\n            });\n        } else {\n            if (options.transition !== \"css\") {\n                dom[visible ? \"show\" : \"hide\"](el);\n            }\n            on_complete(el);\n        }\n    }\n};\n\nfunction addURLQueryParameter(fullURL, param, value) {\n    /* Using a positive lookahead (?=\\=) to find the given parameter,\n     * preceded by a ? or &, and followed by a = with a value after\n     * than (using a non-greedy selector) and then followed by\n     * a & or the end of the string.\n     *\n     * Taken from http://stackoverflow.com/questions/7640270/adding-modify-query-string-get-variables-in-a-url-with-javascript\n     */\n    var val = new RegExp(\"(\\\\?|\\\\&)\" + param + \"=.*?(?=(&|$))\"),\n        parts = fullURL.toString().split(\"#\"),\n        url = parts[0],\n        hash = parts[1],\n        qstring = /\\?.+$/,\n        newURL = url;\n    // Check if the parameter exists\n    if (val.test(url)) {\n        // if it does, replace it, using the captured group\n        // to determine & or ? at the beginning\n        newURL = url.replace(val, \"$1\" + param + \"=\" + value);\n    } else if (qstring.test(url)) {\n        // otherwise, if there is a query string at all\n        // add the param to the end of it\n        newURL = url + \"&\" + param + \"=\" + value;\n    } else {\n        // if there's no query string, add one\n        newURL = url + \"?\" + param + \"=\" + value;\n    }\n    if (hash) {\n        newURL += \"#\" + hash;\n    }\n    return newURL;\n}\n\nfunction removeDuplicateObjects(objs) {\n    /* Given an array of objects, remove any duplicate objects which might\n     * be present.\n     */\n    const comparator = function (k, v) {\n        return this[k] === v;\n    };\n\n    return objs.reduce(function (list, next_obj) {\n        let is_duplicate = false;\n        for (const obj of list) {\n            is_duplicate =\n                Object.keys(obj).length === Object.keys(next_obj).length &&\n                Object.entries(obj).filter(\n                    (it) => !comparator.bind(next_obj)(it[0], it[1])\n                ).length === 0;\n        }\n        if (!is_duplicate) {\n            list.push(next_obj);\n        }\n        return list;\n    }, []);\n}\n\nfunction mergeStack(stack, length) {\n    /* Given a list of lists of objects (which for brevity we call a stack),\n     * return a list of objects where each object is the merge of all the\n     * corresponding original objects at that particular index.\n     *\n     * If a certain sub-list doesn't have an object at that particular\n     * index, the last object in that list is merged.\n     */\n    const results = [];\n    for (let i = 0; i < length; i++) {\n        results.push({});\n    }\n    for (const frame of stack) {\n        const frame_length = frame.length - 1;\n        for (let x = 0; x < length; x++) {\n            results[x] = $.extend(\n                results[x] || {},\n                frame[x > frame_length ? frame_length : x]\n            );\n        }\n    }\n    return results;\n}\n\nfunction isElementInViewport(el, partial = false, offset = 0) {\n    /* returns true if element is visible to the user ie. is in the viewport.\n     * Setting partial parameter to true, will only check if a part of the element is visible\n     * in the viewport, specifically that some part of that element is touching the top part\n     * of the viewport. This only applies to the vertical direction, ie. doesnt check partial\n     * visibility for horizontal scrolling\n     * some code taken from:\n     * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\n     */\n    if (el instanceof $) {\n        el = el[0];\n    }\n\n    const rec = el.getBoundingClientRect();\n    const rec_values = [rec.top, rec.bottom, rec.left, rec.right];\n\n    if (rec_values.every((val) => val === 0)) {\n        // if every property of rec is 0, the element is invisible;\n        return false;\n    } else if (partial) {\n        // when using getBoundingClientRect() (in the vertical case)\n        // negative means above top of viewport, positive means below top of viewport\n        // therefore for part of the element to be touching or crossing the top of the viewport\n        // rec.top must <= 0 and rec.bottom must >= 0\n        // an optional tolerance offset can be added for when the desired element is not exactly\n        // toucing the top of the viewport but needs to be considered as touching.\n        return (\n            rec.top <= 0 + offset && rec.bottom >= 0 + offset\n            //(rec.top >= 0+offset && rec.top <= window.innerHeight) // this checks if the element\n            // touches bottom part of viewport\n            // XXX do we want to include a check for the padding of an element?\n            // using window.getComputedStyle(target).paddingTop\n        );\n    } else {\n        // this will return true if the entire element is completely in the viewport\n        return (\n            rec.top >= 0 &&\n            rec.left >= 0 &&\n            rec.bottom <=\n                (window.innerHeight || document.documentElement.clientHeight) &&\n            rec.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    }\n}\n\n/* parseTime - Parse a duration from a string and return the parsed time in milliseconds.\n *\n * @param {String} time - A duration/time string like ``1ms``, ``1s`` or ``1m``.\n *\n * @returns {Number} - A integer which represents the parsed time in milliseconds.\n */\nfunction parseTime(time) {\n    var m = /^(\\d+(?:\\.\\d+)?)\\s*(\\w*)/.exec(time);\n    if (!m) {\n        throw new Error(\"Invalid time\");\n    }\n    var amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"s\":\n            return Math.round(amount * 1000);\n        case \"m\":\n            return Math.round(amount * 1000 * 60);\n        case \"ms\":\n        default:\n            return Math.round(amount);\n    }\n}\n\n/*\n\n * parseLength - Parse a length from a string and return the parsed length in\n * pixels.\n\n * @param {String} length - A length string like `1px` or `25%`. Lengths without a unit are treated as pixels.\n * @param {Number} reference_length - The reference length to use for percentage lengths.\n *\n * @returns {Number} - A integer which represents the parsed length in pixels.\n *\n * @throws {Error} - If the length string is invalid.\n *\n * @example\n * parseLength(\"1px\"); // 1\n * parseLength(\"10%\", 100); // 10\n *\n */\nfunction parseLength(length, reference_length = null) {\n    const m = /^(\\d+(?:\\.\\d+)?)\\s*(\\%?\\w*)/.exec(length);\n    if (!m) {\n        throw new Error(\"Invalid length\");\n    }\n    const amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"px\":\n            return Math.round(amount);\n        case \"%\":\n            if (!reference_length) {\n                return 0;\n            }\n            return (reference_length / 100) * Math.round(amount);\n        case \"vw\":\n            return Math.round((amount * window.innerWidth) / 100);\n        case \"vh\":\n            return Math.round((amount * window.innerHeight) / 100);\n        case \"vmin\":\n            return Math.round(\n                (amount * Math.min(window.innerWidth, window.innerHeight)) / 100\n            );\n        case \"vmax\":\n            return Math.round(\n                (amount * Math.max(window.innerWidth, window.innerHeight)) / 100\n            );\n        default:\n            return Math.round(amount);\n    }\n}\n\n// Return a jQuery object with elements related to an input element.\nfunction findRelatives(el) {\n    var $el = $(el),\n        $relatives = $(el),\n        $label = $();\n\n    $relatives = $relatives.add($el.closest(\"label\"));\n    $relatives = $relatives.add($el.closest(\"fieldset\"));\n\n    if (el.id) $label = $(\"label[for='\" + el.id + \"']\");\n    if (!$label.length) {\n        var $form = $el.closest(\"form\");\n        if (!$form.length) $form = $(document.body);\n        $label = $form.find(\"label[for='\" + el.name + \"']\");\n    }\n    $relatives = $relatives.add($label);\n    return $relatives;\n}\n\nfunction get_bounds(el) {\n    // Return bounds of an element with it's values rounded and converted to ints.\n    const bounds = el.getBoundingClientRect();\n    return {\n        x: parseInt(Math.round(bounds.x), 10) || 0,\n        y: parseInt(Math.round(bounds.y), 10) || 0,\n        top: parseInt(Math.round(bounds.top), 10) || 0,\n        bottom: parseInt(Math.round(bounds.bottom), 10) || 0,\n        left: parseInt(Math.round(bounds.left), 10) || 0,\n        right: parseInt(Math.round(bounds.right), 10) || 0,\n        width: parseInt(Math.round(bounds.width), 10) || 0,\n        height: parseInt(Math.round(bounds.height), 10) || 0,\n    };\n}\n\nfunction checkInputSupport(type, invalid_value) {\n    /* Check input type support.\n     *  See: https://stackoverflow.com/a/10199306/1337474\n     */\n    let support = false;\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", type);\n    support = input.type == type;\n\n    if (invalid_value !== undefined) {\n        // Check for input type UI support\n        input.setAttribute(\"value\", invalid_value);\n        support = input.value !== invalid_value;\n    }\n    return support;\n}\n\nconst checkCSSFeature = (attribute, value, tag = \"div\") => {\n    /* Check for browser support of specific CSS feature.\n     */\n    tag = document.createElement(tag);\n    let supported = tag.style[attribute] !== undefined;\n    if (supported && value !== undefined) {\n        tag.style[attribute] = value;\n        supported = tag.style[attribute] === value;\n    }\n    return supported;\n};\n\nconst animation_frame = () => {\n    // Return promise to await next repaint cycle\n    // Use it in your async function like so: ``await utils.animation_frame()``\n    // From: http://www.albertlobo.com/fractals/async-await-requestanimationframe-buddhabrot\n    return new Promise(window.requestAnimationFrame);\n};\n\nconst timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds.\n * From: https://underscorejs.org/#debounce\n *\n * @param {Function} func - The function to debounce.\n * @param {Number} ms - The time in milliseconds to debounce.\n * @param {Object} timer - A module-global timer as an object.\n * @param {Boolean} [postpone=true] - If true, the function will only be called\n * at the end, after it stops being called for N milliseconds. If false, the\n * function will be called no more than each [ms] milliseconds, ensuring that\n * the function isn't postponed for for too long.\n *\n * @returns {Function} - The debounced function.\n */\nconst debounce = (func, ms, timer = { timer: null }, postpone = true) => {\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds.\n    // From: https://underscorejs.org/#debounce\n    //\n    // Make sure to initialize ``debounce`` only once per to-be-debounced\n    // function to not reinitialize the timer each time and debounce not being\n    // able to cancel previouse runs.\n    //\n    // Pass a module-global timer as an object ``{ timer: null }`` if you want\n    // to also cancel debounced functions from other pattern-invocations.\n    timer.last_run = 0;\n    return function () {\n        const args = arguments;\n        if (!postpone && timer.timer && Date.now() - timer.last_run <= ms) {\n            return;\n        }\n        clearTimeout(timer.timer);\n        timer.last_run = Date.now();\n        timer.timer = setTimeout(() => {\n            func.apply(this, args);\n        }, ms);\n    };\n};\n\n// TODO: Remove in next major release.\nconst isIE = () => {\n    // See: https://stackoverflow.com/a/9851769/1337474\n    // Internet Explorer 6-11\n    // eslint-disable-next-line no-constant-binary-expression\n    return /*@cc_on!@*/false || !!document.documentMode;\n};\n\nconst jqToNode = (el) => {\n    // Return a DOM node if a jQuery node was passed.\n    if (el.jquery) {\n        el = el[0];\n    }\n    return el;\n};\n\n/**\n * Always return an iterable object.\n *\n * @param {any} it: The object which needs to be wrapped in an array or returned as is if it is iterable.\n * @param {boolean} force_array: If the object is iterable but not an Array, convert it to an array (e.g. For jQuery items or NodeList objects).\n *\n * @returns {Array}: Returns the object wrapped in an Array, expanded to an Array or as-is if it is already iterable.\n */\nconst ensureArray = (it, force_array) => {\n    // Ensure to return always an array\n    const array_like = !!(\n        NodeList.prototype.isPrototypeOf(it) || // eslint-disable-line no-prototype-builtins\n        Array.isArray(it) ||\n        it.jquery\n    );\n    return array_like ? (force_array ? [...it] : it) : [it];\n};\n\nconst localized_isodate = (date) => {\n    // Return a iso date (date only) in the current timezone instead of a\n    // UTC ISO 8601 date+time component which toISOString returns.\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n\n    return `${year}-${month}-${day}`;\n};\n\n/**\n * Replace HTML reserved characters with html entities to add HTML for user\n * editing to e.g. a textarea or a contenteditable.\n *\n * See:\n *  https://stackoverflow.com/a/22706073/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} html - The HTML string to encode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&`` will be replaced with ``&amp;``.\n *                     ``<`` will be repalced with ``&lt;``,\n *                     ``>`` will be replaced with ``&gt;``,\n *                     ``\"`` will be replaced with ``&quot;``.\n */\nconst escape_html = (html) => {\n    if (!html) {\n        return \"\";\n    }\n    const el = document.createElement(\"div\");\n    el.appendChild(document.createTextNode(html));\n    // Return escaped html and also replace quotes.\n    return el.innerHTML.replace(/\"/g, \"&quot;\");\n};\n\n/**\n * Return unescaped, raw HTML from an escaped HTML  string.\n *\n * See:\n *  https://stackoverflow.com/a/34064434/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} escaped_html - The HTML string to decode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&amp;`` will be replaced with ``&``,\n *                     ``&lt;`` will be repalced with ``<``,\n *                     ``&gt;`` will be replaced with ``>``,\n *                     ``&quot;`` will be replaced with ``\"``.\n */\nconst unescape_html = (escaped_html) => {\n    if (!escaped_html) {\n        return \"\";\n    }\n    const doc = new DOMParser().parseFromString(escaped_html, \"text/html\");\n    // Return unescaped html and also unescape quote named entities.\n    return doc.documentElement.textContent.replace(/&quot;/g, '\"');\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date/time string with or without an optional time component.\n *\n * @param {String} value - The date/time value to be checked.\n * @param {Boolean} [optional_time=false] - True, if time component is optional.\n * @return {Boolean} - True, if the given value is a valid Date string. False if not.\n */\nconst is_iso_date_time = (value, optional_time = false) => {\n    const re_date_time = optional_time\n        ? /^\\d{4}-[01]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d)?$/\n        : /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date string and without a time component.\n *\n * @param {String} value - The date value to be checked.\n * @return {Boolean} - True, if the given value is a valid ISO 8601 date string without a time component. False if not.\n */\nconst is_iso_date = (value) => {\n    const re_date_time = /^\\d{4}-[01]\\d-[0-3]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return the number of days between two dates.\n * Based on: https://stackoverflow.com/a/15289883/1337474\n *\n * @param {Date} date_1 - First date to compare. We will substract date_2 from date_1.\n * @param {Date} date_2 - Second date to compare.\n * @return {Number} - The number of days between the two dates.\n */\nconst date_diff = (date_1, date_2) => {\n    // Discard the time and time-zone information.\n    const utc_1 = Date.UTC(date_1.getFullYear(), date_1.getMonth(), date_1.getDate());\n    const utc_2 = Date.UTC(date_2.getFullYear(), date_2.getMonth(), date_2.getDate());\n\n    return Math.floor((utc_1 - utc_2) / _MS_PER_DAY);\n};\n\n/**\n * Build intersection observer threshold list.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#building_the_array_of_threshold_ratios\n *\n * @param {Number} num_steps - The number of steps to use.\n *\n * @returns {Array} - Returns the threshold list.\n */\nconst threshold_list = (num_steps = 0) => {\n    let thresholds = [];\n\n    for (let i = 1.0; i <= num_steps; i++) {\n        thresholds.push(i / num_steps);\n    }\n    thresholds.push(0);\n    return thresholds.sort();\n};\n\n/**\n * is_option_truthy - Check if an Pattern option is set.\n *\n * An option is set if it is not one of:\n * - undefined\n * - null\n * - \"none\"\n * - \"\"\n *\n * @param {String} option - The option to check.\n *\n * @returns {Boolean} - Returns true if the option is set, false otherwise.\n *\n * @example\n *\n * is_option_truthy() // false\n * is_option_truthy(undefined) // false\n * is_option_truthy(null) // false\n * is_option_truthy(\"\") // false\n * is_option_truthy(\"none\") // false\n * is_option_truthy(\"false\") // false\n * is_option_truthy(\"foo\") // true\n * is_option_truthy(true) // true\n * is_option_truthy(0) // true\n *\n */\nconst is_option_truthy = (option) => {\n    return ![undefined, null, \"none\", false, \"false\", \"\"].includes(option);\n};\n\nvar utils = {\n    jqueryPlugin: jqueryPlugin,\n    escapeRegExp: escapeRegExp,\n    isObject: isObject,\n    extend: extend,\n    findLabel: findLabel,\n    regexp_from_wildcard: regexp_from_wildcard,\n    removeWildcardClass: removeWildcardClass,\n    hideOrShow: hideOrShow,\n    addURLQueryParameter: addURLQueryParameter,\n    removeDuplicateObjects: removeDuplicateObjects,\n    mergeStack: mergeStack,\n    isElementInViewport: isElementInViewport,\n    hasValue: hasValue,\n    parseTime: parseTime,\n    parseLength: parseLength,\n    findRelatives: findRelatives,\n    get_bounds: get_bounds,\n    checkInputSupport: checkInputSupport,\n    checkCSSFeature: checkCSSFeature,\n    animation_frame: animation_frame,\n    timeout: timeout,\n    debounce: debounce,\n    isIE: isIE,\n    jqToNode: jqToNode,\n    ensureArray: ensureArray,\n    localized_isodate: localized_isodate,\n    escape_html: escape_html,\n    unescape_html: unescape_html,\n    is_iso_date_time: is_iso_date_time,\n    is_iso_date: is_iso_date,\n    date_diff: date_diff,\n    threshold_list: threshold_list,\n    is_option_truthy: is_option_truthy,\n    //getCSSValue: dom.get_css_value, // BBB: moved to dom. TODO: Remove in upcoming version.\n    elementInViewport: (el) => {\n        // BBB: Remove with next major version.\n        console.warn(\"Deprecated. Use utils.isElementInViewport\");\n        return isElementInViewport(el);\n    },\n};\n\nexport default utils;\n","import $ from \"jquery\";\nimport { BasePattern } from \"@patternslib/patternslib/src/core/basepattern\";\nimport events from \"../../core/events\";\nimport dom from \"../../core/dom\";\nimport logging from \"../../core/logging\";\nimport Parser from \"@patternslib/patternslib/src/core/parser\";\nimport registry from \"@patternslib/patternslib/src/core/registry\";\nimport utils from \"../../core/utils\";\n\nconst log = logging.getLogger(\"depends\");\n\nexport const parser = new Parser(\"depends\");\nparser.addArgument(\"condition\");\nparser.addArgument(\"action\", \"show\", [\"show\", \"enable\", \"both\"]);\nparser.addArgument(\"transition\", \"none\", [\"none\", \"css\", \"fade\", \"slide\"]);\nparser.addArgument(\"effect-duration\", \"fast\");\nparser.addArgument(\"effect-easing\", \"swing\");\n\n\n// A custom input event which differs from the one in `core/events` in that it\n// accepts a `detail` object to pass arbitrary information around.\n// TODO: The events in `core/events` should be refactored to accept a `detail`\n// object.\nconst input_event = (detail = {}) => {\n    return new CustomEvent(\"input\", {\n        bubbles: true,\n        cancelable: false,\n        detail: detail,\n    });\n};\n\n\nclass Pattern extends BasePattern {\n    static name = \"depends\";\n    static trigger = \".pat-depends\";\n    static parser = parser;\n\n    async init() {\n        this.$el = $(this.el);\n        const DependsHandler = (await import(\"../../lib/dependshandler\")).default; // prettier-ignore\n\n        try {\n            this.handler = new DependsHandler(this.el, this.options.condition);\n        } catch (e) {\n            log.error(\"Invalid condition: \" + e.message, this.el);\n            return;\n        }\n\n        // Initialize\n        this.set_state();\n\n        for (const input of this.handler.getAllInputs()) {\n            // Note: One input can be a dependency for multiple other dependent\n            // elements. Therefore we need to bind the events not uniquely and\n            // add a uuid to the event bindings id.\n\n            events.add_event_listener(\n                input,\n                \"input\",\n                `pat-depends--input--${this.uuid}`,\n                (e) => {\n                    if (e?.detail?.pattern_uuid === this.uuid) {\n                        // Ignore input events invoked from this pattern\n                        // instance to avoid infinite loops.\n                        return;\n                    }\n                    this.set_state();\n                }\n            );\n\n            if (input.form) {\n                events.add_event_listener(\n                    input.form,\n                    \"reset\",\n                    `pat-depends--reset--${this.uuid}`,\n                    async () => {\n                        // TODO: note sure, what this timeout is for.\n                        await utils.timeout(50);\n                        this.set_state.bind(this);\n                    }\n                );\n            }\n        }\n    }\n\n    update_modal() {\n        const modal = this.el.closest(\".pat-modal\");\n\n        // If we're in a modal, make sure that it gets resized.\n        if (modal) {\n            $(document).trigger(\"pat-update\", { pattern: \"depends\" });\n        }\n    }\n\n    enable() {\n        const inputs = dom.find_inputs(this.el);\n        for (const input of inputs) {\n            if (input.disabled === false) {\n                // Do not re-enable an already enabled input.\n                continue;\n            }\n\n            // Now, enable the input element.\n            input.disabled = false;\n\n            if (input === this.el) {\n                // Do not re-trigger this pattern on it's own element to avoid\n                // infinite loops.\n                continue;\n            }\n\n            if (dom.is_button(input)) {\n                // Do not trigger the input event on buttons as they do not\n                // support it.\n                continue;\n            }\n\n            // Trigger the input after enabling so that any other bound\n            // actions can react on that.\n            input.dispatchEvent(input_event({ pattern_uuid: this.uuid }));\n        }\n\n        // Restore the original click behavior for anchor elements.\n        if (this.el.tagName === \"A\") {\n            events.remove_event_listener(this.el, \"pat-depends--click\");\n        }\n\n        // Remove the disabled class from the element.\n        this.el.classList.remove(\"disabled\");\n\n        // Trigger the pat-update event to notify other patterns about enabling.\n        this.$el.trigger(\"pat-update\", {\n            pattern: \"depends\",\n            action: \"attribute-changed\",\n            dom: this.el,\n            enabled: true,\n        });\n    }\n\n    disable() {\n        const inputs = dom.find_inputs(this.el);\n        for (const input of inputs) {\n            if (input.disabled === true) {\n                // Do not re-disable an already disabled input.\n                continue;\n            }\n\n            // Now, disable the input element.\n            input.disabled = true;\n\n            if (input === this.el) {\n                // Do not re-trigger this pattern on it's own element to avoid\n                // infinite loops.\n                continue;\n            }\n\n            if (dom.is_button(input)) {\n                // Do not trigger the input event on buttons as they do not\n                // support it.\n                continue;\n            }\n\n            // Trigger the input after disabling so that any other bound\n            // actions can react on that.\n            input.dispatchEvent(input_event({ pattern_uuid: this.uuid }));\n        }\n\n        // Prevent the default click behavior for anchor elements.\n        if (this.el.tagName === \"A\") {\n            events.add_event_listener(this.el, \"click\", \"pat-depends--click\", (e) =>\n                e.preventDefault()\n            );\n        }\n\n        // Add the disabled class to the element.\n        this.el.classList.add(\"disabled\");\n\n        // Trigger the pat-update event to notify other patterns about disabling.\n        this.$el.trigger(\"pat-update\", {\n            pattern: \"depends\",\n            action: \"attribute-changed\",\n            dom: this.el,\n            enabled: false,\n        });\n    }\n\n    set_state() {\n        const state = this.handler.evaluate();\n        switch (this.options.action) {\n            case \"show\":\n                utils.hideOrShow(this.el, state, this.options, this.name);\n                this.update_modal();\n                break;\n            case \"enable\":\n                if (state) {\n                    this.enable();\n                } else {\n                    this.disable();\n                }\n                break;\n            case \"both\":\n                utils.hideOrShow(this.el, state, this.options, this.name);\n                this.update_modal();\n                if (state) {\n                    this.enable();\n                } else {\n                    this.disable();\n                }\n                break;\n        }\n    }\n}\n\n// Register Pattern class in the global pattern registry\nregistry.register(Pattern);\n\n// Make it available\nexport default Pattern;\n","/**\n * Patterns logging - minimal logging framework\n *\n * Copyright 2012 Simplon B.V.\n */\n\n// source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\n                \"Function.prototype.bind - what is trying to be bound is not callable\"\n            );\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                );\n            };\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\nvar root, // root logger instance\n    writer; // writer instance, used to output log entries\n\nvar Level = {\n    DEBUG: 10,\n    INFO: 20,\n    WARN: 30,\n    ERROR: 40,\n    FATAL: 50,\n};\n\nfunction ConsoleWriter() {}\n\nConsoleWriter.prototype = {\n    output: function (log_name, level, messages) {\n        if (log_name) messages.unshift(log_name + \":\");\n        if (level <= Level.DEBUG) console.debug.apply(console, messages);\n        else if (level <= Level.INFO) console.info.apply(console, messages);\n        else if (level <= Level.WARN) console.warn.apply(console, messages);\n        else console.error.apply(console, messages);\n    },\n};\n\nfunction Logger(name, parent) {\n    this._loggers = {};\n    this.name = name || \"\";\n    this._parent = parent || null;\n    if (!parent) {\n        this._enabled = true;\n        this._level = Level.WARN;\n    }\n}\n\nLogger.prototype = {\n    getLogger: function (name) {\n        var path = name.split(\".\"),\n            root = this,\n            route = this.name ? [this.name] : [];\n        while (path.length) {\n            var entry = path.shift();\n            route.push(entry);\n            if (!(entry in root._loggers))\n                root._loggers[entry] = new Logger(route.join(\".\"), root);\n            root = root._loggers[entry];\n        }\n        return root;\n    },\n\n    _getFlag: function (flag) {\n        var context = this;\n        flag = \"_\" + flag;\n        while (context !== null) {\n            if (context[flag] !== undefined) return context[flag];\n            context = context._parent;\n        }\n        return null;\n    },\n\n    setEnabled: function (state) {\n        this._enabled = !!state;\n    },\n\n    isEnabled: function () {\n        this._getFlag(\"enabled\");\n    },\n\n    setLevel: function (level) {\n        if (typeof level === \"number\") this._level = level;\n        else if (typeof level === \"string\") {\n            level = level.toUpperCase();\n            if (level in Level) this._level = Level[level];\n        }\n    },\n\n    getLevel: function () {\n        return this._getFlag(\"level\");\n    },\n\n    log: function (level, messages) {\n        if (\n            !messages.length ||\n            !this._getFlag(\"enabled\") ||\n            level < this._getFlag(\"level\")\n        )\n            return;\n        messages = Array.prototype.slice.call(messages);\n        writer.output(this.name, level, messages);\n    },\n\n    debug: function () {\n        this.log(Level.DEBUG, arguments);\n    },\n\n    info: function () {\n        this.log(Level.INFO, arguments);\n    },\n\n    warn: function () {\n        this.log(Level.WARN, arguments);\n    },\n\n    error: function () {\n        this.log(Level.ERROR, arguments);\n    },\n\n    fatal: function () {\n        this.log(Level.FATAL, arguments);\n    },\n};\n\nfunction getWriter() {\n    return writer;\n}\n\nfunction setWriter(w) {\n    writer = w;\n}\n\nsetWriter(new ConsoleWriter());\n\nroot = new Logger();\n\nvar logconfig = /loglevel(|-[^=]+)=([^&]+)/g,\n    match;\n\nwhile ((match = logconfig.exec(window.location.search)) !== null) {\n    var logger = match[1] === \"\" ? root : root.getLogger(match[1].slice(1));\n    logger.setLevel(match[2].toUpperCase());\n}\n\nvar api = {\n    Level: Level,\n    getLogger: root.getLogger.bind(root),\n    setEnabled: root.setEnabled.bind(root),\n    isEnabled: root.isEnabled.bind(root),\n    setLevel: root.setLevel.bind(root),\n    getLevel: root.getLevel.bind(root),\n    debug: root.debug.bind(root),\n    info: root.info.bind(root),\n    warn: root.warn.bind(root),\n    error: root.error.bind(root),\n    fatal: root.fatal.bind(root),\n    getWriter: getWriter,\n    setWriter: setWriter,\n};\n\nexport default api;\n","/* pat-datetime-picker  - Polyfill for input type=datetime-local */\nimport Base from \"../../core/base\";\nimport Parser from \"../../core/parser\";\nimport utils from \"../../core/utils\";\nimport dom from \"../../core/dom\";\n\nexport const parser = new Parser(\"datetime-picker\");\nparser.addArgument(\"format\", \"YYYY-MM-DD\");\nparser.addArgument(\"week-numbers\", [], [\"show\", \"hide\"]);\nparser.addArgument(\"i18n\"); // URL pointing to JSON resource with i18n values\nparser.addArgument(\"today\", \"Today\");\nparser.addArgument(\"clear\", \"Clear\");\nparser.addArgument(\"first-day\", 0);\n\nexport default Base.extend({\n    name: \"datetime-picker\",\n    trigger: \".pat-datetime-picker\",\n    parser: parser,\n    el_date: null,\n    el_time: null,\n\n    async init() {\n        const el = this.el;\n        this.options = parser.parse(this.el, this.options);\n\n        if (utils.checkInputSupport(\"datetime-local\", \"invalid date\")) {\n            return;\n        }\n\n        if (window.__patternslib_import_styles) {\n            import(\"./_datetime-picker.scss\");\n        }\n        const DatePicker = (await import(\"../date-picker/date-picker\")).default;\n\n        const value = this.el.value.split(\"T\");\n        const date_value = value[0] || \"\";\n        const time_value = value[1] || \"\";\n\n        const el_wrapper = document.createElement(\"div\");\n        el_wrapper.setAttribute(\"class\", \"pat-datetime-picker__wrapper\");\n\n        dom.hide(el);\n\n        // let the buttons be of type button otherwise they are submit buttons\n        const html_btn_now = `\n            <button type=\"button\" class=\"_btn _now\" title=\"${this.options.today}\">\n                <span class=\"_icon\"/>\n                <span class=\"_text\">${this.options.today}</span>\n            </button>`;\n        const html_btn_clear = `\n            <button type=\"button\" class=\"_btn _clear\" title=\"${this.options.clear}\">\n                <span class=\"_icon\"/>\n                <span class=\"_text\">${this.options.clear}</span>\n            </button>`;\n\n        el_wrapper.innerHTML = `\n            <input type=\"date\" placeholder=\"YYYY-MM-DD\" value=\"${date_value}\" />\n            <input type=\"time\" placeholder=\"hh:mm\" value=\"${time_value}\" />\n            ${this.options.today ? html_btn_now : \"\"}\n            ${this.options.clear ? html_btn_clear : \"\"}\n        `;\n\n        this.el_time = el_wrapper.querySelector(\"input[type=time]\");\n        this.el_time.addEventListener(\"change\", () => this.update());\n\n        this.el_date = el_wrapper.querySelector(\"input[type=date]\");\n        this.el_date.addEventListener(\"change\", () => {\n            if (!this.el_time.value) {\n                // Set time on date change, if time was empty.\n                this.el_time.value = this.isotime();\n            }\n            this.update();\n        });\n\n        const date_options = {\n            behavior: \"native\",\n            format: this.options.format,\n            weekNumbers: this.options.weekNumbers,\n            firstDay: this.options.firstDay,\n        };\n        await DatePicker.init(this.el_date, date_options);\n\n        if (this.options.today) {\n            const btn_now = el_wrapper.querySelector(\"._btn._now\");\n            btn_now.addEventListener(\"click\", (e) => {\n                e.preventDefault();\n                this.el_date.value = this.isodate();\n                this.el_time.value = this.isotime();\n                this.update();\n            });\n        }\n\n        if (this.options.clear) {\n            const btn_clear = el_wrapper.querySelector(\"._btn._clear\");\n            btn_clear.addEventListener(\"click\", (e) => {\n                e.preventDefault();\n                this.el_date.value = \"\";\n                this.el_time.value = \"\";\n                this.update();\n            });\n        }\n\n        // TODO: timezone\n        el.parentNode.insertBefore(el_wrapper, el);\n    },\n\n    update() {\n        if (this.el_date.value && this.el_time.value) {\n            this.el.value = `${this.el_date.value}T${this.el_time.value}`;\n        } else {\n            this.el.value = \"\";\n        }\n        this.el.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }));\n    },\n\n    isodate() {\n        const now = new Date();\n        return now.toISOString().substr(0, 10);\n    },\n\n    isotime() {\n        const now = new Date();\n        return now.toTimeString().substr(0, 5);\n    },\n});\n","/**\n * A Base pattern for creating scoped patterns.\n *\n * Each instance of a pattern has its own local scope.\n * A new instance is created for each DOM element on which a pattern applies.\n *\n * For usage, see basepattern.md\n */\nimport events from \"./events\";\nimport logging from \"./logging\";\nimport create_uuid from \"./uuid\";\n\nconst log = logging.getLogger(\"basepattern\");\n\nclass BasePattern {\n    static name; // name of pattern used in Registry.\n    static trigger; // A CSS selector to match elements that should trigger the pattern instantiation.\n    static parser; // Options parser.\n\n    // Parser options\n    parser_group_options = true;\n    parser_multiple = undefined;\n    parser_inherit = true;\n\n    constructor(el, options = {}) {\n        // Make static variables available on instance.\n        this.name = this.constructor.name;\n        this.trigger = this.constructor.trigger;\n        this.parser = this.constructor.parser;\n\n        if (!el) {\n            log.warn(`No element given to pattern ${this.name}.`);\n            return;\n        }\n        if (el.jquery) {\n            el = el[0];\n        }\n        this.el = el;\n        this.uuid = create_uuid();\n\n        // Notify pre-init\n        this.el.dispatchEvent(\n            new Event(`pre-init.${this.name}.patterns`, {\n                bubbles: true,\n                cancelable: true,\n            })\n        );\n\n        // Initialize asynchronously.\n        //\n        // 1) We need to call the concrete implementation of ``init``, but the\n        //    inheritance chain is not yet set up and ``init`` not available.\n        //\n        // 2) We want to wait for the init() to successfuly finish and fire an\n        //    event then.\n        //    But the constructer cannot not return a Promise, thus not be\n        //    asynchronous but only return itself.\n        //\n        // Both limitations are gone in next tick.\n        //\n        window.setTimeout(async () => {\n            if (typeof this.el[`pattern-${this.name}`] !== \"undefined\") {\n                // Do not reinstantiate\n                log.debug(`Not reinstatiating the pattern ${this.name}.`, this.el);\n\n                // Notify that not instantiated\n                this.el.dispatchEvent(\n                    new Event(`not-init.${this.name}.patterns`, {\n                        bubbles: true,\n                        cancelable: false,\n                    })\n                );\n                return;\n            }\n\n            // Create the options object by parsing the element and using the\n            // optional options as default.\n            this.options =\n                this.parser?.parse(\n                    this.el,\n                    options,\n                    this.parser_multiple,\n                    this.parser_inherit,\n                    this.parser_group_options\n                ) ?? options;\n\n            // Store pattern instance on element\n            this.el[`pattern-${this.name}`] = this;\n\n            // Initialize the pattern\n            await this.init();\n\n            // Notify that now ready\n            this.el.dispatchEvent(\n                new Event(`init.${this.name}.patterns`, {\n                    bubbles: true,\n                    cancelable: true,\n                })\n            );\n        }, 0);\n    }\n\n    async init() {\n        // Extend this method in your pattern.\n    }\n\n    emit_update(action = undefined, options = {}) {\n        options = {\n            pattern: this.name,\n            dom: this.el,\n            action: action,\n            ...options,\n        }\n        this.el.dispatchEvent(events.update_event(options));\n    }\n\n    /**\n     * Listen to an event on the element only once.\n     *\n     * @param {string} event_name - Name of the event to listen to.\n     * @param {function} callback - Callback to call when the event is thrown.\n     */\n    one(event_name, event_callback) {\n        events.add_event_listener(\n            this.el,\n            `${event_name}.${this.name}.patterns`,\n            `basepattern-one--${event_name}.${this.name}.patterns`,\n            event_callback,\n            {\n                once: true,\n            }\n        );\n    }\n\n    /**\n     * Destroy/remove/unload the pattern from the element.\n     */\n    destroy() {\n        delete this.el[`pattern-${this.name}`];\n    }\n}\n\nexport default BasePattern;\nexport { BasePattern };\n","// Patterns argument parser\nimport $ from \"jquery\";\nimport utils from \"./utils.js\";\nimport logging from \"./logging\";\n\nclass ArgumentParser {\n    constructor(name) {\n        this.order = [];\n        this.parameters = {};\n        this.attribute = \"data-pat-\" + name;\n        this.enum_values = {};\n        this.enum_conflicts = [];\n        this.groups = {};\n        this.possible_groups = {};\n        this.log = logging.getLogger(name + \".parser\");\n\n        this.group_pattern = /([a-z][a-z0-9]*)-([A-Z][a-z0-0\\-]*)/i;\n        this.json_param_pattern = /^\\s*\\[?\\s*{/i;\n        this.named_param_pattern = /^\\s*([a-z][a-z0-9\\-]*)\\s*:(.*)/is;\n        this.token_pattern = /(([\"']).*?(?!\\\\)\\2)|\\s*(\\S+)\\s*/g;\n    }\n\n    _camelCase(str) {\n        return str.replace(/\\-([a-z])/g, (__, p1) => p1.toUpperCase());\n    }\n\n    addAlias(alias, original) {\n        /* Add an alias for a previously added parser argument.\n         *\n         * Useful when you want to support both US and UK english argument\n         * names.\n         */\n        if (this.parameters[original]) {\n            this.parameters[original].alias = alias;\n        } else {\n            throw `Attempted to add an alias \"${alias}\" for a non-existing parser argument \"${original}\".`;\n        }\n    }\n\n    addGroupToSpec(spec) {\n        /* Determine wether an argument being parsed can be grouped and\n         * update its specifications object accordingly.\n         *\n         * Internal method used by addArgument and addJSONArgument\n         */\n        const m = spec.name.match(this.group_pattern);\n        if (m) {\n            const group = m[1];\n            const field = m[2];\n            if (group in this.possible_groups) {\n                const first_spec = this.possible_groups[group];\n                const first_name = first_spec.name.match(this.group_pattern)[2];\n                first_spec.group = group;\n                first_spec.dest = first_name;\n                this.groups[group] = new ArgumentParser();\n                this.groups[group].addArgument(\n                    first_name,\n                    first_spec.value,\n                    first_spec.choices,\n                    first_spec.multiple\n                );\n                delete this.possible_groups[group];\n            }\n            if (group in this.groups) {\n                this.groups[group].addArgument(\n                    field,\n                    spec.value,\n                    spec.choices,\n                    spec.multiple\n                );\n                spec.group = group;\n                spec.dest = field;\n            } else {\n                this.possible_groups[group] = spec;\n                spec.dest = this._camelCase(spec.name);\n            }\n        }\n        return spec;\n    }\n\n    addJSONArgument(name, default_value) {\n        /* Add an argument where the value is provided in JSON format.\n         *\n         * This is a different usecase than specifying all arguments to\n         * the data-pat-... attributes in JSON format, and instead is part\n         * of the normal notation except that a value is in JSON instead of\n         * for example a string.\n         */\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec({\n            name: name,\n            value: default_value,\n            dest: name,\n            group: null,\n            type: \"json\",\n        });\n    }\n\n    addArgument(name, default_value, choices, multiple) {\n        const spec = {\n            name: name,\n            value:\n                multiple && !Array.isArray(default_value)\n                    ? [default_value]\n                    : default_value,\n            multiple: multiple,\n            dest: name,\n            group: null,\n        };\n        if (choices && Array.isArray(choices) && choices.length) {\n            spec.choices = choices;\n            spec.type = this._typeof(choices[0]);\n            for (const choice of choices) {\n                if (this.enum_conflicts.indexOf(choice) !== -1) {\n                    continue;\n                } else if (choice in this.enum_values) {\n                    this.enum_conflicts.push(choice);\n                    delete this.enum_values[choice];\n                } else {\n                    this.enum_values[choice] = name;\n                }\n            }\n        } else if (typeof spec.value === \"string\" && spec.value.slice(0, 1) === \"$\") {\n            spec.type = this.parameters[spec.value.slice(1)].type;\n        } else {\n            // Note that this will get reset by _defaults if default_value is a function.\n            spec.type = this._typeof(multiple ? spec.value[0] : spec.value);\n        }\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec(spec);\n    }\n\n    _typeof(obj) {\n        if (obj === null) {\n            return \"null\";\n        }\n        return typeof obj;\n    }\n\n    _coerce(name, value) {\n        const spec = this.parameters[name];\n        if (typeof value !== spec.type)\n            try {\n                switch (spec.type) {\n                    case \"json\":\n                        value = JSON.parse(value);\n                        break;\n                    case \"boolean\":\n                        if (typeof value === \"string\") {\n                            value = value.toLowerCase();\n                            const num = parseInt(value, 10);\n                            if (!isNaN(num)) value = !!num;\n                            else\n                                value =\n                                    value === \"true\" ||\n                                    value === \"y\" ||\n                                    value === \"yes\" ||\n                                    value === \"y\" ||\n                                    value === \"on\";\n                        } else if (typeof value === \"number\") {\n                            value = !!value;\n                        } else {\n                            throw `Cannot convert value for ${name} to boolean.`;\n                        }\n                        break;\n                    case \"number\":\n                        if (typeof value === \"string\") {\n                            value = parseInt(value, 10);\n                            if (isNaN(value)) {\n                                throw `Cannot convert value for ${name} to number.`;\n                            }\n                        } else if (typeof value === \"boolean\") {\n                            value = value + 0;\n                        } else {\n                            throw `Cannot convert value for ${name} to number.`;\n                        }\n                        break;\n                    case \"string\":\n                        value = value.toString();\n                        break;\n                    case \"null\": // Missing default values\n                    case \"undefined\":\n                        break;\n                    default:\n                        throw `Do not know how to convert value for ${name} of type ${typeof value} to ${\n                            spec.type\n                        }.`;\n                }\n            } catch (e) {\n                this.log.warn(e);\n                return null;\n            }\n\n        if (spec.choices && spec.choices.indexOf(value) === -1) {\n            this.log.warn(`Illegal value for ${name}: ${value}.`);\n            return null;\n        }\n        return value;\n    }\n\n    _set(opts, name, value) {\n        if (!(name in this.parameters)) {\n            this.log.debug(`Ignoring value for unknown argument: ${name}.`);\n            return;\n        }\n        const spec = this.parameters[name];\n        let parts;\n        if (spec.multiple) {\n            if (typeof value === \"string\") {\n                parts = value.split(/,+/);\n            } else {\n                parts = value;\n            }\n            value = [];\n            for (const part of parts) {\n                const v = this._coerce(name, part.trim());\n                if (v !== null) {\n                    value.push(v);\n                }\n            }\n        } else {\n            value = this._coerce(name, value);\n            if (value === null) {\n                return;\n            }\n        }\n        opts[name] = value;\n    }\n\n    _split(text) {\n        const tokens = [];\n        text.replace(this.token_pattern, (match, quoted, __, simple) => {\n            if (quoted) {\n                tokens.push(quoted);\n            } else if (simple) {\n                tokens.push(simple);\n            }\n        });\n        return tokens;\n    }\n\n    _parseExtendedNotation(argstring) {\n        const opts = {};\n        const parts = argstring\n            .replace(/;;/g, \"\\0x1f\")\n            .replace(/&amp;/g, \"&amp\\0x1f\")\n            .split(/;/)\n            .map((el) => el.replace(new RegExp(\"\\0x1f\", \"g\"), \";\"));\n        for (const part of parts) {\n            if (!part) {\n                continue;\n            }\n            const matches = part.match(this.named_param_pattern);\n            if (!matches) {\n                this.log.warn(`Invalid parameter: ${part}: ${argstring}.`);\n                continue;\n            }\n            const name = matches[1];\n            const value = matches[2].trim();\n            const arg = Object.values(this.parameters).filter((it) => it.alias === name);\n\n            const is_alias = arg.length === 1;\n\n            if (is_alias) {\n                this._set(opts, arg[0].name, value);\n            } else if (name in this.parameters) {\n                this._set(opts, name, value);\n            } else if (name in this.groups) {\n                const subopt = this.groups[name]._parseShorthandNotation(value);\n                for (const field in subopt) {\n                    this._set(opts, name + \"-\" + field, subopt[field]);\n                }\n            } else {\n                this.log.warn(`Unknown named parameter: ${matches[1]}.`);\n                continue;\n            }\n        }\n        return opts;\n    }\n\n    _parseShorthandNotation(parameter) {\n        const parts = this._split(parameter);\n        const opts = {};\n        let i = 0;\n\n        while (parts.length) {\n            const part = parts.shift().trim();\n            let sense;\n            let flag;\n            let positional = true;\n            if (part.slice(0, 3) === \"no-\") {\n                sense = false;\n                flag = part.slice(3);\n            } else {\n                sense = true;\n                flag = part;\n            }\n            if (flag in this.parameters && this.parameters[flag].type === \"boolean\") {\n                positional = false;\n                this._set(opts, flag, sense);\n            } else if (flag in this.enum_values) {\n                positional = false;\n                this._set(opts, this.enum_values[flag], flag);\n            } else if (positional) this._set(opts, this.order[i], part);\n            else {\n                parts.unshift(part);\n                break;\n            }\n            i++;\n            if (i >= this.order.length) {\n                break;\n            }\n        }\n        if (parts.length) this.log.warn(`Ignore extra arguments: ${parts.join(\" \")}.`);\n        return opts;\n    }\n\n    _parse(parameter) {\n        if (!parameter) {\n            return {};\n        }\n        if (parameter.match(this.json_param_pattern)) {\n            try {\n                return JSON.parse(parameter);\n            } catch {\n                this.log.warn(`Invalid JSON argument found: ${parameter}.`);\n            }\n        }\n        if (parameter.match(this.named_param_pattern)) {\n            return this._parseExtendedNotation(parameter);\n        }\n        const sep = parameter.indexOf(\";\");\n        if (sep === -1) {\n            return this._parseShorthandNotation(parameter);\n        }\n        const opts = this._parseShorthandNotation(parameter.slice(0, sep));\n        const extended = this._parseExtendedNotation(parameter.slice(sep + 1));\n        for (const name in extended) {\n            opts[name] = extended[name];\n        }\n        return opts;\n    }\n\n    _defaults($el) {\n        const result = {};\n        for (const name in this.parameters) {\n            if (typeof this.parameters[name].value === \"function\") {\n                try {\n                    result[name] = this.parameters[name].value($el, name);\n                    this.parameters[name].type = typeof result[name];\n                } catch {\n                    this.log.error(`Default function for ${name} failed.`);\n                }\n            } else {\n                result[name] = this.parameters[name].value;\n            }\n        }\n        return result;\n    }\n\n    _cleanupOptions(options, group_options = true) {\n        // Resolve references\n        for (const name of Object.keys(options)) {\n            const spec = this.parameters[name];\n            if (spec === undefined) {\n                continue;\n            }\n\n            if (\n                options[name] === spec.value &&\n                typeof spec.value === \"string\" &&\n                spec.value.slice(0, 1) === \"$\"\n            ) {\n                options[name] = options[spec.value.slice(1)];\n            }\n        }\n        if (group_options) {\n            // Move options into groups and do renames\n            for (const name of Object.keys(options)) {\n                const spec = this.parameters[name];\n                let target;\n                if (spec === undefined) {\n                    continue;\n                }\n\n                if (spec.group) {\n                    if (typeof options[spec.group] !== \"object\") {\n                        options[spec.group] = {};\n                    }\n                    target = options[spec.group];\n                } else {\n                    target = options;\n                }\n\n                if (spec.dest !== name) {\n                    target[spec.dest] = options[name];\n                    delete options[name];\n                }\n            }\n        }\n        return options;\n    }\n\n    parse($el, options, multiple, inherit = true, group_options = true) {\n        if (!$el.jquery) {\n            $el = $($el);\n        }\n        if (typeof options === \"boolean\" && multiple === undefined) {\n            // Fix argument order: ``multiple`` passed instead of ``options``.\n            multiple = options;\n            options = {};\n        }\n        const stack = inherit ? [[this._defaults($el)]] : [[{}]];\n        let $possible_config_providers;\n        let final_length = 1;\n        /*\n         * XXX this is a workaround for:\n         * - https://github.com/Patternslib/Patterns/issues/393\n         *\n         * Prevents the parser to pollute the pat-modal configuration\n         * with data-pat-inject elements define in a `.pat-modal` parent element.\n         *\n         *  Probably this function should be completely revisited, see:\n         * - https://github.com/Patternslib/Patterns/issues/627\n         *\n         */\n        if (\n            !inherit ||\n            ($el.hasClass(\"pat-modal\") && this.attribute === \"data-pat-inject\")\n        ) {\n            $possible_config_providers = $el;\n        } else {\n            $possible_config_providers = $el.parents(`[${this.attribute}]`).addBack();\n        }\n\n        for (const provider of $possible_config_providers) {\n            let frame;\n            const data = ($(provider).attr(this.attribute) || \"\").trim();\n            if (!data) {\n                continue;\n            }\n            const _parse = this._parse.bind(this);\n            if (data.match(/&&/)) {\n                frame = data.split(/\\s*&&\\s*/).map(_parse);\n            } else {\n                frame = _parse(data);\n            }\n            if (!Array.isArray(frame)) {\n                frame = [frame];\n            }\n            final_length = Math.max(frame.length, final_length);\n            stack.push(frame);\n        }\n\n        if (typeof options === \"object\") {\n            if (Array.isArray(options)) {\n                stack.push(options);\n                final_length = Math.max(options.length, final_length);\n            } else {\n                stack.push([options]);\n            }\n        }\n        if (!multiple) {\n            final_length = 1;\n        }\n        const results = utils\n            .removeDuplicateObjects(utils.mergeStack(stack, final_length))\n            .map((current_value) => this._cleanupOptions(current_value, group_options));\n        return multiple ? results : results[0];\n    }\n}\n\n// BBB\nArgumentParser.prototype.add_argument = ArgumentParser.prototype.addArgument;\n\nexport default ArgumentParser;\n","/**\n * Patterns ajax - AJAX injection for forms and anchors\n *\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2012-2013 Marko Durkovic\n */\nimport \"../../core/polyfills\"; // SubmitEvent.submitter for Safari < 15.4 and jsDOM\nimport $ from \"jquery\";\nimport logging from \"../../core/logging\";\nimport Parser from \"../../core/parser\";\nimport registry from \"../../core/registry\";\n\nconst log = logging.getLogger(\"pat.ajax\");\n\nexport const parser = new Parser(\"ajax\");\nparser.addArgument(\"accept\", \"text/html\");\nparser.addArgument(\"url\", function ($el) {\n    const el = $el[0];\n    const value =\n        el.tagName === \"A\"\n            ? el.getAttribute(\"href\")\n            : el.tagName === \"FORM\"\n            ? el.getAttribute(\"action\")\n            : \"\";\n    return (value || \"\").split(\"#\")[0];\n});\nparser.addArgument(\"browser-cache\", \"no-cache\", [\"cache\", \"no-cache\"]); // Cache ajax requests\n\nconst xhrCount = {};\nxhrCount.get = function (a) {\n    return this[a] !== undefined ? this[a] : 0;\n};\nxhrCount.inc = function (a) {\n    this[a] = this.get(a) + 1;\n    return this.get(a);\n};\n\nconst _ = {\n    name: \"ajax\",\n    trigger: \".pat-ajax\",\n    parser: parser,\n\n    init($el) {\n        $el.off(\".pat-ajax\");\n        $el.filter(\"a\").on(\"click.pat-ajax\", _.onTriggerEvents);\n        $el.filter(\"form\")\n            .on(\"submit.pat-ajax\", _.onTriggerEvents)\n            .on(\"click.pat-ajax\", \"[type=submit]\", _.onClickSubmit);\n        $el.filter(\":not(form,a)\").each(function () {\n            log.warn(\"Unsupported element:\", this);\n        });\n        return $el;\n    },\n\n    destroy($el) {\n        $el.off(\".pat-ajax\");\n    },\n\n    onClickSubmit(event) {\n        const el = event.submitter || event.target;\n        const form = el.form;\n        const data = {};\n        if (el.name) {\n            data[el.name] = el.value;\n        }\n        $(form).data(\"pat-ajax.clicked-data\", data);\n    },\n\n    onTriggerEvents(event) {\n        if (event) {\n            event.preventDefault();\n        }\n        _.request($(this));\n    },\n\n    request($el, opts) {\n        return $el.each(function () {\n            _._request($(this), opts);\n        });\n    },\n\n    _request($el, opts) {\n        const cfg = _.parser.parse($el, opts);\n        const onError = function (jqxhr, status, error) {\n            // error can also stem from a javascript\n            // exception, not only errors described in the\n            // jqxhr.\n            log.error(\"load error for \" + cfg.url + \":\", error, jqxhr);\n            $el.trigger({\n                type: \"pat-ajax-error\",\n                jqxhr: jqxhr,\n            });\n        };\n        const seqNumber = xhrCount.inc(cfg.url);\n        const onSuccess = function (data, status, jqxhr) {\n            log.debug(\"success: jqxhr:\", jqxhr);\n            if (seqNumber === xhrCount.get(cfg.url)) {\n                // if this url is requested multiple time, only return the last result\n                $el.trigger({\n                    type: \"pat-ajax-success\",\n                    jqxhr: {\"url\": cfg.url, ...jqxhr},\n                });\n            } else {\n                // ignore\n            }\n        };\n        const temp = $el.data(\"pat-ajax.clicked-data\");\n        const clickedData = temp ? $.param(temp) : \"\";\n        const args = {\n            context: $el,\n            data: [$el.serialize(), clickedData].filter(Boolean).join(\"&\"),\n            headers: {},\n            url: cfg.url,\n            method: $el.attr(\"method\") ? $el.attr(\"method\") : \"GET\",\n            cache: cfg.browserCache === \"cache\" ? true : false,\n        };\n\n        if (cfg.accept) {\n            args.headers.Accept = cfg.accept;\n        }\n\n        if (\n            $el.is(\"form\") &&\n            $el.attr(\"method\") &&\n            $el.attr(\"method\").toUpperCase() == \"POST\"\n        ) {\n            const formdata = new FormData($el[0]);\n            for (const key in temp) {\n                formdata.append(key, temp[key]);\n            }\n            args[\"method\"] = \"POST\";\n            args[\"data\"] = formdata;\n            args[\"cache\"] = false;\n            args[\"contentType\"] = false;\n            args[\"processData\"] = false;\n            args[\"type\"] = \"POST\";\n        }\n\n        $el.removeData(\"pat-ajax.clicked-data\");\n        log.debug(\"request:\", args, $el[0]);\n\n        // Make it happen\n        const ajax_deferred = $.ajax(args);\n\n        if (ajax_deferred) ajax_deferred.done(onSuccess).fail(onError);\n    },\n};\n\nregistry.register(_);\n\nexport default _;\n","import \"../../core/polyfills\"; // SubmitEvent.submitter for Safari < 15.4 and jsDOM\nimport $ from \"jquery\";\nimport ajax from \"../ajax/ajax\";\nimport dom from \"../../core/dom\";\nimport events from \"../../core/events\";\nimport logging from \"../../core/logging\";\nimport Parser from \"../../core/parser\";\nimport registry from \"../../core/registry\";\nimport create_uuid from \"../../core/uuid\";\nimport utils from \"../../core/utils\";\n\nconst log = logging.getLogger(\"pat.inject\");\n//log.setLevel(logging.Level.DEBUG);\n\nconst TEXT_NODE = 3;\nconst COMMENT_NODE = 8;\n\nexport const parser = new Parser(\"inject\");\nparser.addArgument(\"default-selector\");\nparser.addArgument(\"target\");\nparser.addArgument(\"data-type\", \"html\");\nparser.addArgument(\"next-href\");\nparser.addArgument(\"source\");\nparser.addArgument(\"trigger\", \"default\", [\n    \"default\",\n    \"autoload\",\n    \"autoload-visible\",\n    \"idle\",\n]);\nparser.addArgument(\"delay\"); // only used in autoload\nparser.addArgument(\"browser-cache\", \"no-cache\", [\"cache\", \"no-cache\"]); // Cache ajax requests. Pass to pat-ajax.\nparser.addArgument(\"confirm\", \"class\", [\"never\", \"always\", \"form-data\", \"class\"]);\nparser.addArgument(\"confirm-message\", \"Are you sure you want to leave this page?\");\nparser.addArgument(\"loading-class\", \"injecting\"); // Add a class to the target while content is still loading.\nparser.addArgument(\"executing-class\", \"executing\"); // Add a class to the element while content is still loading.\nparser.addArgument(\"executed-class\", \"executed\"); // Add a class to the element when content is loaded.\nparser.addArgument(\"class\"); // Add a class to the injected content.\nparser.addArgument(\"history\", \"none\", [\"none\", \"record\"]);\nparser.addArgument(\"push-marker\");\nparser.addArgument(\"scroll\");\n\n// Note: this should not be here but the parser would bail on unknown\n// parameters and expand/collapsible need to pass the url to us.\nparser.addArgument(\"url\");\n\nconst inject = {\n    name: \"inject\",\n    trigger: \"a.pat-inject, form.pat-inject, .pat-subform.pat-inject\",\n    parser: parser,\n\n    async init($el, opts) {\n        // We need to wait a tick. Modern BasePattern based patterns like\n        // pat-validation do always wait a tick before initializing. The\n        // patterns registry always initializes pat-validation first but since\n        // it is waiting a tick the event handlers are registerd after the ones\n        // from pat-inject. Waiting a tick in pat-inject solves this -\n        // pat-validation's event handlers are initialized first.\n        await utils.timeout(1);\n\n        const el = utils.jqToNode($el);\n\n        const cfgs = this.extractConfig($el, opts);\n        if (cfgs.some((e) => e.history === \"record\") && !(\"pushState\" in history)) {\n            // if the injection shall add a history entry and HTML5 pushState\n            // is missing, then don't initialize the injection.\n            log.warn(\"HTML5 pushState is missing, aborting\");\n            return $el;\n        }\n        $el.data(\"pat-inject\", cfgs);\n\n        if (cfgs[0].nextHref && cfgs[0].nextHref.indexOf(\"#\") === 0) {\n            // In case the next href is an anchor, and it already\n            // exists in the page, we do not activate the injection\n            // but instead just change the anchors href.\n\n            // Note: This is used in only one project for linked fullcalendars,\n            // it's sanity is wonky and we should probably solve it differently.\n            if (el.nodeName === \"A\" && $(cfgs[0].nextHref).length > 0) {\n                log.debug(\n                    \"Skipping as next href is anchor, which already exists\",\n                    cfgs[0].nextHref\n                );\n                // TODO: reconsider how the injection enters exhausted state\n                el.setAttribute(\n                    \"href\",\n                    (window.location.href.split(\"#\")[0] || \"\") + cfgs[0].nextHref\n                );\n                return $el;\n            }\n        }\n        if (cfgs[0].pushMarker) {\n            $(\"body\").on(\"push\", (event, data) => {\n                log.debug(\"received push message: \" + data);\n                if (data == cfgs[0].pushMarker) {\n                    log.debug(\"re-injecting \" + data);\n                    this.onTrigger({ currentTarget: el });\n                }\n            });\n        }\n        if (cfgs[0].idleTrigger) {\n            this._initIdleTrigger($el, cfgs[0].idleTrigger);\n        } else {\n            switch (cfgs[0].trigger) {\n                case \"default\":\n                    for (const cfg of cfgs) {\n                        if (cfg.delay) {\n                            cfg.processDelay = cfg.delay;\n                        }\n                    }\n                    // setup event handlers\n                    if (el?.nodeName === \"FORM\") {\n                        log.debug(\"Initializing form with injection on\", el);\n                        events.add_event_listener(\n                            el,\n                            \"submit\",\n                            \"pat-inject--form-submit\",\n                            (e) => {\n                                if (\n                                    e.submitter?.matches(\n                                        \"[type=submit], button:not([type=button]), [type=image]\"\n                                    )\n                                ) {\n                                    // make sure the submitting button is sent\n                                    // with the form\n                                    ajax.onClickSubmit(e);\n                                }\n                                this.onTrigger(e);\n                            }\n                        );\n                    } else if (el?.matches(\".pat-subform\")) {\n                        log.debug(\"Initializing subform with injection\");\n                    } else {\n                        $el.on(\"click.pat-inject\", this.onTrigger.bind(this));\n                    }\n                    break;\n                case \"autoload\":\n                    if (!cfgs[0].delay) {\n                        this.onTrigger({ currentTarget: el });\n                    } else {\n                        // generate UUID\n                        const uuid = create_uuid();\n                        el.setAttribute(\"data-pat-inject-uuid\", uuid);\n\n                        // function to trigger the autoload and mark as triggered\n                        const delayed_trigger = (uuid_) => {\n                            // Check if the element has been removed from the dom\n                            const still_there = document.querySelector(\n                                `[data-pat-inject-uuid=\"${uuid_}\"]`\n                            );\n                            if (!still_there) {\n                                return false;\n                            }\n\n                            $el.data(\"pat-inject-autoloaded\", true);\n                            this.onTrigger({ currentTarget: el });\n                            // Cleanup again.\n                            still_there.removeAttribute(\"data-pat-inject-uuid\");\n                            return true;\n                        };\n                        window.setTimeout(\n                            delayed_trigger.bind(null, uuid),\n                            cfgs[0].delay\n                        );\n                    }\n                    break;\n                case \"autoload-visible\":\n                    this._initAutoloadVisible($el, cfgs);\n                    break;\n                case \"idle\":\n                    this._initIdleTrigger($el, cfgs[0].delay);\n                    break;\n            }\n        }\n\n        log.debug(\"initialised:\", el);\n        return $el;\n    },\n\n    destroy($el) {\n        $el.off(\".pat-inject\");\n        $el.data(\"pat-inject\", null);\n        return $el;\n    },\n\n    onTrigger(e) {\n        /* Injection has been triggered, either via form submission or a\n         * link has been clicked.\n         */\n\n        // Prevent the original event from doing it's work.\n        // We want an AJAX request instead.\n        e.preventDefault && e.preventDefault();\n\n        const el = e.currentTarget;\n        const $el = $(el);\n        let cfgs = $el.data(\"pat-inject\");\n        if (el.nodeName === \"FORM\" && e.type === \"submit\") {\n            const form = el;\n            const submitter = e.submitter;\n\n            // Do not submit invalid forms, if validation is active.\n            // Works with native form validation and with pat-validation.\n            if (\n                !submitter?.matches(\"[formnovalidate]\") &&\n                !form.matches(\"[novalidate]\") &&\n                form.matches(\":invalid\")\n            ) {\n                log.debug(\"Form is invalid, aborting\");\n                return;\n            }\n\n            const formaction = submitter?.getAttribute(\"formaction\");\n            if (formaction) {\n                const opts = {\n                    url: formaction,\n                };\n\n                // Support custom data-pat-inject on formaction buttons.\n                const cfg_node = submitter.closest(\"[data-pat-inject]\");\n                cfgs = this.extractConfig($(cfg_node), opts);\n            }\n\n            // store the params of the form in the config, to be used by history\n            for (const cfg of cfgs) {\n                cfg.params = $.param($el.serializeArray());\n            }\n        }\n\n        $el.trigger(\"patterns-inject-triggered\");\n        this.execute(cfgs, $el);\n    },\n\n    submitSubform($sub) {\n        /* This method is called from pat-subform\n         */\n        const $el = $($sub[0].closest(\"form\"));\n        const cfgs = $sub.data(\"pat-inject\");\n\n        // store the params of the subform in the config, to be used by history\n        for (const cfg of cfgs) {\n            cfg.params = $.param($sub.serializeArray());\n        }\n\n        try {\n            $el.trigger(\"patterns-inject-triggered\");\n        } catch (e) {\n            log.error(\"patterns-inject-triggered\", e);\n        }\n        this.execute(cfgs, $el);\n    },\n\n    extractConfig($el, options = {}) {\n        const el = utils.jqToNode($el);\n        options = Object.assign({}, options); // copy\n\n        const cfgs = parser.parse($el, options, true);\n        for (const cfg of cfgs) {\n            cfg.$context = $el;\n            // options and cfg have priority, fall back to href/action\n            cfg.url =\n                options.url ||\n                cfg.url ||\n                el?.getAttribute(\"href\") ||\n                el?.getAttribute(\"action\") ||\n                el?.closest(\"form\")?.getAttribute(\"action\") ||\n                \"\";\n\n            // separate selector from url\n            const urlparts = cfg.url.split(\"#\");\n            cfg.url = urlparts[0];\n\n            if (urlparts.length > 2) {\n                log.warn(\"Ignoring additional source ids:\", urlparts.slice(2));\n            }\n\n            if (!cfg.defaultSelector) {\n                // if no selector, check for selector as part of original url\n                cfg.defaultSelector = (urlparts[1] && \"#\" + urlparts[1]) || \"body\";\n            }\n            if (cfg.delay) {\n                try {\n                    cfg.delay = utils.parseTime(cfg.delay);\n                } catch {\n                    log.warn(\"Invalid delay value: \", cfg.delay);\n                    cfg.delay = null;\n                }\n            }\n            cfg.processDelay = 0;\n        }\n        return cfgs;\n    },\n\n    elementIsDirty(m) {\n        /* Check whether the passed in form element contains a value.\n         */\n        const data = $.map(m.find(\":input:not(select)\"), (i) => {\n            const val = $(i).val();\n            return Boolean(val) && val !== $(i).attr(\"placeholder\");\n        });\n        return $.inArray(true, data) !== -1;\n    },\n\n    askForConfirmation(cfgs) {\n        /* If configured to do so, show a confirmation dialog to the user.\n         * This is done before attempting to perform injection.\n         */\n        let should_confirm = false;\n        let message;\n\n        for (const cfg of cfgs) {\n            let _confirm = false;\n            if (cfg.confirm == \"always\") {\n                _confirm = true;\n            } else if (\n                cfg.confirm === \"form-data\" &&\n                cfg.target &&\n                cfg.target !== \"none\"\n            ) {\n                _confirm = this.elementIsDirty(cfg.$target);\n            } else if (cfg.confirm === \"class\" && cfg.target && cfg.target !== \"none\") {\n                _confirm = cfg.$target.hasClass(\"is-dirty\");\n            }\n            if (_confirm) {\n                should_confirm = true;\n                message = cfg.confirmMessage;\n            }\n        }\n        if (should_confirm) {\n            if (!window.confirm(message)) {\n                return false;\n            }\n        }\n        return true;\n    },\n\n    ensureTarget(cfg) {\n        /* Make sure that a target element exists and that it's assigned to\n         * cfg.$target.\n         */\n        // make sure target exist\n        if (cfg.target === \"none\") {\n            // special case, we don't want to inject anything\n            return true;\n        }\n        cfg.$target =\n            cfg.$target || (cfg.target === \"self\" ? cfg.$context : $(cfg.target));\n        if (cfg.$target.length === 0) {\n            if (!cfg.target) {\n                log.error(\"Need target selector\", cfg);\n                return false;\n            }\n            cfg.$target = this.createTarget(cfg.target);\n            cfg.$created_target = cfg.$target;\n        }\n        return true;\n    },\n\n    verifySingleConfig(url, cfg) {\n        /* Verify one of potentially multiple configs (i.e. argument lists).\n         *\n         * Extract modifiers such as ::element or ::after.\n         * Ensure that a target element exists.\n         */\n        if (cfg.url !== url) {\n            // in case of multi-injection, all injections need to use\n            // the same url\n            log.error(\"Unsupported different urls for multi-inject\");\n            return false;\n        }\n        // defaults\n        cfg.source = cfg.source || cfg.defaultSelector;\n        cfg.target = cfg.target || cfg.defaultSelector;\n\n        if (!this.extractModifiers(cfg)) {\n            return false;\n        }\n        if (!this.ensureTarget(cfg)) {\n            return false;\n        }\n        this.listenForFormReset(cfg);\n        return true;\n    },\n\n    verifyConfig(cfgs) {\n        /* Verify and post-process all the configurations.\n         * Each \"config\" is an arguments list separated by the &&\n         * combination operator.\n         *\n         * In case of multi-injection, only one URL is allowed, which\n         * should be specified in the first config (i.e. arguments list).\n         *\n         * Verification for each cfg in the array needs to succeed.\n         */\n        return cfgs.every((cfg) => this.verifySingleConfig(cfgs[0].url, cfg));\n    },\n\n    listenForFormReset(cfg) {\n        /* if pat-inject is used to populate target in some form and when\n         * Cancel button is pressed (this triggers reset event on the\n         * form) you would expect to populate with initial placeholder\n         */\n        if (cfg.target === \"none\") {\n            // Special case, we don't want to display any return value.\n            return;\n        }\n        const $form = cfg.$target.parents(\"form\");\n        if ($form.length !== 0 && cfg.$target.data(\"initial-value\") === undefined) {\n            cfg.$target.data(\"initial-value\", cfg.$target.html());\n            $form.on(\"reset\", () => {\n                cfg.$target.html(cfg.$target.data(\"initial-value\"));\n            });\n        }\n    },\n\n    extractModifiers(cfg) {\n        /* The user can add modifiers to the source and target arguments.\n         * Modifiers such as ::element, ::before and ::after.\n         * We identifiy and extract these modifiers here.\n         */\n        const source_re = /^(.*?)(::element)?$/;\n        const target_re = /^(.*?)(::element)?(::after|::before)?$/;\n        const source_match = source_re.exec(cfg.source);\n        const target_match = target_re.exec(cfg.target);\n\n        cfg.source = source_match[1];\n        cfg.sourceMod = source_match[2] ? \"element\" : \"content\";\n        cfg.target = target_match[1];\n        const targetMod = target_match[2] ? \"element\" : \"content\";\n        const targetPosition = (target_match[3] || \"::\").slice(2); // position relative to target\n\n        if (cfg.loadingClass) {\n            cfg.loadingClass += \" \" + cfg.loadingClass + \"-\" + targetMod;\n            if (targetPosition && cfg.loadingClass) {\n                cfg.loadingClass += \" \" + cfg.loadingClass + \"-\" + targetPosition;\n            }\n        }\n        cfg.action = targetMod + targetPosition;\n        // Once we start detecting illegal combinations, we'll\n        // return false in case of error\n        return true;\n    },\n\n    createTarget(selector) {\n        /* create a target that matches the selector\n         *\n         * Note: so far we only support #target and create a div with that id\n         * appended to the body.\n         */\n        if (selector.slice(0, 1) !== \"#\") {\n            log.error(\"only id supported for non-existing target\");\n            return null;\n        }\n        const $target = $(\"<div />\").attr({ id: selector.slice(1) });\n        $(\"body\").append($target);\n        return $target;\n    },\n\n    _performInjection(target, $el, $sources, cfg, trigger, $title) {\n        /* Called after the XHR has succeeded and we have a new $sources\n         * element to inject.\n         */\n        const wrapper = document.createElement(\"template\");\n        if ($sources.length > 0) {\n            const method = cfg.sourceMod === \"content\" ? \"innerHTML\" : \"outerHTML\";\n            // There might be multiple sources, so we need to loop over them.\n            // Access them with \"innerHTML\" or \"outerHTML\" depending on the sourceMod.\n            const sources_string = [...$sources].map(source => source[method]).join(\"\\n\");\n            wrapper.innerHTML = sources_string;\n\n            for (const img of wrapper.content.querySelectorAll(\"img\")) {\n                events.add_event_listener(\n                    img,\n                    \"load\",\n                    \"inject_img_load\",\n                    (e) => {\n                        $(e.currentTarget).trigger(\"pat-inject-content-loaded\");\n                    },\n                    { once: true }\n                );\n            }\n        }\n\n        // Copy, because after insertion wrapper.children is empty.\n        const source_nodes = [...wrapper.content.childNodes];\n\n        // Now the injection actually happens.\n        if (this._inject(trigger, source_nodes, target, cfg)) {\n            // Update history\n            this._update_history(cfg, trigger, $title);\n            // Post-injection\n            this._afterInjection($el, cfg.$created_target || $(source_nodes), cfg);\n        }\n    },\n\n    _update_history(cfg, trigger, $title) {\n        // History support. if subform is submitted, append form params\n        if (cfg.history !== \"record\" || !history?.pushState) {\n            return;\n        }\n        let url = cfg.url;\n        if (cfg.params) {\n            const glue = url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n            url = `${url}${glue}${cfg.params}`;\n        }\n        history.pushState({ url: url }, \"\", url);\n        // Also inject title element if we have one\n        if ($title?.length) {\n            const title_el = document.querySelector(\"title\");\n            if (title_el) {\n                this._inject(trigger, $title, title_el, {\n                    action: \"element\",\n                });\n            }\n        }\n    },\n\n    _afterInjection($el, $injected, cfg) {\n        /* Set a class on the injected elements and fire the\n         * patterns-injected event.\n         */\n        const el = utils.jqToNode($el);\n        $injected\n            .filter((idx, el_) => {\n                return el_.nodeType !== TEXT_NODE;\n            })\n            .data(\"pat-injected\", { origin: cfg.url });\n\n        if ($injected.length === 1 && $injected[0].nodeType == TEXT_NODE) {\n            // Only one element injected, and it was a text node.\n            // So we trigger \"patterns-injected\" on the parent.\n            // The event handler should check whether the\n            // injected element and the triggered element are\n            // the same.\n            $injected.parent().trigger(\"patterns-injected\", [cfg, el, $injected[0]]);\n        } else {\n            $injected.each((idx, el_) => {\n                // patterns-injected event will be triggered for each injected (non-text) element.\n                if (el_.nodeType !== TEXT_NODE) {\n                    $(el_)\n                        .addClass(cfg[\"class\"])\n                        .trigger(\"patterns-injected\", [cfg, el, el_]);\n                }\n            });\n        }\n\n        if (cfg.scroll && cfg.scroll !== \"none\") {\n            // Get the scroll target for\n            // 1) finding the scroll container\n            // 2) getting the element to scroll to (if not \"top\")\n            const scroll_target = [\"top\", \"target\"].includes(cfg.scroll)\n                ? cfg.$target[0]\n                : dom.querySelectorAllAndMe($injected[0], cfg.scroll);\n\n            const scroll_container = dom.find_scroll_container(\n                scroll_target,\n                null,\n                window\n            );\n\n            if (cfg.scroll === \"top\") {\n                dom.scroll_to_top(scroll_container);\n            } else if (scroll_target) {\n                dom.scroll_to_element(scroll_target, scroll_container);\n            }\n        }\n\n        el.dispatchEvent(\n            new Event(\"pat-inject-success\", { bubbles: true, cancelable: true })\n        );\n    },\n\n    async _onInjectSuccess($el, cfgs, ev) {\n        let data = ev?.jqxhr?.responseText;\n        if (!data) {\n            log.warn(\"No response content, aborting\", ev);\n            return;\n        }\n        if (cfgs[0].source === \"none\") {\n            // Special case, we want to call something, but we don't want to inject anything\n            data = \"\";\n        }\n        const sources$ = await this.callTypeHandler(cfgs[0].dataType, \"sources\", $el, [\n            cfgs,\n            data,\n            ev,\n        ]);\n        /* pick the title source for dedicated handling later\n          Title - if present - is always appended at the end. */\n        let $title;\n        if (\n            sources$ &&\n            sources$[sources$.length - 1] &&\n            sources$[sources$.length - 1][0] &&\n            sources$[sources$.length - 1][0].nodeName === \"TITLE\"\n        ) {\n            $title = sources$[sources$.length - 1];\n        }\n        cfgs.forEach((cfg, idx1) => {\n            const perform_inject = () => {\n                if (cfg.target !== \"none\") {\n                    for (const target of cfg.$target) {\n                        this._performInjection(\n                            target,\n                            $el,\n                            sources$[idx1],\n                            cfg,\n                            ev.target,\n                            $title\n                        );\n                    }\n                }\n            };\n            if (cfg.processDelay) {\n                setTimeout(() => perform_inject(), cfg.processDelay);\n            } else {\n                perform_inject();\n            }\n        });\n        if (cfgs[0].nextHref && $el.is(\"a\")) {\n            // In case next-href is specified the anchor's href will\n            // be set to it after the injection is triggered.\n            $el.attr({ href: cfgs[0].nextHref.replace(/&amp;/g, \"&\") });\n            this.destroy($el);\n        }\n        $el.off(\"pat-ajax-success.pat-inject\");\n        $el.off(\"pat-ajax-error.pat-inject\");\n    },\n\n    async _onInjectError($el, cfgs, event) {\n        let explanation = \"\";\n        const status = event.jqxhr.status;\n        const timestamp = new Date();\n        if (status % 100 == 4) {\n            explanation =\n                \"Sorry! We couldn't find the page to load. Please make a screenshot and send it to support. Thank you!\";\n        } else if (status % 100 == 5) {\n            explanation =\n                \"I am very sorry! There was an error at the server. Please make a screenshot and contact support. Thank you!\";\n        } else if (status == 0) {\n            explanation =\n                \"It seems, the server is down. Please make a screenshot and contact support. Thank you!\";\n        }\n\n        let error_page;\n        let error_page_fragment;\n        const url_params = new URLSearchParams(window.location.search);\n        if (url_params.get(\"pat-inject-errorhandler.off\") === null) {\n            // Prepare a error page to be injected into the document.\n\n            // Try to get a suitable error message from pre-configured error pages.\n            const error_page_url = document\n                ?.querySelector(`meta[name^=pat-inject-status-${status}]`)\n                ?.getAttribute(\"content\", false);\n            error_page_fragment = error_page_url?.split(\"#\")[1];\n            error_page_fragment = error_page_fragment ? `#${error_page_fragment}` : null;\n\n            if (error_page_fragment) {\n                error_page = document.createElement(\"html\");\n                error_page.innerHTML = event.jqxhr.responseText;\n                error_page = error_page.querySelector(error_page_fragment);\n            }\n\n            if (!error_page && error_page_url) {\n                try {\n                    const error_page_response = await fetch(error_page_url, {\n                        method: \"GET\",\n                    });\n                    error_page = document.createElement(\"html\");\n                    error_page.innerHTML = await error_page_response.text();\n                    error_page = error_page.querySelector(error_page_fragment || \"body\");\n                } catch {\n                    // fall back to standard error message and ignore.\n                }\n            }\n        }\n\n        // clean up\n        for (const cfg of cfgs) {\n            if (\"$created_target\" in cfg) {\n                cfg.$created_target.remove();\n            }\n            cfg.$target.removeClass(cfg.loadingClass);\n            $el.removeClass(cfg.executingClass);\n        }\n        $el.off(\"pat-ajax-success.pat-inject\");\n        $el.off(\"pat-ajax-error.pat-inject\");\n\n        if (error_page) {\n            const error_zone = document.querySelector(error_page_fragment || \"body\");\n            error_zone.innerHTML = error_page.innerHTML;\n            registry.scan(error_zone); // initialize any patterns in error page\n        } else {\n            const msg_attr = `${explanation} Status is ${status} ${event.jqxhr.statusText}, time was ${timestamp}. You can click to close this.`;\n            $(\"body\").attr(\"data-error-message\", msg_attr);\n            $(\"body\").on(\"click\", () => {\n                $(\"body\").removeAttr(\"data-error-message\");\n                window.location.href = window.location.href; // reload\n            });\n        }\n    },\n\n    execute(cfgs, $el) {\n        /* Actually execute the injection.\n         *\n         * Either by making an ajax request or by spoofing an ajax\n         * request when the content is readily available in the current page.\n         */\n        const el = utils.jqToNode($el);\n        // get a kinda deep copy, we scribble on it\n        cfgs = cfgs.map((cfg) => $.extend({}, cfg));\n        if (!this.verifyConfig(cfgs)) {\n            return;\n        }\n        if (!this.askForConfirmation(cfgs)) {\n            return;\n        }\n        if ($el.data(\"pat-inject-triggered\")) {\n            // Prevent double triggers;\n            return;\n        }\n        $el.data(\"pat-inject-triggered\", true);\n\n        for (const cfg of cfgs) {\n            // Add a execute class on the pat-inject element.\n            if (cfg?.executingClass) {\n                el.classList.add(cfg.executingClass);\n            }\n            // Add a loading class to the target.\n            // Can be used for loading-spinners.\n            if (cfg?.loadingClass && cfg?.target !== \"none\") {\n                cfg.$target.addClass(cfg.loadingClass);\n            }\n        }\n\n        $el.on(\"pat-ajax-success.pat-inject\", async (e) => {\n            this._onInjectSuccess($el, cfgs, e);\n\n            // Wait for the next tick to ensure that the close-panel listener\n            // is called before this one, even for non-async local injects.\n            await utils.timeout(1);\n            // Remove the close-panel event listener.\n            events.remove_event_listener(el, \"pat-inject--close-panel\");\n            // Only close the panel if a close-panel event was catched previously.\n            if (do_close_panel) {\n                do_close_panel = false;\n                // Re-trigger close-panel event if it was caught while injection was in progress.\n                el.dispatchEvent(\n                    new Event(\"close-panel\", { bubbles: true, cancelable: true })\n                );\n            }\n        });\n        $el.on(\"pat-ajax-error.pat-inject\", this._onInjectError.bind(this, $el, cfgs));\n        $el.on(\"pat-ajax-success.pat-inject pat-ajax-error.pat-inject\", () =>\n            $el.removeData(\"pat-inject-triggered\")\n        );\n\n        // Prevent closing the panel while injection is in progress.\n        let do_close_panel = false;\n        events.add_event_listener(el, \"close-panel\", \"pat-inject--close-panel\", (e) => {\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n            do_close_panel = true;\n        });\n\n        if (cfgs[0].url.length) {\n            ajax.request($el, {\n                \"url\": cfgs[0].url,\n                \"browser-cache\": cfgs[0].browserCache,\n            });\n        } else {\n            // If there is no url specified, then content is being fetched\n            // from the same page.\n            // No need to do an ajax request for this, so we spoof the ajax\n            // event.\n            $el.trigger({\n                type: \"pat-ajax-success\",\n                jqxhr: {\n                    responseText: $(\"body\").html(),\n                },\n            });\n        }\n    },\n\n    _inject(trigger, source_nodes, target, cfg) {\n        if (cfg.source === \"none\") {\n            // Special case. Clear the target after ajax call.\n            target.replaceWith(\"\");\n            return true;\n        }\n        if (source_nodes.length === 0) {\n            log.warn(\"Aborting injection, source not found:\", source_nodes);\n            $(trigger).trigger(\"pat-inject-missingSource\", {\n                url: cfg.url,\n                selector: cfg.source,\n            });\n            return false;\n        }\n        if (cfg.target === \"none\") {\n            // Special case. Don't do anything, we don't want any result\n            return true;\n        }\n        if (!target) {\n            log.warn(\"Aborting injection, target not found:\", target);\n            $(trigger).trigger(\"pat-inject-missingTarget\", {\n                selector: cfg.target,\n            });\n            return false;\n        }\n\n        // cfg.action to DOM method mapping\n        const method = {\n            content: \"replaceChildren\",\n            contentafter: \"append\",\n            contentbefore: \"prepend\",\n            element: \"replaceWith\",\n            elementafter: \"after\",\n            elementbefore: \"before\",\n        }[cfg.action];\n\n        // Inject the content HERE!\n        target[method](...source_nodes);\n\n        return true;\n    },\n\n    _sourcesFromHtml(html, url, sources) {\n        const $html = this._parseRawHtml(html, url);\n        return sources.map((source) => {\n            if (source === \"body\") {\n                source = \"#__original_body\";\n            }\n            if (source === \"none\") {\n                return $(\"<!-- -->\");\n            }\n            const $source = $html.find(source);\n\n            if ($source.length === 0) {\n                if (source != \"title\") {\n                    log.warn(\"No source elements for selector:\", source, $html);\n                }\n            }\n\n            $source.find('a[href^=\"#\"]').each((idx, el_) => {\n                const href = el_.getAttribute(\"href\");\n                if (href.indexOf(\"#{1}\") !== -1) {\n                    // We ignore hrefs containing #{1} because they're not\n                    // valid and only applicable in the context of\n                    // pat-clone.\n                    return;\n                }\n                // Skip in-document links pointing to an id that is inside\n                // this fragment.\n                if (href.length === 1) {\n                    // Special case for top-of-page links\n                    el_.href = url;\n                } else if (!$source.find(href).length) {\n                    el_.href = url + href;\n                }\n            });\n            return $source;\n        });\n    },\n\n    _rebaseAttrs: {\n        a: \"href\",\n        form: \"action\",\n        img: \"src\",\n        object: \"data\",\n        source: \"src\",\n        video: \"src\",\n    },\n\n    _rebaseOptions: {\n        \"calendar\": [\"url\", \"event-sources\"],\n        \"collapsible\": [\"load-content\"],\n        \"date-picker\": [\"i18n\"],\n        \"datetime-picker\": [\"i18n\"],\n        \"inject\": [\"url\"],\n    },\n\n    _rebaseURL(base, url) {\n        if (url.indexOf(\"://\") !== -1 || url[0] === \"/\" || url.indexOf(\"data:\") === 0) {\n            return url;\n        }\n        base = new URL(base, window.location).href; // If base is relative make it absolute.\n        return base.slice(0, base.lastIndexOf(\"/\") + 1) + url;\n    },\n\n    _rebaseHTML(base, html) {\n        if (html === \"\") {\n            // Special case, source is none\n            return \"\";\n        }\n\n        // Parse the html string into a DOM tree.\n        const page = document.createElement(\"div\");\n        page.innerHTML = html;\n\n        // Create efficient selector for any tag with it's corresponding\n        // attribute from _rebaseAttrs. Note: the current data structure allows\n        // only for one attribute to be rebased per tag.\n        const rebase_selector = Object.entries(this._rebaseAttrs)\n            .map(([tag, attr]) => `${tag}[${attr}]`)\n            .join(\", \");\n        for (const el_ of page.querySelectorAll(rebase_selector)) {\n            const attr = this._rebaseAttrs[el_.nodeName.toLowerCase()];\n            let value = el_.getAttribute(attr);\n\n            if (\n                value &&\n                value.slice(0, 2) !== \"@@\" &&\n                value[0] !== \"#\" &&\n                value.slice(0, 7) !== \"mailto:\" &&\n                value.slice(0, 4) !== \"tel:\" &&\n                value.slice(0, 4) !== \"fax:\" &&\n                value.slice(0, 7) !== \"callto:\" &&\n                value.slice(0, 10) !== \"ts3server:\" &&\n                value.slice(0, 6) !== \"teams:\" &&\n                value.slice(0, 11) !== \"javascript:\"\n            ) {\n                value = this._rebaseURL(base, value);\n                el_.setAttribute(attr, value);\n            }\n        }\n\n        for (const [pattern_name, opts] of Object.entries(this._rebaseOptions)) {\n            for (const el_ of dom.querySelectorAllAndMe(\n                page,\n                `[data-pat-${pattern_name}]`\n            )) {\n                const pattern = registry.patterns?.[pattern_name];\n                const pattern_parser = pattern?.parser;\n                if (!pattern_parser) {\n                    continue;\n                }\n                // parse: no default options, possibly multiple configs, no grouping.\n                const options = pattern_parser.parse(el_, {}, true, false, false);\n                let changed = false;\n                for (const config of options) {\n                    for (const opt of opts) {\n                        const val = config[opt];\n                        if (!val) {\n                            continue;\n                        }\n                        changed = true;\n                        if (Array.isArray(val)) {\n                            config[opt] = val.map((it) => this._rebaseURL(base, it));\n                        } else {\n                            config[opt] = this._rebaseURL(base, val);\n                        }\n                    }\n                }\n                if (changed) {\n                    el_.setAttribute(\n                        `data-pat-${pattern_name}`,\n                        JSON.stringify(options.length === 1 ? options[0] : options)\n                    );\n                }\n            }\n        }\n\n        return page.innerHTML.trim();\n    },\n\n    _parseRawHtml(html, url = \"\") {\n        // remove script tags and head and replace body by a div\n        const title = html.match(/\\<title\\>(.*)\\<\\/title\\>/);\n        let clean_html = html\n            .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, \"\")\n            .replace(/<head\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/head>/gi, \"\")\n            .replace(/<html([^>]*?)>/gi, \"\")\n            .replace(/<\\/html([^>]*?)>/gi, \"\")\n            .replace(/<body([^>]*?)>/gi, '<div id=\"__original_body\">')\n            .replace(/<\\/body([^>]*?)>/gi, \"</div>\");\n\n        if (title && title.length == 2) {\n            clean_html = title[0] + clean_html;\n        }\n        try {\n            clean_html = this._rebaseHTML(url, clean_html);\n        } catch (e) {\n            log.error(\"Error rebasing urls\", e);\n        }\n        const $html = $(\"<div/>\").html(clean_html);\n        if ($html.children().length === 0) {\n            log.warn(\"Parsing html resulted in empty jquery object:\", clean_html);\n        }\n        return $html;\n    },\n\n    _initAutoloadVisible($el, cfgs) {\n        if ($el.data(\"pat-inject-autoloaded\")) {\n            // ignore executed autoloads\n            return false;\n        }\n\n        const el = utils.jqToNode($el);\n\n        // delay: default is 200ms to allow scrolling over and past autoload-visible elements without loading them.\n        const delay = cfgs[0].delay || 200;\n        log.debug(`Delay time: ${delay}`);\n\n        // function to trigger the autoload and mark as triggered\n        const trigger = (event) => {\n            if ($el.data(\"pat-inject-autoloaded\")) {\n                log.debug(`autoload-visible trigger skipped ${el}`);\n                return false;\n            }\n            $el.data(\"pat-inject-autoloaded\", true);\n            this.onTrigger({ currentTarget: el });\n            event && event.preventDefault();\n            log.debug(`autoload-visible trigger run ${el}`);\n            return true;\n        };\n\n        // Config see: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n        const intersection_observer_config = {\n            threshold: 0, // If even one pixel is visible, the callback will be run.\n            root: null, // Root is browser viewport. If the element is visible to the user, the callback will be run.\n            margin: \"0px\", // No margins. The element is not preloaded.\n        };\n\n        let timeout_id = null;\n        const observer = new IntersectionObserver((entries) => {\n            for (const entry of entries) {\n                if (entry.isIntersecting) {\n                    // Run the callback after 200ms to prevent loading all\n                    // visible elements when scrolling over.\n                    timeout_id = window.setTimeout(() => {\n                        observer.disconnect(); // Stop observing loaded elements.\n                        trigger();\n                    }, delay);\n                    log.debug(`autoload-visible intersecting ${el}`);\n                } else {\n                    window.clearTimeout(timeout_id);\n                    log.debug(`autoload-visible not intersecting ${el}`);\n                }\n            }\n        }, intersection_observer_config);\n        observer.observe(el);\n    },\n\n    _initIdleTrigger($el, delay) {\n        // TODO: handle item removed from DOM\n        const timeout = parseInt(delay, 10);\n        let timer;\n\n        const el = utils.jqToNode($el);\n\n        const onTimeout = () => {\n            this.onTrigger({ currentTarget: el });\n            unsub();\n            clearTimeout(timer);\n        };\n\n        const onInteraction = utils.debounce(() => {\n            if (!document.body.contains(el)) {\n                unsub();\n                return;\n            }\n            clearTimeout(timer);\n            timer = setTimeout(onTimeout, timeout);\n        }, timeout);\n\n        const unsub = () => {\n            for (const event of [\"scroll\", \"resize\"]) {\n                window.removeEventListener(event, onInteraction);\n            }\n            for (const event of [\n                \"click\",\n                \"keypress\",\n                \"keyup\",\n                \"mousemove\",\n                \"touchstart\",\n                \"touchend\",\n            ]) {\n                document.removeEventListener(event, onInteraction);\n            }\n        };\n\n        onInteraction();\n\n        for (const event of [\"scroll\", \"resize\"]) {\n            window.addEventListener(event, onInteraction);\n        }\n        for (const event of [\n            \"click\",\n            \"keypress\",\n            \"keyup\",\n            \"mousemove\",\n            \"touchstart\",\n            \"touchend\",\n        ]) {\n            document.addEventListener(event, onInteraction);\n        }\n    },\n\n    registerTypeHandler(type, handler) {\n        this.handlers[type] = handler;\n    },\n\n    async callTypeHandler(type, fn, context, params) {\n        type = type || \"html\";\n        if (this.handlers[type] && $.isFunction(this.handlers[type][fn])) {\n            return await this.handlers[type][fn].bind(this)(...params);\n        } else {\n            return null;\n        }\n    },\n\n    handlers: {\n        html: {\n            sources(cfgs, data) {\n                const sources = cfgs.map((cfg) => cfg.source);\n                sources.push(\"title\");\n                const result = this._sourcesFromHtml(data, cfgs[0].url, sources);\n                return result;\n            },\n        },\n    },\n};\n\n$(document).on(\"patterns-injected.inject\", async (ev, cfg, trigger, injected) => {\n    /* Listen for the patterns-injected event.\n     *\n     * Remove the \"loading-class\" classes from all injection targets and\n     * then scan the injected content for new patterns.\n     */\n    if (cfg?.skipPatInjectHandler) {\n        // Allow skipping this handler but still have other handlers in other\n        // patterns listen to ``patterns-injected``.\n        return;\n    }\n    if (cfg) {\n        cfg.$target.removeClass(cfg.loadingClass);\n        // Remove the executing class, add the executed class to the element with pat.inject on it.\n        $(trigger).removeClass(cfg.executingClass).addClass(cfg.executedClass);\n    }\n    if (injected.nodeType !== TEXT_NODE && injected.nodeType !== COMMENT_NODE) {\n        registry.scan(injected, null, { type: \"injection\", element: trigger });\n        $(injected).trigger(\"patterns-injected-scanned\");\n\n        await utils.timeout(10); // Wait a bit before dispatching next event.\n        injected.dispatchEvent(\n            new CustomEvent(\"patterns-injected-delayed\", {\n                bubbles: true,\n                cancelable: true,\n                detail: {\n                    injected: injected,\n                },\n            })\n        );\n    }\n});\n\n$(window).on(\"popstate\", (event) => {\n    // popstate also triggers on traditional anchors\n    if (!event.originalEvent.state && \"replaceState\" in history) {\n        try {\n            history.replaceState(\"anchor\", \"\", document.location.href);\n        } catch (e) {\n            log.debug(e);\n        }\n        return;\n    }\n    // Not only change the URL, also reload the page.\n    window.location.reload();\n});\n\n// this entry ensures that the initally loaded page can be reached with\n// the back button\nif (\"replaceState\" in history) {\n    try {\n        history.replaceState(\"pageload\", \"\", document.location.href);\n    } catch (e) {\n        log.debug(e);\n    }\n}\n\nregistry.register(inject);\nexport default inject;\n","import utils from \"./utils\";\n\n// Event related methods and event factories\n\n// Event listener registration for easy-to-remove event listeners.\n// once Safari supports the ``signal`` option for addEventListener we can abort\n// event handlers by calling AbortController.abort().\nexport const event_listener_map = new Map();\n\n/**\n * Add an event listener to a DOM element under a unique id.\n * If a event is registered under the same id for the same element, the old handler is removed first.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} event_type - The event type to listen for.\n * @param {string} id - A unique id under which the event is registered.\n * @param {function} cb - The event handler / callback function.\n * @param {Object} opts - Options for the addEventListener API.\n *\n */\nconst add_event_listener = (el, event_type, id, cb, opts = {}) => {\n    if (!el?.addEventListener) {\n        return; // nothing to do.\n    }\n    remove_event_listener(el, id); // do not register one listener twice.\n\n    // Create event_listener_map entry if not existent.\n    if (!event_listener_map.has(el)) {\n        event_listener_map.set(el, new Map());\n    }\n    let _cb = cb;\n    if (opts?.once === true) {\n        // For `once` events, also remove the entry from the event_listener_map.\n        _cb = (e) => {\n            event_listener_map.get(el)?.delete(id);\n            cb(e);\n        };\n    }\n    // Only `capture` option is necessary for `removeEventListener`.\n    event_listener_map\n        .get(el)\n        .set(id, [event_type, _cb, opts.capture ? opts : undefined]);\n    el.addEventListener(event_type, _cb, opts);\n};\n\n/**\n * Remove an event listener from a DOM element under a unique id.\n *\n * If an element and id are given, the event listeners for the given element matching the id are removed.\n * If an element but no id is given, all event listeners for that element are removed.\n * If an id but no element is given, all event listeners for any element matching the id are removed.\n * If no element and no id are given, all event listeners are removed.\n *\n * The id can be a wildcard string, e.g. `test-*-event`, which would match any\n * event which starts with \"test-\" and ends with \"-event\". The wildcard \"*\" can\n * be anywhere in the string and also be used multiple times. If no wildcard is\n * present the search string is used for an exact match.\n *\n * @param {DOM Node} [el] - The element to register the event for.\n * @param {string} [id] - A unique id under which the event is registered.\n *                        Can be a wildcard string.\n *\n */\nconst remove_event_listener = (el, id) => {\n    const els = el ? [el] : event_listener_map.keys();\n    for (const el of els) {\n        if (!el?.removeEventListener) {\n            return; // nothing to do.\n        }\n        const el_events = event_listener_map.get(el);\n        if (!el_events) {\n            return;\n        }\n        let entries;\n        if (id) {\n            // remove event listener with matching id\n            entries = [...el_events.entries()].filter((entry) =>\n                utils.regexp_from_wildcard(id).test(entry[0])\n            );\n        } else {\n            // remove all event listeners of element\n            entries = el_events.entries();\n        }\n        for (const entry of entries || []) {\n            // Remove event listener\n            el.removeEventListener(entry[1][0], entry[1][1], entry[1][2]);\n            // Delete entry from event_listener_map\n            event_listener_map.get(el).delete(entry[0]);\n            // Delete element from event_listener_map if no more events are registered.\n            if (!event_listener_map.get(el).size) {\n                event_listener_map.delete(el);\n            }\n        }\n    }\n};\n\n/**\n * Await an event to be thrown.\n *\n * Usage:\n *     await events.await_event(button, \"click\");\n *\n * @param {DOM Node} el - The element to listen on.\n * @param {String} event_name - The event name to listen for.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_event = (el, event_name) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve) =>\n        el.addEventListener(event_name, resolve, { once: true })\n    );\n};\n\n/**\n * Await pattern init.\n *\n * Usage:\n *     await events.await_pattern_init(PATTERN);\n *\n * @param {Pattern instance} pattern - The pattern instance.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_pattern_init = (pattern) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve, reject) => {\n        // Case initialized\n        pattern.one(\"init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling init events from child elements. We\n                // want to check on init events coming directly from this\n                // Pattern's element.\n                return;\n            }\n            // Resolve promise and unregister the not-init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--not-init.${pattern.name}.patterns`\n            );\n            resolve();\n        });\n\n        // Case not initialized\n        pattern.one(\"not-init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling not-init events from child elements.\n                // We want to check on not-init events coming directly from\n                // this Pattern's element.\n                return;\n            }\n            // Reject promise and unregister the init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--init.${pattern.name}.patterns`\n            );\n            reject();\n        });\n    }).catch(() => {\n        throw new Error(`Pattern \"${pattern.name}\" not initialized.`);\n    });\n};\n\n/**\n * Event factories\n */\n\n/** Generic event factory.\n *\n * A event factory for a bubbling and cancelable generic event.\n *\n * @param {string} name - The event name.\n * @returns {Event} - Returns a blur event.\n */\nconst generic_event = (name) => {\n    return new Event(name, {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\n\n/** Patternslib specifc event factories\n */\n\nclass UpdateEvent extends CustomEvent {\n    constructor(options) {\n        super(\"pat-update\", {\n            bubbles: true,\n            cancelable: true,\n            detail: options\n        });\n    }\n}\n\nconst update_event = (options) => {\n    return new UpdateEvent(options);\n}\n\n\n/** Web API event factories\n */\n\nconst blur_event = () => {\n    return new Event(\"blur\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst click_event = () => {\n    return new Event(\"click\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst change_event = () => {\n    return new Event(\"change\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst focus_event = () => {\n    return new Event(\"focus\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst input_event = () => {\n    return new Event(\"input\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst mousedown_event = () => {\n    return new Event(\"mousedown\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst mouseup_event = () => {\n    return new Event(\"mouseup\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst scroll_event = () => {\n    return new Event(\"scroll\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst submit_event = ({ submitter } = { submitter: undefined }) => {\n    const event = new Event(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n    });\n    event.submitter = submitter; // undefined or the submitting element\n    return event;\n};\n\nconst dragstart_event = () => {\n    return new Event(\"dragstart\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst dragend_event = () => {\n    return new Event(\"dragend\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nexport default {\n    add_event_listener: add_event_listener,\n    remove_event_listener: remove_event_listener,\n    await_event: await_event,\n    await_pattern_init: await_pattern_init,\n    generic_event: generic_event,\n    update_event: update_event,\n    blur_event: blur_event,\n    click_event: click_event,\n    change_event: change_event,\n    focus_event: focus_event,\n    input_event: input_event,\n    mousedown_event: mousedown_event,\n    mouseup_event: mouseup_event,\n    scroll_event: scroll_event,\n    submit_event: submit_event,\n    dragstart_event: dragstart_event,\n    dragend_event: dragend_event,\n};\n","/**\n * @license\n * Patterns @VERSION@ jquery-ext - various jQuery extensions\n *\n * Copyright 2011 Humberto Sermeño\n */\n\nimport $ from \"jquery\";\n\nvar methods = {\n    init: function (options) {\n        var settings = {\n            time: 3 /* time it will wait before moving to \"timeout\" after a move event */,\n            initialTime: 8 /* time it will wait before first adding the \"timeout\" class */,\n            exceptionAreas: [] /* IDs of elements that, if the mouse is over them, will reset the timer */,\n        };\n        return this.each(function () {\n            var $this = $(this),\n                data = $this.data(\"timeout\");\n\n            if (!data) {\n                if (options) {\n                    $.extend(settings, options);\n                }\n                $this.data(\"timeout\", {\n                    lastEvent: new Date(),\n                    trueTime: settings.time,\n                    time: settings.initialTime,\n                    untouched: true,\n                    inExceptionArea: false,\n                });\n\n                $this.on(\"mouseover.timeout\", methods.mouseMoved);\n                $this.on(\"mouseenter.timeout\", methods.mouseMoved);\n\n                $(settings.exceptionAreas).each(function () {\n                    $this\n                        .find(this)\n                        .live(\n                            \"mouseover.timeout\",\n                            { parent: $this },\n                            methods.enteredException\n                        )\n                        .live(\n                            \"mouseleave.timeout\",\n                            { parent: $this },\n                            methods.leftException\n                        );\n                });\n\n                if (settings.initialTime > 0) $this.timeout(\"startTimer\");\n                else $this.addClass(\"timeout\");\n            }\n        });\n    },\n\n    enteredException: function (event) {\n        var data = event.data.parent.data(\"timeout\");\n        data.inExceptionArea = true;\n        event.data.parent.data(\"timeout\", data);\n        event.data.parent.trigger(\"mouseover\");\n    },\n\n    leftException: function (event) {\n        var data = event.data.parent.data(\"timeout\");\n        data.inExceptionArea = false;\n        event.data.parent.data(\"timeout\", data);\n    },\n\n    destroy: function () {\n        return this.each(function () {\n            var $this = $(this),\n                data = $this.data(\"timeout\");\n\n            $(window).off(\".timeout\");\n            data.timeout.remove();\n            $this.removeData(\"timeout\");\n        });\n    },\n\n    mouseMoved: function () {\n        var $this = $(this),\n            data = $this.data(\"timeout\");\n\n        if ($this.hasClass(\"timeout\")) {\n            $this.removeClass(\"timeout\");\n            $this.timeout(\"startTimer\");\n        } else if (data.untouched) {\n            data.untouched = false;\n            data.time = data.trueTime;\n        }\n\n        data.lastEvent = new Date();\n        $this.data(\"timeout\", data);\n    },\n\n    startTimer: function () {\n        var $this = $(this),\n            data = $this.data(\"timeout\");\n        var fn = function () {\n            var data = $this.data(\"timeout\");\n            if (data && data.lastEvent) {\n                if (data.inExceptionArea) {\n                    setTimeout(fn, Math.floor(data.time * 1000));\n                } else {\n                    var now = new Date();\n                    var diff = Math.floor(data.time * 1000) - (now - data.lastEvent);\n                    if (diff > 0) {\n                        // the timeout has not ocurred, so set the timeout again\n                        setTimeout(fn, diff + 100);\n                    } else {\n                        // timeout ocurred, so set the class\n                        $this.addClass(\"timeout\");\n                    }\n                }\n            }\n        };\n\n        setTimeout(fn, Math.floor(data.time * 1000));\n    },\n};\n\n$.fn.timeout = function (method) {\n    if (methods[method]) {\n        return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (typeof method === \"object\" || !method) {\n        return methods.init.apply(this, arguments);\n    } else {\n        $.error(\"Method \" + method + \" does not exist on jQuery.timeout\");\n    }\n};\n\n// Custom jQuery selector to find elements with scrollbars\n$.extend($.expr[\":\"], {\n    scrollable: function (element) {\n        var vertically_scrollable, horizontally_scrollable;\n        if (\n            $(element).css(\"overflow\") === \"scroll\" ||\n            $(element).css(\"overflowX\") === \"scroll\" ||\n            $(element).css(\"overflowY\") === \"scroll\"\n        )\n            return true;\n\n        vertically_scrollable =\n            element.clientHeight < element.scrollHeight &&\n            ($.inArray($(element).css(\"overflowY\"), [\"scroll\", \"auto\"]) !== -1 ||\n                $.inArray($(element).css(\"overflow\"), [\"scroll\", \"auto\"]) !== -1);\n\n        if (vertically_scrollable) return true;\n\n        horizontally_scrollable =\n            element.clientWidth < element.scrollWidth &&\n            ($.inArray($(element).css(\"overflowX\"), [\"scroll\", \"auto\"]) !== -1 ||\n                $.inArray($(element).css(\"overflow\"), [\"scroll\", \"auto\"]) !== -1);\n        return horizontally_scrollable;\n    },\n});\n\n// Make Visible in scroll\n$.fn.makeVisibleInScroll = function (parent_id) {\n    var absoluteParent = null;\n    if (typeof parent_id === \"string\") {\n        absoluteParent = $(\"#\" + parent_id);\n    } else if (parent_id) {\n        absoluteParent = $(parent_id);\n    }\n\n    return this.each(function () {\n        var $this = $(this),\n            parent;\n        if (!absoluteParent) {\n            parent = $this.parents(\":scrollable\");\n            if (parent.length > 0) {\n                parent = $(parent[0]);\n            } else {\n                parent = $(window);\n            }\n        } else {\n            parent = absoluteParent;\n        }\n\n        var elemTop = $this.position().top;\n        var elemBottom = $this.height() + elemTop;\n\n        var viewTop = parent.scrollTop();\n        var viewBottom = parent.height() + viewTop;\n\n        if (elemTop < viewTop) {\n            parent.scrollTop(elemTop);\n        } else if (elemBottom > viewBottom - parent.height() / 2) {\n            parent.scrollTop(elemTop - (parent.height() - $this.height()) / 2);\n        }\n    });\n};\n\n//Work around warning for jQuery 3.x:\n//JQMIGRATE: jQuery.fn.offset() requires an element connected to a document\n$.fn.safeOffset = function () {\n    var docElem,\n        elem = this[0],\n        origin = { top: 0, left: 0 };\n\n    if (!elem || !elem.nodeType) {\n        return origin;\n    }\n\n    docElem = (elem.ownerDocument || document).documentElement;\n    if (!$.contains(docElem, elem)) {\n        return origin;\n    }\n\n    return $.fn.offset.apply(this, arguments);\n};\n\n//Make absolute location\n$.fn.setPositionAbsolute = function (element, offsettop, offsetleft) {\n    return this.each(function () {\n        // set absolute location for based on the element passed\n        // dynamically since every browser has different settings\n        var $this = $(this);\n        var thiswidth = $(this).width();\n        var pos = element.safeOffset();\n        var width = element.width();\n        var height = element.height();\n        var setleft = pos.left + width - thiswidth + offsetleft;\n        var settop = pos.top + height + offsettop;\n        $this.css({\n            \"z-index\": 1,\n            \"position\": \"absolute\",\n            \"marginLeft\": 0,\n            \"marginTop\": 0,\n            \"left\": setleft + \"px\",\n            \"top\": settop + \"px\",\n            \"width\": thiswidth,\n        });\n        $this.remove().appendTo(\"body\").show();\n    });\n};\n\n$.fn.positionAncestor = function (selector) {\n    var left = 0;\n    var top = 0;\n    this.each(function () {\n        // check if current element has an ancestor matching a selector\n        // and that ancestor is positioned\n        var $ancestor = $(this).closest(selector);\n        if ($ancestor.length && $ancestor.css(\"position\") !== \"static\") {\n            var $child = $(this);\n            var childMarginEdgeLeft =\n                $child.safeOffset().left - parseInt($child.css(\"marginLeft\"), 10);\n            var childMarginEdgeTop =\n                $child.safeOffset().top - parseInt($child.css(\"marginTop\"), 10);\n            var ancestorPaddingEdgeLeft =\n                $ancestor.safeOffset().left +\n                parseInt($ancestor.css(\"borderLeftWidth\"), 10);\n            var ancestorPaddingEdgeTop =\n                $ancestor.safeOffset().top +\n                parseInt($ancestor.css(\"borderTopWidth\"), 10);\n            left = childMarginEdgeLeft - ancestorPaddingEdgeLeft;\n            top = childMarginEdgeTop - ancestorPaddingEdgeTop;\n            // we have found the ancestor and computed the position\n            // stop iterating\n            return false;\n        }\n    });\n    return {\n        left: left,\n        top: top,\n    };\n};\n\n$.fn.findInclusive = function (selector) {\n    return this.find(\"*\").addBack().filter(selector);\n};\n\n$.fn.slideIn = function (speed, easing, callback) {\n    return this.animate({ width: \"show\" }, speed, easing, callback);\n};\n\n$.fn.slideOut = function (speed, easing, callback) {\n    return this.animate({ width: \"hide\" }, speed, easing, callback);\n};\n\n// case-insensitive :contains\n$.expr[\":\"].Contains = function (a, i, m) {\n    return $(a).text().toUpperCase().indexOf(m[3].toUpperCase()) >= 0;\n};\n\n$.fn.scopedFind = function (selector) {\n    /*  If the selector starts with an object id do a global search,\n     *  otherwise do a local search.\n     */\n    if (selector.indexOf(\"#\") === 0) {\n        return $(selector);\n    } else {\n        return this.find(selector);\n    }\n};\n\nexport default undefined;\n","import Base from \"../../core/base\";\nimport Parser from \"../../core/parser\";\nimport dom from \"../../core/dom\";\nimport events from \"../../core/events\";\nimport utils from \"../../core/utils\";\nimport \"../../core/jquery-ext\";\n\nexport const parser = new Parser(\"checklist\");\nparser.addArgument(\"select\", \".select-all\");\nparser.addArgument(\"deselect\", \".deselect-all\");\nparser.addArgument(\"toggle\", \".toggle-all\");\n\nexport default Base.extend({\n    name: \"checklist\",\n    trigger: \".pat-checklist\",\n    jquery_plugin: true,\n    all_selects: [],\n    all_deselects: [],\n    all_toggles: [],\n    all_checkboxes: [],\n    all_radios: [],\n\n    init() {\n        this.options = parser.parse(this.el, this.options, false);\n        this.$el.on(\"patterns-injected\", this._init.bind(this));\n\n        this.change_handler = utils.debounce(() => {\n            this.change_buttons_and_toggles();\n            this.change_checked();\n        }, 50);\n\n        this._init();\n    },\n\n    _init() {\n        this.all_checkboxes = this.el.querySelectorAll(`input[type=checkbox]`);\n        this.all_radios = this.el.querySelectorAll(\"input[type=radio]\");\n\n        this.all_selects = dom.find_scoped(this.el, this.options.select);\n        for (const btn of this.all_selects) {\n            events.add_event_listener(\n                btn,\n                \"click\",\n                \"pat-checklist--select-all--click\",\n                this.select_all.bind(this)\n            );\n        }\n\n        this.all_deselects = dom.find_scoped(this.el, this.options.deselect);\n        for (const btn of this.all_deselects) {\n            events.add_event_listener(\n                btn,\n                \"click\",\n                \"pat-checklist--deselect-all--click\",\n                this.deselect_all.bind(this)\n            );\n        }\n\n        this.all_toggles = dom.find_scoped(this.el, this.options.toggle);\n        for (const btn of this.all_toggles) {\n            events.add_event_listener(\n                btn,\n                \"click\",\n                \"pat-checklist--toggle-all--click\",\n                this.toggle_all.bind(this)\n            );\n        }\n\n        // update select/deselect button status\n        this.change_buttons_and_toggles();\n        this.change_checked();\n        events.add_event_listener(\n            this.el,\n            \"change\",\n            \"pat-checklist--change-handler--change\",\n            this.change_handler.bind(this)\n        );\n    },\n\n    destroy() {\n        for (const it of this.all_selects) {\n            events.remove_event_listener(it, \"pat-checklist--select-all--click\");\n        }\n        for (const it of this.all_deselects) {\n            events.remove_event_listener(it, \"pat-checklist--deselect-all--click\");\n        }\n        for (const it of this.all_toggles) {\n            events.remove_event_listener(it, \"pat-checklist--toggle-all--click\");\n        }\n        events.remove_event_listener(this.el, \"pat-checklist--change-handler--change\");\n        this.$el.off(\"patterns_injected\");\n    },\n\n    find_siblings(el, sel) {\n        // Looks for the closest elements within the `el` tree that match the\n        // `sel` selector\n        let res;\n        let parent = el.parentNode;\n        while (parent) {\n            res = parent.querySelectorAll(`${sel}:not(${this.options.toggle})`);\n            if (res.length || parent === this.el) {\n                // return if results were found or we reached the pattern top\n                return res;\n            }\n            parent = parent.parentNode;\n        }\n    },\n\n    find_checkboxes(ref_el, sel) {\n        let chkbxs = [];\n        if (this.options.select.indexOf(\"#\") === 0) {\n            chkbxs = this.el.querySelectorAll(sel);\n        } else {\n            chkbxs = this.find_siblings(ref_el, sel);\n        }\n        return chkbxs;\n    },\n\n    change_buttons_and_toggles() {\n        let chkbxs;\n        for (const btn of this.all_selects) {\n            chkbxs = this.find_checkboxes(btn, \"input[type=checkbox]\");\n            btn.disabled = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === true);\n        }\n        for (const btn of this.all_deselects) {\n            chkbxs = this.find_checkboxes(btn, \"input[type=checkbox]\");\n            btn.disabled = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === false);\n        }\n        for (const tgl of this.all_toggles) {\n            chkbxs = this.find_checkboxes(tgl, \"input[type=checkbox]\");\n            tgl.checked = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === true);\n        }\n    },\n\n    select_all(e) {\n        e.preventDefault();\n        const chkbxs = this.find_checkboxes(\n            e.target,\n            \"input[type=checkbox]:not(:checked)\"\n        );\n        for (const box of chkbxs) {\n            box.checked = true;\n            box.dispatchEvent(events.change_event());\n            box.dispatchEvent(events.input_event());\n        }\n    },\n\n    deselect_all(e) {\n        e.preventDefault();\n        const chkbxs = this.find_checkboxes(e.target, \"input[type=checkbox]:checked\");\n        for (const box of chkbxs) {\n            box.checked = false;\n            box.dispatchEvent(events.change_event());\n            box.dispatchEvent(events.input_event());\n        }\n    },\n\n    toggle_all(e) {\n        e.preventDefault();\n        const checked = e.target.checked;\n        const chkbxs = this.find_checkboxes(e.target, \"input[type=checkbox]\");\n        for (const box of chkbxs) {\n            box.checked = checked;\n            box.dispatchEvent(events.change_event());\n            box.dispatchEvent(events.input_event());\n        }\n    },\n\n    change_checked() {\n        for (const it of [...this.all_checkboxes, ...this.all_radios]) {\n            for (const label of it.labels) {\n                label.classList.remove(\"checked\", \"unchecked\");\n                label.classList.add(it.checked ? \"checked\" : \"unchecked\");\n            }\n        }\n\n        for (const fieldset of dom.querySelectorAllAndMe(this.el, \"fieldset\")) {\n            if (\n                fieldset.querySelectorAll(\n                    `input[type=checkbox]:checked:not(${this.options.toggle}), input[type=radio]:checked`\n                ).length\n            ) {\n                fieldset.classList.remove(\"unchecked\");\n                fieldset.classList.add(\"checked\");\n            } else {\n                fieldset.classList.remove(\"checked\");\n                fieldset.classList.add(\"unchecked\");\n            }\n        }\n    },\n});\n","/**\n * Patterns registry - Central registry and scan logic for patterns\n *\n * Copyright 2012-2013 Simplon B.V.\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2013 Marko Durkovic\n * Copyright 2013 Rok Garbas\n * Copyright 2014-2015 Syslab.com GmBH, JC Brand\n */\n\n/*\n * changes to previous patterns.register/scan mechanism\n * - if you want initialised class, do it in init\n * - init returns set of elements actually initialised\n * - handle once within init\n * - no turnstile anymore\n * - set pattern.jquery_plugin if you want it\n */\nimport $ from \"jquery\";\nimport dom from \"./dom\";\nimport logging from \"./logging\";\nimport utils from \"./utils\";\n\nconst log = logging.getLogger(\"registry\");\nconst disable_re = /patterns-disable=([^&]+)/g;\nconst dont_catch_re = /patterns-dont-catch/g;\nconst disabled = {};\nlet dont_catch = false;\nlet match;\n\nwhile ((match = disable_re.exec(window.location.search)) !== null) {\n    disabled[match[1]] = true;\n    log.info(\"Pattern disabled via url config:\", match[1]);\n}\n\nwhile ((match = dont_catch_re.exec(window.location.search)) !== null) {\n    dont_catch = true;\n    log.info(\"I will not catch init exceptions\");\n}\n\n/**\n * Global pattern registry.\n *\n * This is a singleton and shared among any instance of the Patternslib\n * registry since Patternslib version 8.\n *\n * You normally don't need this as the registry handles it for you.\n */\nif (typeof window.__patternslib_registry === \"undefined\") {\n    window.__patternslib_registry = {};\n}\nexport const PATTERN_REGISTRY = window.__patternslib_registry;\nif (typeof window.__patternslib_registry_initialized === \"undefined\") {\n    window.__patternslib_registry_initialized = false;\n}\n\nconst registry = {\n    patterns: PATTERN_REGISTRY, // reference to global patterns registry\n    // as long as the registry is not initialized, pattern\n    // registration just registers a pattern. Once init is called,\n    // the DOM is scanned. After that registering a new pattern\n    // results in rescanning the DOM only for this pattern.\n    init() {\n        dom.document_ready(() => {\n            if (window.__patternslib_registry_initialized) {\n                // Do not reinitialize a already initialized registry.\n                return;\n            }\n            window.__patternslib_registry_initialized = true;\n            log.debug(\"Loaded: \" + Object.keys(registry.patterns).sort().join(\", \"));\n            registry.scan(document.body);\n            log.debug(\"Finished initial scan.\");\n        });\n    },\n\n    clear() {\n        // Removes all patterns from the registry. Currently only being\n        // used in tests.\n        for (const name in registry.patterns) {\n            delete registry.patterns[name];\n        }\n    },\n\n    transformPattern(name, content) {\n        /* Call the transform method on the pattern with the given name, if\n         * it exists.\n         */\n        if (disabled[name]) {\n            log.debug(`Skipping disabled pattern: ${name}.`);\n            return;\n        }\n\n        const pattern = registry.patterns[name];\n        const transform = pattern.transform || pattern.prototype?.transform;\n        if (transform) {\n            try {\n                transform($(content));\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                log.error(`Transform error for pattern ${name}.`, e);\n            }\n        }\n    },\n\n    initPattern(name, el, trigger) {\n        /* Initialize the pattern with the provided name and in the context\n         * of the passed in DOM element.\n         */\n        const $el = $(el);\n        const pattern = registry.patterns[name];\n        const plog = logging.getLogger(`pat.${name}`);\n        if (el.matches(pattern.trigger)) {\n            plog.debug(\"Initialising.\", el);\n            try {\n                if (pattern.init) {\n                    // old style initialisation\n                    pattern.init($el, null, trigger);\n                } else {\n                    // class based pattern initialisation\n                    new pattern($el, null, trigger);\n                }\n\n                plog.debug(\"done.\");\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                plog.error(\"Caught error:\", e);\n            }\n        }\n    },\n\n    orderPatterns(patterns) {\n        // Always add pat-validation as first pattern, so that it can prevent\n        // other patterns from reacting to submit events if form validation\n        // fails.\n        if (patterns.includes(\"validation\")) {\n            patterns.splice(patterns.indexOf(\"validation\"), 1);\n            patterns.unshift(\"validation\");\n        }\n        // Add clone-code to the very beginning - we want to copy the markup\n        // before any other patterns changed the markup.\n        if (patterns.includes(\"clone-code\")) {\n            patterns.splice(patterns.indexOf(\"clone-code\"), 1);\n            patterns.unshift(\"clone-code\");\n        }\n\n        return patterns;\n    },\n\n    scan(content, patterns, trigger) {\n        if (!content) {\n            return;\n        }\n\n        if (typeof content === \"string\") {\n            content = document.querySelector(content);\n        } else if (content instanceof Text) {\n            // No need to scan a TextNode.\n            return;\n        } else if (content.jquery) {\n            content = content[0];\n        }\n\n        const selectors = [];\n        patterns = this.orderPatterns(patterns || Object.keys(registry.patterns));\n        for (const name of patterns) {\n            this.transformPattern(name, content);\n            const pattern = registry.patterns[name];\n            if (pattern.trigger) {\n                selectors.unshift(pattern.trigger);\n            }\n        }\n\n        // Clean up selectors:\n        // - Remove whitespace,\n        // - Remove trailing commas,\n        // - Join to selecto string.\n        const selector_string = selectors.map(\n            (selector) => selector.trim().replace(/,$/, \"\")\n        ).join(\",\");\n\n        // Exit, if no selector.\n        if (!selector_string) {\n            return;\n        }\n\n        let matches = dom.querySelectorAllAndMe(\n            content,\n            selector_string\n        );\n        matches = matches.filter((el) => {\n            // Filter out patterns:\n            // - with class ``.disable-patterns`` or wrapped within.\n            // - wrapped in ``<pre>`` elements\n            // - wrapped in ``<template>`` elements (not reachable anyways)\n            return (\n                !el?.closest?.(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\"pre\") &&\n                // BBB. TODO: Remove with next major version.\n                !el?.closest?.(\".cant-touch-this\")\n            );\n        });\n\n        // walk list backwards and initialize patterns inside-out.\n        for (const el of matches.reverse()) {\n            for (const name of patterns) {\n                this.initPattern(name, el, trigger);\n            }\n        }\n        document.body.classList.add(\"patterns-loaded\");\n    },\n\n    register(pattern, name) {\n        name = name || pattern.name;\n        if (!name) {\n            log.error(\"Pattern lacks a name.\", pattern);\n            return false;\n        }\n\n        // Do not register blacklisted patterns.\n        let BLACKLIST = window.__patternslib_patterns_blacklist;\n        if (!Array.isArray(BLACKLIST)) {\n            BLACKLIST = [];\n        }\n        if (BLACKLIST.includes(name)) {\n            log.warn(`Pattern name ${name} is blacklisted.`);\n            return false;\n        }\n\n        if (registry.patterns[name]) {\n            log.debug(`Already have a pattern called ${name}.`);\n            return false;\n        }\n        // register pattern to be used for scanning new content\n        registry.patterns[name] = pattern;\n\n        // register pattern as jquery plugin\n        if (pattern.jquery_plugin) {\n            const plugin_name = (\"pat-\" + name).replace(\n                /-([a-zA-Z])/g,\n                function (match, p1) {\n                    return p1.toUpperCase();\n                }\n            );\n            $.fn[plugin_name] = utils.jqueryPlugin(pattern);\n            // BBB 2012-12-10 and also for Mockup patterns.\n            $.fn[plugin_name.replace(/^pat/, \"pattern\")] = $.fn[plugin_name];\n        }\n        log.debug(`Registered pattern ${name}`, pattern);\n        if (window.__patternslib_registry_initialized) {\n            // Once the first initialization has been done, do only scan for\n            // newly registered patterns.\n            registry.scan(document.body, [name]);\n            log.debug(`Re-scanned dom with newly registered pattern ${name}.`);\n        }\n        return true;\n    },\n};\n\nexport default registry;\n","/* Utilities for DOM traversal or navigation */\nimport events from \"./events\";\nimport logging from \"./logging\";\nimport create_uuid from \"./uuid\";\n\nconst logger = logging.getLogger(\"core dom\");\n\nconst DATA_PREFIX = \"__patternslib__data_prefix__\";\nconst DATA_STYLE_DISPLAY = \"__patternslib__style__display\";\n\nconst INPUT_SELECTOR = \"input, select, textarea, button\";\n\n/**\n * Wait for the document to be ready.\n *\n * @param {Function} fn - The function to call when the document is ready.\n */\nconst document_ready = (fn) => {\n    const event_id = create_uuid();\n\n    const _ready = () => {\n        if (document.readyState !== \"loading\") {\n            // Remove the event listener for this callback.\n            events.remove_event_listener(document, event_id);\n            // call on next available tick\n            setTimeout(fn, 1);\n        }\n    };\n\n    // Listen for the document to be ready and call _ready() when it is.\n    events.add_event_listener(document, \"readystatechange\", event_id, _ready);\n\n    // Also check the ready state immediately in case we missed the event.\n    _ready();\n};\n\n/**\n * Return an array of DOM nodes.\n *\n * @param {Node|NodeList|jQuery} nodes - The DOM node to start the search from.\n *\n * @returns {Array} - An array of DOM nodes.\n */\nconst toNodeArray = (nodes) => {\n    if (nodes.jquery || nodes instanceof NodeList) {\n        // jQuery or document.querySelectorAll\n        nodes = [...nodes];\n    } else if (nodes instanceof Array === false) {\n        nodes = [nodes];\n    }\n    return nodes;\n};\n\n/**\n * Like querySelectorAll but including the element where it starts from.\n * Returns an Array, not a NodeList\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst querySelectorAllAndMe = (el, selector) => {\n    if (!el || !el.querySelectorAll) {\n        return [];\n    }\n\n    const all = [...el.querySelectorAll(selector)];\n    if (el.matches(selector)) {\n        all.unshift(el); // start element should be first.\n    }\n    return all;\n};\n\n/**\n * Wrap a element with a wrapper element.\n *\n * The element to be wrapped will be moved into the wrapper element and the\n * wrapper element is placed just before the old element was.\n *\n * @param {Node} el - The DOM node to wrap.\n * @param {Node} wrapper - The wrapper element.\n */\nconst wrap = (el, wrapper) => {\n    // See: https://stackoverflow.com/a/13169465/1337474\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n};\n\n/**\n * Hides the element with ``display: none`` and stores the current display value.\n *\n * @param {Node} el - The DOM node to hide.\n */\nconst hide = (el) => {\n    if (el.style.display === \"none\") {\n        // Nothing to do.\n        return;\n    }\n    if (el.style.display) {\n        el[DATA_STYLE_DISPLAY] = el.style.display;\n    }\n    el.style.display = \"none\";\n};\n\n/**\n * Shows element by removing ``display: none`` and restoring the display value\n * to whatever it was before.\n *\n * @param {Node} el - The DOM node to show.\n */\nconst show = (el) => {\n    const val = el[DATA_STYLE_DISPLAY] || null;\n    el.style.display = val;\n    delete el[DATA_STYLE_DISPLAY];\n};\n\n/**\n * Test, if a element is visible or not.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is visible.\n */\nconst is_visible = (el) => {\n    // Check, if element is visible in DOM.\n    // https://stackoverflow.com/a/19808107/1337474\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\n\n/**\n * Test, if a element is a input-type element.\n *\n * This is taken from Sizzle/jQuery at:\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L139\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L1773\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_input = (el) => {\n    const re_input = /^(?:input|select|textarea|button)$/i;\n    return re_input.test(el.nodeName);\n};\n\n/**\n * Test, if a element is a button-like input type.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_button = (el) => {\n    return el.matches(`\n        button,\n        input[type=image],\n        input[type=button],\n        input[type=reset],\n        input[type=submit]\n    `);\n};\n\n\n\n/**\n * Return all direct parents of ``el`` matching ``selector``.\n * This matches against all parents but not the element itself.\n * The order of elements is from the search starting point up to higher\n * DOM levels.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - CSS selector to match against.\n * @returns {Array} - List of matching DOM nodes.\n */\nconst find_parents = (el, selector) => {\n    const ret = [];\n    let parent = el;\n    while (parent) {\n        parent = parent.parentNode?.closest?.(selector);\n        if (parent) ret.push(parent);\n    }\n    return ret;\n};\n\n/**\n * Find an element in the whole DOM tree if the selector is an ID selector,\n * otherwise use the given element as the starting point.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - The CSS selector to search for.\n *\n * @returns {NodeList} - The DOM nodes found.\n *\n */\nconst find_scoped = (el, selector) => {\n    // If the selector starts with an object id do a global search,\n    // otherwise do a local search.\n    return (selector.indexOf(\"#\") === 0 ? document : el).querySelectorAll(selector);\n};\n\n/**\n * Return all HTMLElement parents of el, starting from the direct parent of el.\n * The document itself is excluded because it's not a real DOM node.\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst get_parents = (el) => {\n    // Return all HTMLElement parents of el, starting from the direct parent of el.\n    const parents = [];\n    let parent = el?.parentNode;\n    while (parent) {\n        parents.push(parent);\n        parent = parent?.parentNode;\n        parent = parent instanceof HTMLElement ? parent : null;\n    }\n    return parents;\n};\n\n/**\n * Return the value of the first attribute found in the list of parents.\n *\n * @param {Node} el - The DOM element to start the acquisition search for the given attribute.\n * @param {string} attribute - Name of the attribute to search for.\n * @param {Boolean} include_empty - Also return empty values.\n * @param {Boolean} include_all - Return a list of attribute values found in all parents.\n *\n * @returns {*} - Returns the value of the searched attribute or a list of all attributes.\n */\nconst acquire_attribute = (\n    el,\n    attribute,\n    include_empty = false,\n    include_all = false\n) => {\n    let _el = el;\n    const ret = []; // array for ``include_all`` mode.\n    while (_el) {\n        const val = _el.getAttribute(attribute);\n        if (val || (include_empty && val === \"\")) {\n            if (!include_all) {\n                return val;\n            }\n            ret.push(val);\n        }\n        _el = _el.parentElement;\n    }\n    if (include_all) {\n        return ret;\n    }\n};\n\n/**\n * Return a DocumentFragment from a given string.\n *\n * @param {String} string - The HTML structure as a string.\n *\n * @returns {DocumentFragment} - The DOM nodes as a DocumentFragment.\n */\nconst create_from_string = (string) => {\n    // See: https://davidwalsh.name/convert-html-stings-dom-nodes\n    return document.createRange().createContextualFragment(string.trim());\n};\n\n/**\n * Return a CSS property value for a given DOM node.\n * For length-values, relative values are converted to pixels.\n * Optionally parse as pixels, if applicable.\n *\n * Note: The element must be attached to the body to make CSS caluclations work.\n *\n * @param {Node} el - DOM node.\n * @param {String} property - CSS property to query on DOM node.\n * @param {Boolean} [as_pixels=false] - Convert value to pixels, if applicable.\n * @param {Boolean} [as_float=false] - Convert value to float, if applicable.\n *\n * @returns {(String|Number)} - The CSS value to return.\n */\nfunction get_css_value(el, property, as_pixels = false, as_float = false) {\n    let value = window.getComputedStyle(el).getPropertyValue(property);\n    if (as_pixels || as_float) {\n        value = parseFloat(value) || 0.0;\n    }\n    if (as_pixels && !as_float) {\n        value = parseInt(Math.round(value), 10);\n    }\n    return value;\n}\n\n/**\n * Find a scrollable element up in the DOM tree.\n *\n * Note: Setting the ``overflow`` shorthand property also sets the individual overflow-y and overflow-y properties.\n *\n * @param {Node} el - The DOM element to start the search on.\n * @param {String} [direction=] - Not given: Search for any scrollable element up in the DOM tree.\n *                                ``x``: Search for a horizontally scrollable element.\n *                                ``y``: Search for a vertically scrollable element.\n * @param {(Node|null)} [fallback=document.body] - Fallback, if no scroll container can be found.\n *                                                     The default is to use document.body.\n *\n * @returns {Node} - Return the first scrollable element.\n *                   If no other element could be found, document.body would be returned.\n */\nconst find_scroll_container = (el, direction, fallback = document.body) => {\n    while (el && el !== document.body) {\n        if (!direction || direction === \"y\") {\n            let overflow_y = get_css_value(el, \"overflow-y\");\n            if ([\"auto\", \"scroll\"].includes(overflow_y)) {\n                return el;\n            }\n        }\n        if (!direction || direction === \"x\") {\n            let overflow_x = get_css_value(el, \"overflow-x\");\n            if ([\"auto\", \"scroll\"].includes(overflow_x)) {\n                return el;\n            }\n        }\n        el = el.parentElement;\n    }\n    return fallback;\n};\n\n/**\n * Get the horizontal scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The horizontal scroll position.\n */\nconst get_scroll_x = (scroll_reference) => {\n    // scroll_listener == window: window.scrollX\n    // scroll_listener == html: html.scrollLeft == window.scrollX\n    // scroll_listener == DOM node: node.scrollLeft\n    return typeof scroll_reference.scrollLeft !== \"undefined\"\n        ? scroll_reference.scrollLeft\n        : scroll_reference.scrollX;\n};\n\n/**\n * Get the vertical scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The vertical scroll position.\n */\nconst get_scroll_y = (scroll_reference) => {\n    // scroll_listener == window: window.scrollY\n    // scroll_listener == html: html.scrollTop == window.scrollY\n    // scroll_listener == DOM node: node.scrollTop\n    return typeof scroll_reference.scrollTop !== \"undefined\"\n        ? scroll_reference.scrollTop\n        : scroll_reference.scrollY;\n};\n\n/**\n * Get the elements position relative to another element.\n *\n * @param {Node} el - The DOM element to get the position for.\n * @param {Node} [reference_el=document.body] - The DOM element to get the position relative to.\n *\n * @returns {{top: number, left: number}} - The position of the element relative to the other element.\n */\nconst get_relative_position = (el, reference_el = document.body) => {\n    // Get the reference element to which against we calculate\n    // the relative position of the target.\n    // In case of a scroll container of window, we do not have\n    // getBoundingClientRect method, so get the body instead.\n    if (reference_el === window) {\n        reference_el = document.body;\n    }\n\n    // Calculate absolute [¹] position difference between\n    // scroll_container and scroll_target.\n    // Substract the container's border from the scrolling\n    // value, as this one isn't respected by\n    // getBoundingClientRect [²] and would lead to covered\n    // items [³].\n    // ¹) so that it doesn't make a difference, if the element\n    // is below or above the scrolling container. We just need\n    // to know the absolute difference.\n    // ²) Calculations are based from the viewport.\n    // ³) See:\n    //      https://docs.microsoft.com/en-us/previous-versions//hh781509(v=vs.85)\n    //      https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    const left = Math.abs(\n        el.getBoundingClientRect().left +\n            reference_el.scrollLeft -\n            reference_el.getBoundingClientRect().left -\n            dom.get_css_value(reference_el, \"border-left-width\", true)\n    );\n    const top = Math.abs(\n        el.getBoundingClientRect().top +\n            reference_el.scrollTop -\n            reference_el.getBoundingClientRect().top -\n            dom.get_css_value(reference_el, \"border-top-width\", true)\n    );\n\n    return { top, left };\n};\n\n/**\n * Scroll to a given element.\n * The element will be scrolled to the top of the scroll container.\n *\n * @param {Node} el - The element which should be scrolled to.\n * @param {Node} scroll_container - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n * @param {string} [direction=\"top\"] - The direction to scroll to. Can be either \"top\", \"left\" or \"both\".\n */\nconst scroll_to_element = (el, scroll_container, offset = 0, direction = \"top\") => {\n    // Get the position of the element relative to the scroll container.\n    const position = get_relative_position(el, scroll_container);\n\n    const options = { behavior: \"auto\" };\n    if (direction === \"top\" || direction === \"both\") {\n        options.top = position.top - offset;\n    }\n    if (direction === \"left\" || direction === \"both\") {\n        options.left = position.left - offset;\n    }\n\n    // Scroll to the target position.\n    scroll_container.scrollTo(options);\n};\n\n/**\n * Scroll to the top of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_top = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    scroll_container.scrollTo({ top: 0 - offset, behavior: \"auto\" });\n};\n\n/**\n * Scroll to the bottom of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_bottom = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    //\n    const top = (scroll_container === window ? document.body : scroll_container)\n        .scrollHeight;\n    scroll_container.scrollTo({ top: top - offset, behavior: \"auto\" });\n};\n\n/**\n * Get data stored directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node from which we want to retrieve the data.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param default_value {Any} - Optional default value.\n * @returns {Any} - The value which is stored on the DOM node.\n */\nconst get_data = (el, name, default_value) => {\n    return el[`${DATA_PREFIX}${name}`] || default_value;\n};\n\n/**\n * Set and store data directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to store the data on.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param value {Any} - The value we want to store on the DOM node.\n */\nconst set_data = (el, name, value) => {\n    el[`${DATA_PREFIX}${name}`] = value;\n};\n\n/**\n * Delete a variable from the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to delete the variable from.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n */\nconst delete_data = (el, name) => {\n    delete el[`${DATA_PREFIX}${name}`];\n};\n\n/**\n * Simple template engine, based on JS template literal\n *\n * NOTE: This uses eval and would break if Content-Security-Policy does not\n *       allow 'unsafe-eval'.\n *       Because of this CSR problem the use of this method is not recommended.\n *\n * Please note: You cannot pass a template literal as template_string.\n * JavaScript itself would try to expand it and would fail.\n *\n * See: https://stackoverflow.com/a/37217166/1337474\n *\n * @param {String} template_string - The template string as a JavaScript template literal.\n *                                   For each variable in the template you have to use ``this``.\n *                                   E.g. if you pass ``{message: \"ok\"}`` as template_variables, you can use it like so:\n *                                   `<h1>${this.message}</h1>`\n * @param {Object} template_variables - Object literal with all the variables which should be used in the template.\n *\n * @returns {String} - Returns the a string as template expanded with the template_variables.\n */\nconst template = (template_string, template_variables = {}) => {\n    logger.warn(\n        \"Using dom.template is not recommended due to a problem with Content-Security-Policy.\"\n    );\n    return new Function(\"return `\" + template_string + \"`;\").call(template_variables);\n};\n\n/**\n * Get the visible ratio of an element compared to container.\n * If no container is given, the viewport is used.\n *\n * Note: currently only vertical ratio is supported.\n *\n * @param {Node} el - The element to get the visible ratio from.\n * @param {Node} [container] - The container to compare the element to.\n * @returns {number} - The visible ratio of the element.\n *                    0 means the element is not visible.\n *                    1 means the element is fully visible.\n */\nconst get_visible_ratio = (el, container) => {\n    if (!el) {\n        return 0;\n    }\n\n    const rect = el.getBoundingClientRect();\n    const container_rect =\n        container !== window\n            ? container.getBoundingClientRect()\n            : {\n                  top: 0,\n                  bottom: window.innerHeight,\n              };\n\n    let visible_ratio = 0;\n    if (rect.top < container_rect.bottom && rect.bottom > container_rect.top) {\n        const rect_height = rect.bottom - rect.top;\n        const visible_height =\n            Math.min(rect.bottom, container_rect.bottom) -\n            Math.max(rect.top, container_rect.top);\n        visible_ratio = visible_height / rect_height;\n    }\n\n    return visible_ratio;\n};\n\n/**\n * Get an escaped CSS selector for a given id string.\n *\n * id selectors should - but don't have to - start with a letter.\n * If the id starts with a number or a dash, it should be escaped.\n * This method does that for you.\n *\n * Alse see:\n * - https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id\n * - https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape\n *\n * @param {String} id - The id to escape.\n *\n * @returns {String} - The escaped CSS selector.\n *\n * @example\n * escape_css_id_selector(\"#123\"); // returns \"#\\\\31 23\"\"\n * escape_css_id_selector(\"#-123\"); // returns \"#-\\\\31 23\"\n */\nconst escape_css_id = (id) => {\n    return `#${CSS.escape(id.split(\"#\")[1])}`;\n};\n\n/**\n * Set and get a universally unique id (uuid) for a DOM element.\n *\n * This method returns a uuid for the given element. On the first call it will\n * generate a uuid and store it on the element.\n *\n * @param {Node} el - The DOM node to get the uuid for.\n * @returns {String} - The uuid.\n */\nconst element_uuid = (el) => {\n    if (!get_data(el, \"uuid\", false)) {\n        set_data(el, \"uuid\", create_uuid());\n    }\n    return get_data(el, \"uuid\");\n};\n\n/**\n * Find a related form element.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @returns {Node} - The closest form element.\n *\n * @example\n * find_form(document.querySelector(\"input\"));\n */\nconst find_form = (el) => {\n    // Prefer input.form which allows for input outside form elements and fall\n    // back to search for a parent form.\n    const form =\n        el.closest(\".pat-subform\") || // Special Patternslib subform concept has precedence.\n        el.form ||\n        el.querySelector(INPUT_SELECTOR)?.form ||\n        el.closest(\"form\");\n    return form;\n};\n\n/**\n * Find any input type.\n */\nconst find_inputs = (el) => {\n    return querySelectorAllAndMe(el, INPUT_SELECTOR);\n};\n\nconst dom = {\n    document_ready: document_ready,\n    toNodeArray: toNodeArray,\n    querySelectorAllAndMe: querySelectorAllAndMe,\n    wrap: wrap,\n    hide: hide,\n    show: show,\n    find_inputs: find_inputs,\n    find_parents: find_parents,\n    find_scoped: find_scoped,\n    get_parents: get_parents,\n    acquire_attribute: acquire_attribute,\n    is_visible: is_visible,\n    is_input: is_input,\n    is_button: is_button,\n    create_from_string: create_from_string,\n    get_css_value: get_css_value,\n    find_scroll_container: find_scroll_container,\n    get_scroll_x: get_scroll_x,\n    get_scroll_y: get_scroll_y,\n    get_relative_position: get_relative_position,\n    scroll_to_element: scroll_to_element,\n    scroll_to_top: scroll_to_top,\n    scroll_to_bottom: scroll_to_bottom,\n    get_data: get_data,\n    set_data: set_data,\n    delete_data: delete_data,\n    template: template,\n    get_visible_ratio: get_visible_ratio,\n    escape_css_id: escape_css_id,\n    element_uuid: element_uuid,\n    find_form: find_form,\n};\n\nexport default dom;\n","import $ from \"jquery\";\n\nvar parser = {\n    getOptions($el, patternName, options) {\n        /* This is the Mockup parser. An alternative parser for Patternslib\n         * patterns.\n         *\n         * NOTE: Use of the Mockup parser is discouraged and is added here for\n         * legacy support for the Plone Mockup project.\n         *\n         * It parses a DOM element for pattern configuration options.\n         */\n        options = options || {};\n        // get options from parent element first, stop if element tag name is 'body'\n        if ($el.length !== 0 && !$.nodeName($el[0], \"body\")) {\n            options = this.getOptions($el.parent(), patternName, options);\n        }\n        // collect all options from element\n        let elOptions = {};\n        if ($el.length !== 0) {\n            elOptions = $el.data(\"pat-\" + patternName);\n            if (elOptions) {\n                // parse options if string\n                if (typeof elOptions === \"string\") {\n                    const tmpOptions = {};\n                    $.each(elOptions.split(\";\"), function (i, item) {\n                        item = item.split(\":\");\n                        item.reverse();\n                        let key = item.pop();\n                        key = key.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        item.reverse();\n                        let value = item.join(\":\");\n                        value = value.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        tmpOptions[key] = value;\n                    });\n                    elOptions = tmpOptions;\n                }\n            }\n        }\n        return $.extend(true, {}, options, elOptions);\n    },\n};\n\nexport default parser;\n","/**\n * A Base pattern for creating scoped patterns. It's similar to Backbone's\n * Model class. The advantage of this approach is that each instance of a\n * pattern has its own local scope (closure).\n *\n * A new instance is created for each DOM element on which a pattern applies.\n *\n * You can assign values, such as $el, to `this` for an instance and they\n * will remain unique to that instance.\n *\n * Older Patternslib patterns on the other hand have a single global scope for\n * all DOM elements.\n */\nimport $ from \"jquery\";\nimport Registry from \"./registry\";\nimport logging from \"./logging\";\nimport mockupParser from \"./mockup-parser\";\n\nconst log = logging.getLogger(\"Patternslib Base\");\n\nconst initBasePattern = function ($el, options, trigger) {\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    const name = this.prototype.name;\n    const plog = logging.getLogger(`pat.${name}`);\n    let pattern = $el.data(`pattern-${name}`);\n    if (pattern === undefined && Registry.patterns[name]) {\n        try {\n            // Immediately set the pattern instance to the temporary value\n            // ``initializing`` before the async Base constructor is setting\n            // the value later.\n            // This prevents re-init the pattern on this element on multiple\n            // initialization calls..\n            $el.data(`pattern-${name}`, \"initializing\");\n            options =\n                this.prototype.parser === \"mockup\"\n                    ? mockupParser.getOptions($el, name, options)\n                    : options;\n            pattern = new Registry.patterns[name]($el, options, trigger);\n        } catch (e) {\n            plog.error(`Failed while initializing ${name} pattern.`, e);\n        }\n    }\n    return pattern;\n};\n\nconst Base = async function ($el, options, trigger) {\n    if (($el?.jquery && $el.length === 0) || !$el) {\n        log.warn(\"No element given to pattern.\");\n        return;\n    }\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    this.$el = $el;\n    this.el = $el[0];\n    this.options = $.extend(true, {}, this.defaults || {}, options || {});\n\n    this.emit(\"pre-init\");\n\n    await this.init($el, options, trigger);\n\n    // Store pattern instance on element\n    this.$el.data(`pattern-${this.name}`, this);\n    this.el[`pattern-${this.name}`] = this;\n\n    this.emit(\"init\");\n};\n\nBase.prototype = {\n    constructor: Base,\n    on(eventName, eventCallback) {\n        this.$el.on(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    one(eventName, eventCallback) {\n        this.$el.one(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    emit(eventName, args) {\n        // args should be a list\n        if (args === undefined) {\n            args = [];\n        }\n        this.$el.trigger(`${eventName}.${this.name}.patterns`, args);\n    },\n};\n\nBase.extend = function (patternProps) {\n    /* Helper function to correctly set up the prototype chain for new patterns.\n     */\n    const parent = this;\n    let child;\n\n    // Check that the required configuration properties are given.\n    if (!patternProps) {\n        throw new Error(\n            \"Pattern configuration properties required when calling Base.extend\"\n        );\n    }\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (Object.hasOwnProperty.call(patternProps, \"constructor\")) {\n        child = patternProps.constructor;\n    } else {\n        child = function () {\n            parent.apply(this, arguments);\n        };\n    }\n\n    // Allow patterns to be extended indefinitely\n    child.extend = Base.extend;\n\n    // Static properties required by the Patternslib registry\n    child.init = initBasePattern;\n    child.jquery_plugin = true;\n    child.trigger = patternProps.trigger;\n    child.parser = patternProps?.parser || null;\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function () {\n        this.constructor = child;\n    };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate();\n\n    // Add pattern's configuration properties (instance properties) to the subclass,\n    $.extend(true, child.prototype, patternProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    // Register the pattern in the Patternslib registry.\n    if (!patternProps.name) {\n        log.warn(\"This pattern without a name attribute will not be registered!\");\n    } else if (!patternProps.trigger) {\n        log.warn(\n            `The pattern ${patternProps.name} does not have a trigger attribute, it will not be registered.`\n        );\n    } else if (patternProps.autoregister !== false) {\n        Registry.register(child, patternProps.name);\n    }\n    return child;\n};\n\nexport default Base;\n","import { BasePattern } from \"@patternslib/patternslib/src/core/basepattern\";\nimport Parser from \"@patternslib/patternslib/src/core/parser\";\nimport events from \"@patternslib/patternslib/src/core/events\";\nimport registry from \"@patternslib/patternslib/src/core/registry\";\n\nexport const parser = new Parser(\"code-editor\");\nparser.addArgument(\"language\", null); // programming language to use.\nparser.addArgument(\"linenumbers\", false);\nparser.addArgument(\"theme\", \"dark\"); // dark or light or any other theme variant.\n\n// CodeJar options\nparser.addArgument(\"tab\", \"    \"); // The tab-string. \"\\t\" for real tabs.\nparser.addArgument(\"indent-on\", \"{$\");\nparser.addArgument(\"spellcheck\", false);\nparser.addArgument(\"catch-tab\", true);\nparser.addArgument(\"preserve-ident\", true);\nparser.addArgument(\"add-closing\", true);\nparser.addArgument(\"history\", true);\n\nconst language_mapping = {\n    atom: \"xml\",\n    html: \"xml\",\n    plist: \"xml\",\n    rss: \"xml\",\n    svg: \"xml\",\n    wsf: \"xml\",\n    xhtml: \"xml\",\n    xjb: \"xml\",\n    xsd: \"xml\",\n    xsl: \"xml\",\n};\n\nclass Pattern extends BasePattern {\n    static name = \"code-editor\";\n    static trigger = \".pat-code-editor\";\n    static parser = parser;\n\n    async init() {\n        const CodeJar = (await import(\"codejar\")).CodeJar;\n        const hljs = (await import(\"highlight.js/lib/core\")).default;\n        let el = this.el;\n\n        // Set and load the theme.\n        let theme;\n        if (this.options.theme === \"light\") {\n            theme = \"stackoverflow-light\";\n        } else if (this.options.theme === \"dark\" || this.options.theme === \"okaidia\") {\n            theme = \"stackoverflow-dark\";\n        } else {\n            theme = this.options.theme;\n        }\n\n        // Need to await the style import, otherwise theme might not be applied.\n        await import(`highlight.js/styles/${theme}.css`);\n        if (window.__patternslib_import_styles) {\n            await import(\"./_code-editor.scss\");\n        }\n\n        // Custom hightlighting function, as of:\n        // https://github.com/antonmedv/codejar/blob/master/index.html\n        const highlight = (editor) => {\n            // highlight.js does not trim old tags,\n            // let's do it by this hack.\n            editor.textContent = editor.textContent;\n            hljs.highlightElement(editor);\n        };\n        let highlight_wrapper = highlight;\n\n        // Optional line numbers.\n        if (this.options.linenumbers) {\n            const linenumbers = (await import(\"codejar/linenumbers\")).withLineNumbers;\n            highlight_wrapper = linenumbers(highlight, {\n                class: `codejar-linenumbers ${theme}`,\n            });\n        }\n\n        // Import and register the language.\n        let language = [...el.classList].filter((it) => it.startsWith(\"language-\"))[0];\n        language = language ? language.replace(\"language-\", \"\") : this.options.language;\n        language = language || \"plaintext\";\n        const hljs_language = (\n            await import(\n                `highlight.js/lib/languages/${language_mapping[language] || language}`\n            )\n        ).default;\n        hljs.registerLanguage(language, hljs_language);\n\n        // Create a editor element in case of an input element.\n        if ([\"textarea\", \"input\"].includes(this.el.nodeName.toLowerCase())) {\n            const pre_el = document.createElement(\"pre\");\n            pre_el.innerHTML = `<code contenteditable></code>`;\n            el = pre_el.querySelector(\"code\");\n            el.textContent = this.el.value; // value is already unescaped.\n            this.el.parentNode.insertBefore(pre_el, this.el);\n            this.el.setAttribute(\"hidden\", \"\");\n        }\n\n        // Add some classes to the editor element.\n        el.classList.add(\n            \"code-editor\",\n            `theme-${this.options.theme}`,\n            `language-${language}`\n        );\n\n        // Allow spaces within quotes to be added as tab argument.\n        // Replace escaped tab character with real tab.\n        const tab = this.options.tab\n            .replace(/'/g, \"\") // Allow spaces within quotes\n            .replace(/\"/g, \"\")\n            .replace(/\\\\t/g, \"\\t\"); // Replace double escaped tab character\n\n        // Create the editor.\n        const config = {\n            tab: tab,\n            indentOn: new RegExp(this.options.indentOn),\n            spellcheck: this.options.spellcheck,\n            catchTab: this.options.catchTab,\n            preserveIdent: this.options.preserveIdent,\n            addClosing: this.options.addClosing,\n            history: this.options.history,\n        };\n        this.codeeditor = CodeJar(el, highlight_wrapper, config);\n\n        // Update the input element.\n        if (el !== this.el) {\n            // Update <textarea> or <input>, if one of these were the\n            // initializing elements.\n            this.codeeditor.onUpdate((code) => {\n                this.el.value = code.trim();\n                this.el.dispatchEvent(events.input_event());\n            });\n        }\n    }\n}\n\nregistry.register(Pattern);\n\nexport default Pattern;\nexport { Pattern };\n","/**\n * Get a universally unique id (uuid).\n *\n * @returns {String} - The uuid.\n */\nconst create_uuid = () => {\n    let uuid;\n    if (window.crypto.randomUUID) {\n        // Create a real UUID\n        // window.crypto.randomUUID does only exist in browsers with secure\n        // context.\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID\n        uuid = window.crypto.randomUUID();\n    } else {\n        // Create a sufficiently unique ID\n        const array = new Uint32Array(4);\n        uuid = window.crypto.getRandomValues(array).join(\"\");\n    }\n    return uuid;\n};\nexport default create_uuid;\n","// Polyfills for modern browsers\n\n// SubmitEvent.submitter polyfill for Safari < 15.4 and jsDOM\n// Original code: https://stackoverflow.com/a/61110260/1337474\n// Also see: https://caniuse.com/?search=submitter\n// NOTE: the `submitter` property is now widely available except for ancient browsers and jsDOM.\n!(function () {\n    if (window.SubmitEvent && \"submitter\" in window.SubmitEvent.prototype) {\n        // `submitter` attribute is already supported.\n        return;\n    }\n\n    let last_btn = null;\n    const submitable_buttons = `button, input[type=\"button\"], input[type=\"submit\"], input[type=\"image\"]`;\n    document.addEventListener(\n        \"click\",\n        function (e) {\n            if (!e.target.closest) return;\n            last_btn = e.target.closest(submitable_buttons);\n        },\n        true\n    );\n    document.addEventListener(\n        \"submit\",\n        function (e) {\n            if (\"submitter\" in e) return;\n            const canditates = [document.activeElement, last_btn];\n            last_btn = null;\n            for (const candidate of canditates) {\n                if (!candidate) continue;\n                if (!candidate.form) continue;\n                if (!candidate.matches(submitable_buttons)) continue;\n                e.submitter = candidate;\n                return;\n            }\n            e.submitter = e.target.querySelector(submitable_buttons);\n        },\n        true\n    );\n})();\n\n// Navigation polyfill for Firefox and Safari, as of 2024-01-04\n// NOTE: this is a very basic polyfill, it only supports firing a `navigate`\n// event on location change and even that without interception support, etc.\n!(function () {\n    if (window.navigation == undefined) {\n\n        class NavigateEvent extends CustomEvent {\n            constructor() {\n                super(\"navigate\");\n                this.destination = { url: undefined };\n            }\n        }\n\n        // Create a navigation object on the window\n        // We create a DOM element for the navigation object so that we can\n        // attach events on it.\n        window.navigation = document.createElement(\"div\");\n\n        const create_event = (args) => {\n            const event = new NavigateEvent();\n            event.destination.url = args[2];\n            return event;\n        };\n\n        // Patch pushState to trigger an `navigate` event on the navigation\n        // object when the URL changes.\n        const pushState = window.history.pushState;\n        window.history.pushState = function () {\n            pushState.apply(window.history, arguments);\n            window.navigation.dispatchEvent(create_event(arguments));\n        };\n\n        // Same with replaceState\n        const replaceState = window.history.replaceState;\n        window.history.replaceState = function () {\n            replaceState.apply(window.history, arguments);\n            window.navigation.dispatchEvent(create_event(arguments));\n        };\n    }\n})();\n","import Base from \"../../core/base\";\nimport Parser from \"../../core/parser\";\nimport dom from \"../../core/dom\";\nimport logging from \"../../core/logging\";\nimport utils from \"../../core/utils\";\n\n// Lazy loading modules.\nlet Moment;\n\nconst log = logging.getLogger(\"pat-display-time\");\n\nexport const parser = new Parser(\"display-time\");\n// input datetime options\nparser.add_argument(\"format\", \"\");\nparser.add_argument(\"locale\", null);\nparser.add_argument(\"strict\", false);\n// output options\nparser.add_argument(\"from-now\", false);\nparser.add_argument(\"no-suffix\", false);\nparser.add_argument(\"output-format\", null);\n\nexport default Base.extend({\n    name: \"display-time\",\n    trigger: \".pat-display-time\",\n\n    async init() {\n        Moment = (await import(\"moment\")).default;\n\n        this.options = parser.parse(this.el, this.options);\n\n        let lang = this.options.locale || dom.acquire_attribute(this.el, \"lang\") || \"en\";\n        // we don't support any country-specific language variants, always use first 2 letters\n        lang = lang.substr(0, 2).toLowerCase();\n        try {\n            await import(`moment/locale/${lang}.js`);\n            Moment.locale(lang);\n            this.lang = lang;\n        } catch {\n            Moment.locale(\"en\");\n            this.lang = \"en\";\n        }\n        log.debug(`Moment.js language used: ${lang}.`);\n        this.format();\n    },\n\n    format() {\n        const datetime = this.el.getAttribute(\"datetime\");\n        let out = \"\";\n        if (datetime) {\n            const date = Moment(datetime, this.options.format, this.options.strict);\n            out = date;\n            if (this.options.fromNow === true) {\n                if (utils.is_iso_date(datetime)) {\n                    // date-only case.\n                    const rtf = new Intl.RelativeTimeFormat(this.lang, {\n                        numeric: \"auto\",\n                    });\n                    const date_diff = utils.date_diff(date.toDate(), new Date());\n                    out = date.calendar(null, {\n                        // when the date is closer, specify custom values\n                        lastWeek: `[${rtf.format(date_diff, \"day\")}]`, // translates to \"x days ago\"\n                        lastDay: `[${rtf.format(-1, \"day\")}]`, // translates to \"yesterday\"\n                        sameDay: `[${rtf.format(0, \"day\")}]`, // translates to \"today\"\n                        nextDay: `[${rtf.format(1, \"day\")}]`, // translates to \"tomorrow\"\n                        nextWeek: \"dddd\", // translates to week day name\n                        // otherwise, just use Intl.RelativeTimeFormat.\n                        sameElse: () => {\n                            return `[${rtf.format(date_diff, \"day\")}]`;\n                        },\n                    });\n                } else {\n                    // datetime case.\n                    out = date.fromNow(this.options.noSuffix);\n                }\n            } else if (this.options.outputFormat) {\n                out = date.format(this.options.outputFormat);\n            }\n        }\n        this.el.textContent = out;\n    },\n});\n","import Base from \"../../core/base\";\nimport events from \"../../core/events\";\nimport utils from \"../../core/utils\";\n\nexport default Base.extend({\n    name: \"close-panel\",\n    trigger: \".close-panel\",\n\n    init() {\n        // Close panel support for dialog panels\n        // Other modals are handled in pat-modal.\n        const dialog_panel = this.el.closest(\"dialog\");\n        if (dialog_panel) {\n            events.add_event_listener(\n                dialog_panel,\n                \"close-panel\",\n                \"close-panel--dialog\",\n                () => {\n                    dialog_panel.close();\n                }\n            );\n        }\n\n        this.el.addEventListener(\"click\", async (e) => {\n            await utils.timeout(0); // Wait for other patterns, like pat-validation.\n\n            if (\n                e.target.matches(\":not([formnovalidate])\") &&\n                e.target.matches(\"[type=submit], button:not([type=button])\") &&\n                this.el.closest(\"form\")?.checkValidity() === false\n            ) {\n                // Prevent closing an invalid form when submitting.\n                return;\n            }\n\n            this.el.dispatchEvent(\n                new Event(\"close-panel\", { bubbles: true, cancelable: true })\n            );\n        });\n    },\n});\n","import $ from \"jquery\";\nimport { BasePattern } from \"../../core/basepattern\";\nimport logging from \"../../core/logging\";\nimport Parser from \"../../core/parser\";\nimport events from \"../../core/events\";\nimport registry from \"../../core/registry\";\nimport utils from \"../../core/utils\";\n\n// Initialize close-panel functionality.\nimport \"../close-panel/close-panel\";\n\nconst log = logging.getLogger(\"pat-tooltip\");\n\nexport const parser = new Parser(\"tooltip\");\nconst all_positions = [\n    \"tl\",\n    \"tm\",\n    \"tr\",\n    \"rt\",\n    \"rm\",\n    \"rb\",\n    \"br\",\n    \"bm\",\n    \"bl\",\n    \"lb\",\n    \"lm\",\n    \"lt\",\n];\nparser.addArgument(\"position-list\", [], all_positions, true);\nparser.addArgument(\"position-policy\", \"auto\", [\"auto\", \"force\"]);\nparser.addArgument(\"trigger\", \"click\", [\"click\", \"hover\", \"none\"]);\nparser.addArgument(\"source\", \"title\", [\"ajax\", \"content\", \"title\"]);\nparser.addArgument(\"ajax-data-type\", \"html\", [\"html\", \"markdown\"]);\nparser.addArgument(\"closing\", \"auto\", [\"auto\", \"sticky\", \"close-button\"]);\nparser.addArgument(\"delay\");\nparser.addArgument(\"mark-inactive\", true);\nparser.addArgument(\"class\");\nparser.addArgument(\"target\", \"body\");\nparser.addArgument(\"arrow-padding\", null);\nparser.addArgument(\"url\", null);\n\n// Tippy Lifecycle-hooks\n// See: https://tippyjs.bootcss.com/lifecycle-hooks/\n// onCreate\n// onTrigger\n// onShow\n// onMount\n// onShown\n// onUntrigger\n// onHide\n// onHidden\n//\n// onBeforeUpdate\n// onAfterUpdate\n// onDestroy\n\nclass Pattern extends BasePattern {\n    static name = \"tooltip\";\n    static trigger = \".pat-tooltip, .pat-tooltip-ng\";\n    static parser = parser;\n\n    tippy = null;\n\n    active_class = \"tooltip-active-hover\";\n    inactive_class = \"tooltip-inactive\";\n\n    async init() {\n        const el = this.el;\n\n        if (window.__patternslib_import_styles) {\n            import(\"tippy.js/dist/tippy.css\");\n        }\n        const Tippy = (await import(\"tippy.js\")).default;\n        this.tippy_options = this.parseOptionsForTippy(this.options);\n\n        const defaultProps = {\n            animation: false,\n            arrow: true,\n            //'delay': [0, 1800],\n            //'duration': [325, 275],\n            hideOnClick: this.options.closing === \"close-button\" ? false : true,\n            ignoreAttributes: true,\n            interactive: true,\n            onHide: this._onHide.bind(this),\n            onShow: this._onShow.bind(this),\n            trigger: \"click\",\n        };\n\n        Tippy.setDefaultProps(defaultProps);\n        this.tippy = new Tippy(el, this.tippy_options);\n\n        if (this.options.source === \"title\") {\n            // Remove ``title`` attribute when source is set to ``title`` to\n            // disable the browser's built-in tooltip feature\n            el.removeAttribute(\"title\");\n        }\n\n        if (this.options.trigger === \"click\" && this.options.source === \"ajax\") {\n            // prevent default action for \"click\" and \"mouseenter click\"\n            events.add_event_listener(\n                el,\n                \"click\",\n                \"pat-tooltip--click-prevent-default\",\n                (event) => {\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n            );\n        }\n\n        if (this.options.trigger === \"click\") {\n            this.active_class = \"tooltip-active-click\";\n        }\n        if (this.options.markInactive) {\n            // Initially mark as inactive\n            el.classList.add(this.inactive_class);\n        }\n    }\n\n    show() {\n        // Show this tooltip\n        this.tippy.show();\n    }\n\n    async hide() {\n        // Hide this tooltip\n        await utils.timeout(1); // wait a tick for event being processed by other handlers.\n        this.tippy.hide();\n    }\n\n    destroy() {\n        // Remove this tooltip\n        super.destroy(); // Unregister\n        this.tippy.destroy();\n    }\n\n    parseOptionsForTippy(opts) {\n        const placement = (pos) => {\n            // note that Cornelis needs the positioning to be the placement of the thingy on the bubble\n            // tippy though refers to positioning as the placement of the bubble relatively to the reference element\n            // so we invert the meaning below. It's intentional.\n            const primary = (pos0) =>\n                ({\n                    t: \"bottom\",\n                    r: \"left\",\n                    b: \"top\",\n                    l: \"right\",\n                }[pos0]);\n\n            const secondary = (pos1) =>\n                ({\n                    l: \"-start\",\n                    r: \"-end\",\n                    m: \"\",\n                    t: \"-start\",\n                    b: \"-end\",\n                }[pos1]);\n\n            return `${primary(pos[0])}${secondary(pos[1])}`;\n        };\n\n        const tippy_options = { popperOptions: { modifiers: [] } };\n\n        if (opts.arrowPadding !== null) {\n            tippy_options.popperOptions.modifiers.push({\n                name: \"arrow\",\n                options: {\n                    padding: parseInt(opts.arrowPadding, 10),\n                },\n            });\n        }\n\n        const parsers = {\n            position: () => {\n                if (!opts.position?.list?.length) {\n                    return;\n                }\n                tippy_options.placement = placement(opts.position.list[0]); // main position\n\n                const flip_options = {\n                    name: \"flip\",\n                    enabled: true,\n                };\n\n                if (opts.position.policy === \"force\") {\n                    flip_options.enabled = false;\n                } else if (opts.position.length > 1) {\n                    const fallbacks = opts.position.list.slice(1).map(placement);\n                    flip_options.fallbackPlacements = fallbacks;\n                }\n\n                tippy_options.popperOptions.modifiers.push(flip_options);\n            },\n\n            trigger() {\n                if (opts.trigger === \"hover\") {\n                    tippy_options.trigger = \"mouseenter focus\";\n                } else if (opts.trigger === \"none\") {\n                    tippy_options.trigger = \"manual\";\n                    tippy_options.hideOnClick = false;\n                }\n            },\n\n            source: () => {\n                let content;\n                if (opts.source === \"title\") {\n                    // Tooltip content from title attribute\n                    content = this.el.getAttribute(\"title\");\n                } else if (opts.source === \"content\") {\n                    // Tooltip content from trigger childs.\n                    content = this.el.innerHTML;\n                    tippy_options.allowHTML = true;\n                } else if (opts.source === \"ajax\") {\n                    // Tooltiop content from AJAX request.\n                    content = document.createElement(\"progress\");\n                    tippy_options.allowHTML = true;\n                }\n                tippy_options.content = content;\n            },\n\n            delay() {\n                if (opts.delay) {\n                    tippy_options.delay = [utils.parseTime(opts.delay), 0];\n                }\n            },\n\n            target: () => {\n                if (!opts.target) {\n                    return;\n                }\n                if (opts.target === \"parent\") {\n                    tippy_options.appendTo = \"parent\";\n                } else if (opts.target === \"body\") {\n                    tippy_options.appendTo = document.body;\n                } else {\n                    tippy_options.appendTo = document.querySelector(opts.target);\n                }\n            },\n        };\n\n        for (let arg in opts) {\n            switch (arg) {\n                case \"ajax-data-type\":\n                    arg = \"ajaxDataType\";\n                    break;\n                case \"mark-inactive\":\n                    arg = \"markInactive\";\n                    break;\n            }\n            parsers[arg] && parsers[arg](arg);\n        }\n\n        return tippy_options;\n    }\n\n    _initialize_content() {\n        // Initialize any other patterns.\n        registry.scan(this.tippy.popper);\n    }\n\n    async _onShow() {\n        const tippy_classes = [];\n\n        // Group DOM manipulations\n\n        if (this.options.class) {\n            tippy_classes.push(...this.options.class.split(\" \"));\n        }\n\n        // Add a generic non-tippy related class to identify the tooltip container\n        tippy_classes.push(\"tooltip-container\");\n\n        if (this.options.closing === \"close-button\") {\n            // First, remove previously automatically added close buttons.\n            // Otherwise we would end up adding another close button with every\n            // click on it.\n            for (const close_button of this.tippy.popper.querySelectorAll(\n                \".pat-tooltip--close-button\"\n            )) {\n                close_button.remove();\n            }\n\n            const close_button = document.createElement(\"button\");\n            close_button.setAttribute(\"class\", \"close-panel pat-tooltip--close-button\");\n            const content = this.tippy.popper.querySelector(\".tippy-content\");\n            content.parentNode.insertBefore(close_button, content);\n        }\n\n        // Store reference to method for closing panels on the tooltip element instance.\n        events.add_event_listener(\n            this.tippy.popper,\n            \"close-panel\",\n            \"pat-tooltip--close-panel\",\n            () => this.hide()\n        );\n\n        this.tippy.popper.classList.add(...tippy_classes);\n\n        if (this.options.markInactive) {\n            this.el.classList.remove(this.inactive_class);\n            this.el.classList.add(this.active_class);\n        }\n\n        if (this.options.closing !== \"auto\" && this.options.trigger === \"hover\") {\n            // no auto-close when hovering when closing mode is \"sticky\" or \"close-button\".\n            this.tippy.setProps({ trigger: \"click\" });\n        }\n\n        if (this.options.source === \"ajax\") {\n            await this._get_content();\n        }\n\n        // Notify parent patterns about injected content.\n        // Do not call pat-inject's handler, because all necessary\n        // initialization after injection is done here.\n        $(this.tippy.popper).trigger(\"patterns-injected\", [\n            { skipPatInjectHandler: true },\n            this.el,\n            this.tippy.popper,\n        ]);\n\n        this._initialize_content();\n    }\n\n    _onHide() {\n        if (this.options.markInactive) {\n            this.el.classList.remove(this.active_class);\n            this.el.classList.add(this.inactive_class);\n        }\n\n        if (this.options.closing !== \"auto\" && this.options.trigger === \"hover\") {\n            // re-set hover behavior\n            this.tippy.setProps({ trigger: \"mouseenter focus\" });\n        }\n\n        if (this.options.source === \"ajax\") {\n            this.tippy.setContent(document.createElement(\"progress\"));\n        }\n    }\n\n    async _get_content(url = this.options.url) {\n        let selector;\n        ({ url, selector } = this.get_url_parts(url || this.el.getAttribute(\"href\")));\n        let content;\n        if (url) {\n            // Tooltip from remote page.\n            const handler = this.data_type_handlers[this.options.ajaxDataType];\n            try {\n                // TODO: use pat-inject, once it supports async\n                const response = await fetch(url, {\n                    headers: {\n                        Accept: \"text/html,application/xhtml+xml,application/xml\",\n                    },\n                });\n                const text = await response.text();\n                content = await handler(text, url, selector);\n            } catch {\n                log.error(\"Error on ajax request. ${e}\");\n            }\n        } else if (selector) {\n            // Tooltip content from current DOM tree.\n            content = document.querySelector(selector);\n            content = content?.innerHTML || undefined;\n        }\n        if (content) {\n            this.tippy.setContent(content);\n            await utils.timeout(1); // Wait a tick before forceUpdate. Might fail due to unset popperInstance.\n            this.tippy.popperInstance.forceUpdate(); // re-position tippy after content is known.\n        }\n    }\n\n    async get_content(url = this.options.url) {\n        // API method: _get_content + _initialize_content\n        await this._get_content(url);\n        this._initialize_content();\n    }\n\n    get_url_parts(href) {\n        // Return the URL and a CSS ID selector.\n        let url, selector, query;\n        if (!href) {\n            return { url, selector };\n        }\n        [url, selector] = href.split(\"#\");\n        if (selector) {\n            selector = `#${selector}`;\n            [selector, query] = selector.split(\"?\");\n        }\n        if (query) {\n            url = `${url}?${query}`;\n        }\n        return { url, selector };\n    }\n\n    static data_type_handlers = {\n        html(text, url, selector) {\n            let tmp = document.createElement(\"div\");\n            tmp.innerHTML = text;\n            if (selector) {\n                tmp = tmp.querySelector(selector);\n            }\n            return tmp?.innerHTML || \"\";\n        },\n\n        async markdown(text, url, selector) {\n            const Markdown = registry.patterns.markdown;\n            if (!Markdown) {\n                return text;\n            }\n\n            const instance = new Markdown($(\"<div/>\"));\n            await events.await_pattern_init(instance);\n\n            const cfg = { url };\n            if (selector) {\n                cfg.source = selector;\n            }\n\n            const ret = await instance.renderForInjection(cfg, text);\n            return ret[0];\n        },\n    };\n\n    static register_type_handler(type, handler) {\n        Pattern.data_type_handlers[type] = handler;\n    }\n\n    constructor(...args) {\n        super(...args);\n\n        this.register_type_handler = this.constructor.register_type_handler;\n        this.data_type_handlers = this.constructor.data_type_handlers;\n    }\n}\n\nregistry.register(Pattern);\nexport default Pattern;\nexport { Pattern };\n","/**\n * Patterns store - store pattern state locally in the browser\n *\n * Copyright 2008-2012 Simplon B.V.\n * Copyright 2011 Humberto Sermeño\n * Copyright 2011 Florian Friesdorf\n */\nimport logging from \"./logging\";\n\nconst log = logging.getLogger(\"Patternslib Store\");\n\nfunction Storage(backend, prefix) {\n    this.prefix = prefix;\n    this.backend = backend;\n}\n\nStorage.prototype._key = function Storage_key(name) {\n    return this.prefix + \":\" + name;\n};\n\nStorage.prototype._allKeys = function Storage_allKeys() {\n    var keys = [],\n        prefix = this.prefix + \":\",\n        prefix_length = prefix.length,\n        key,\n        i;\n\n    for (i = 0; i < this.backend.length; i++) {\n        key = this.backend.key(i);\n        if (key.slice(0, prefix_length) === prefix) keys.push(key);\n    }\n    return keys;\n};\n\nStorage.prototype.get = function Storage_get(name) {\n    var key = this._key(name),\n        value = this.backend.getItem(key);\n    if (value !== null) {\n        try {\n            value = JSON.parse(value);\n        } catch {\n            log.warn(`Cannot parse storage value for key ${key}`);\n            return;\n        }\n    }\n    return value;\n};\n\nStorage.prototype.set = function Storage_set(name, value) {\n    var key = this._key(name);\n    return this.backend.setItem(key, JSON.stringify(value));\n};\n\nStorage.prototype.remove = function Storage_remove(name) {\n    var key = this._key(name);\n    return this.backend.removeItem(key);\n};\n\nStorage.prototype.clear = function Storage_clear() {\n    var keys = this._allKeys();\n    for (var i = 0; i < keys.length; i++) this.backend.removeItem(keys[i]);\n};\n\nStorage.prototype.all = function Storage_all() {\n    var keys = this._allKeys(),\n        prefix_length = this.prefix.length + 1,\n        lk,\n        data = {};\n\n    for (var i = 0; i < keys.length; i++) {\n        lk = keys[i].slice(prefix_length);\n        data[lk] = JSON.parse(this.backend.getItem(keys[i]));\n    }\n    return data;\n};\n\nfunction ValueStorage(store, name) {\n    this.store = store;\n    this.name = name;\n}\n\nValueStorage.prototype.get = function ValueStorage_get() {\n    return this.store.get(this.name);\n};\n\nValueStorage.prototype.set = function ValueStorage_get(value) {\n    return this.store.set(this.name, value);\n};\n\nValueStorage.prototype.remove = function ValueStorage_remove() {\n    return this.store.remove(this.name);\n};\n\nvar store = {\n    supported: false,\n\n    local: function (name) {\n        return new Storage(window.localStorage, name);\n    },\n\n    session: function (name) {\n        return new Storage(window.sessionStorage, name);\n    },\n\n    ValueStorage: ValueStorage,\n\n    // Update storage options for a given element.\n    updateOptions: function store_updateOptions(trigger, options) {\n        if (options.store !== \"none\") {\n            if (!trigger.id) {\n                log.warn(\"state persistance requested, but element has no id\");\n                options.store = \"none\";\n            } else if (!store.supported) {\n                log.warn(\n                    \"state persistance requested, but browser does not support webstorage\"\n                );\n                options.store = \"none\";\n            }\n        }\n        return options;\n    },\n};\n\n// Perform the test separately since this may throw a SecurityError as\n// reported in #326\ntry {\n    store.supported = typeof window.sessionStorage !== \"undefined\";\n} catch {\n    // just ignore.\n}\n\nexport default store;\n","/* pat-date-picker  - Polyfill for input type=date */\nimport $ from \"jquery\";\nimport Base from \"../../core/base\";\nimport logging from \"../../core/logging\";\nimport Parser from \"../../core/parser\";\nimport dom from \"../../core/dom\";\nimport events from \"../../core/events\";\nimport store from \"../../core/store\";\nimport utils from \"../../core/utils\";\n\nconst log = logging.getLogger(\"date-picker\");\n\nexport const parser = new Parser(\"date-picker\");\nparser.addArgument(\"behavior\", \"styled\", [\"native\", \"styled\"]);\nparser.addArgument(\"week-numbers\", [], [\"show\", \"hide\"]);\nparser.addArgument(\"i18n\"); // URL pointing to JSON resource with i18n values\nparser.addArgument(\"first-day\", 0);\nparser.addArgument(\"after\");\nparser.addArgument(\"offset-days\", 0);\n\nparser.add_argument(\"output-format\", null);\nparser.add_argument(\"locale\", null);\n\nparser.addAlias(\"behaviour\", \"behavior\");\n\n/* JSON format for i18n\n * { \"previousMonth\": \"Previous Month\",\n *   \"nextMonth\"    : \"Next Month\",\n *   \"months\"       : [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\n *   \"weekdays\"     : [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\n *   \"weekdaysShort\": [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"]\n * } */\n\nexport const storage = store.session(\"pat-date-picker\");\n\n\nexport default Base.extend({\n    name: \"date-picker\",\n    trigger: \".pat-date-picker\",\n    parser: parser,\n    format: \"YYYY-MM-DD\",\n\n    async init() {\n        const el = this.el;\n        const disabled = this.el.disabled;\n\n        //TODO: make parser with options extend missing options.\n        //this.options = parser.parse(el, opts);\n        this.options = $.extend(parser.parse(el), this.options);\n\n        if (!disabled && this.options.after) {\n            // Set the date depending on another date which must be ``offset-days``\n            // BEFORE this date. Only set it, if the other date is AFTER this\n            // date.\n            const befores = document.querySelectorAll(this.options.after);\n            for (const b_el of befores) {\n                b_el.addEventListener(\"change\", (e) => {\n                    let b_date = e.target.value; // the \"before-date\"\n                    b_date = b_date ? new Date(b_date) : null;\n                    if (!b_date) {\n                        return;\n                    }\n                    let a_date = this.el.value; // the \"after-date\"\n                    a_date = a_date ? new Date(a_date) : null;\n                    if (!a_date || a_date < b_date) {\n                        const offset = this.options.offsetDays || 0;\n                        b_date.setDate(b_date.getDate() + offset);\n                        this.el.value = b_date.toISOString().substring(0, 10);\n                        this.dispatch_change_event();\n                    }\n                });\n            }\n        }\n\n        let display_el;\n        if (this.options.behavior === \"styled\") {\n            dom.hide(el); // hide input, but keep active (e.g. for validation)\n\n            display_el = document.createElement(\"time\");\n            display_el.setAttribute(\"class\", \"output-field\");\n            display_el.setAttribute(\"datetime\", el.value);\n            if (disabled) {\n                display_el.classList.add(\"disabled\");\n            }\n            el.insertAdjacentElement(\"beforebegin\", display_el);\n\n            // Disable click on label, as this invokes a click on the invisible\n            // input field which opens the calendar in Firefox and masks a\n            // click on display_el on Chrome.\n            const label = display_el.closest(\"label\");\n            if (label) {\n                events.add_event_listener(\n                    label,\n                    \"click\",\n                    \"pat-date-picker--label\",\n                    (e) => {\n                        e.preventDefault();\n                    }\n                );\n            }\n\n            let pat_display_time;\n            if (this.options.outputFormat) {\n                const PatDisplayTime = (await import(\"../display-time/display-time\")).default; // prettier-ignore\n                const display_time_config = { format: this.format };\n                if (this.options.outputFormat) {\n                    display_time_config[\"output-format\"] = this.options.outputFormat;\n                }\n                if (this.options.locale) {\n                    display_time_config.locale = this.options.locale;\n                }\n                pat_display_time = new PatDisplayTime(display_el, display_time_config);\n            } else if (this.el.value) {\n                display_el.textContent = el.value;\n            }\n\n            // Add the additional elements \"clear button\" and placeholder to\n            // the `<time>` element.\n            const _add_additional = () => {\n                this.add_clear_button(display_el);\n                if (!this.el.value && this.el.placeholder) {\n                    display_el.innerHTML = `<span class=\"placeholder\">${this.el.placeholder}</span>`;\n                }\n            };\n            if (pat_display_time) {\n                // Add the additional elements after display time has\n                // eventually cleared the contents or done any other changes.\n                $(display_el).on(\"init.display-time.patterns\", () => {\n                    _add_additional();\n                });\n            } else {\n                // If no `pat-display-time` was used, add immediately.\n                _add_additional();\n            }\n\n            this.el.addEventListener(\"change\", () => {\n                display_el.setAttribute(\"datetime\", this.el.value);\n                if (pat_display_time && this.el.value) {\n                    pat_display_time.format();\n                } else {\n                    //} else if (this.el.value) {\n                    display_el.textContent = this.el.value;\n                }\n                _add_additional();\n            });\n\n            if (disabled) {\n                // nothing else to do here...\n                return;\n            }\n        } else if (disabled) {\n            return;\n        } else if (utils.checkInputSupport(\"date\", \"invalid date\")) {\n            // behavior native with native support.\n            return;\n        } else if (el.getAttribute(\"type\") === \"date\") {\n            // behavior native but no native support.\n            // Fallback JS date picker with a text input field.\n            el.setAttribute(\"type\", \"text\");\n        }\n\n        if (window.__patternslib_import_styles) {\n            import(\"./_date-picker.scss\");\n        }\n        const Pikaday = (await import(\"pikaday\")).default;\n\n        const config = {\n            field: el,\n            trigger: display_el || el,\n            format: this.format,\n            firstDay: this.options.firstDay,\n            showWeekNumber: this.options.weekNumbers === \"show\",\n            onSelect: () => this.dispatch_change_event(),\n            onClose: () => {\n                if (this.options.behavior === \"styled\" && !this.el.value) {\n                    // blur the input field so that pat-validate can kick in when\n                    // nothing was selected.\n                    el.dispatchEvent(events.blur_event());\n                }\n            },\n        };\n\n        if (el.getAttribute(\"min\")) {\n            config.minDate = new Date(el.getAttribute(\"min\"));\n        }\n        if (el.getAttribute(\"max\")) {\n            config.maxDate = new Date(el.getAttribute(\"max\"));\n        }\n\n        if (this.options.i18n) {\n            let i18n = storage.get(this.options.i18n);\n            if (!i18n) {\n                try {\n                    const response = await fetch(this.options.i18n);\n                    i18n = await response.json();\n                    storage.set(this.options.i18n, i18n);\n                } catch {\n                    log.error(`date-picker could not load i18n for ${this.options.i18n}`);\n                }\n            }\n            if (i18n) {\n                config.i18n = i18n;\n            }\n        }\n        this.pikaday = new Pikaday(config);\n    },\n\n    add_clear_button(el_append_to) {\n        if (!this.el.disabled && !this.el.required && this.el.value) {\n            // Add clear button\n            const clear_button = document.createElement(\"span\");\n            clear_button.setAttribute(\"class\", \"cancel-button\");\n            clear_button.addEventListener(\"click\", (e) => {\n                e.stopPropagation();\n                this.el.value = null;\n                this.dispatch_change_event();\n            });\n            el_append_to.appendChild(clear_button);\n        }\n    },\n\n    dispatch_change_event() {\n        const event = new Event(\"change\", {\n            bubbles: true,\n            cancelable: true,\n        });\n        // Set ``firedBy` to prevent pikaday to call it's own handler and land\n        // in an infinite loop.\n        event.firedBy = this.pikaday;\n        this.el.dispatchEvent(event);\n\n        // Also trigger input-change\n        $(this.el).trigger(\"input-change\");\n        $(this.el.form).trigger(\"input-change\");\n    },\n});\n"],"names":["logger","logging","getLogger","parser","Parser","addArgument","addAlias","KEY_ERROR_EL","KEY_ERROR_MSG","Pattern","BasePattern","static","init","events","add_event_listener","this","el","e","input","inputs","debug","check_input","event","capture","initialize_inputs","$","on","setAttribute","querySelectorAll","disabled_elements","options","disableSelector","cnt","entries","debouncer","utils","debounce","delay","name","stop","disabled","set_error","msg","skip_event","validity_state","validity","submitter","hasAttribute","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valid","valueMissing","input_options","parse","equality","querySelector","value","message","attribute","not","after","before","date","datetime","msg_default_not_before","msg_default_not_after","not_after","not_after_el","not_before","not_before_el","is_iso_date_time","Date","document","undefined","isNaN","msg_attr","labels","textContent","replace","trim","remove_error","required","min","getAttribute","max","type","number","email","emit_update","preventDefault","stopPropagation","stopImmediatePropagation","set_error_message","JSON","stringify","setCustomValidity","all_of_group","filter","it","error_node","remove","checkValidity","removeAttribute","classList","length","some","validation_message","validationMessage","dom","create_from_string","error_template","firstChild","fieldset","closest","append","did_disable","formNoValidate","add","_input","registry","register","safeClone","clone","Array","prototype","forEach","callback","thisArg","T","k","TypeError","O","Object","len","arguments","kValue","call","singleBoundJQueryPlugin","pattern","method","each","pat","$el","charAt","apply","pluralBoundJQueryPlugin","$this","concat","isObject","obj","regexp_from_wildcard","wildcard","regexp","RegExp","isElementInViewport","partial","offset","rec","getBoundingClientRect","top","bottom","left","right","every","val","window","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","jqueryPlugin","escapeRegExp","str","extend","source","prop","i","hasOwnProperty","findLabel","$label","label","parentNode","nodeType","tagName","id","form","removeWildcardClass","targets","classes","ensureArray","indexOf","target","matcher","class_list","split","ok","test","join","hideOrShow","nodes","visible","pattern_name","toNodeArray","transitions","none","hide","show","fade","slide","duration","transition","effect","on_complete","trigger","action","t","easing","complete","addURLQueryParameter","fullURL","param","parts","toString","url","hash","newURL","removeDuplicateObjects","objs","comparator","v","reduce","list","next_obj","is_duplicate","keys","bind","push","mergeStack","stack","results","frame","frame_length","x","hasValue","checked","selectedIndex","parseTime","time","m","exec","Error","amount","parseFloat","Math","round","parseLength","reference_length","findRelatives","$relatives","$form","body","find","get_bounds","bounds","parseInt","y","width","height","checkInputSupport","invalid_value","support","createElement","checkCSSFeature","tag","supported","style","animation_frame","Promise","requestAnimationFrame","timeout","ms","resolve","setTimeout","func","timer","postpone","last_run","args","now","clearTimeout","isIE","documentMode","jqToNode","jquery","force_array","NodeList","isPrototypeOf","isArray","localized_isodate","day","getDate","padStart","month","getMonth","getFullYear","escape_html","html","appendChild","createTextNode","innerHTML","unescape_html","escaped_html","DOMParser","parseFromString","optional_time","is_iso_date","date_diff","date_1","date_2","utc_1","UTC","utc_2","floor","threshold_list","num_steps","thresholds","sort","is_option_truthy","option","includes","elementInViewport","console","warn","log","input_event","detail","CustomEvent","bubbles","cancelable","DependsHandler","default","handler","condition","error","set_state","getAllInputs","uuid","pattern_uuid","async","update_modal","enable","find_inputs","is_button","dispatchEvent","remove_event_listener","enabled","disable","state","evaluate","root","writer","Function","oThis","aArgs","slice","fToBind","fNOP","fBound","Level","DEBUG","INFO","WARN","ERROR","FATAL","ConsoleWriter","Logger","parent","_loggers","_parent","_enabled","_level","setWriter","w","output","log_name","level","messages","unshift","info","path","route","entry","shift","_getFlag","flag","context","setEnabled","isEnabled","setLevel","toUpperCase","getLevel","fatal","match","logconfig","location","search","api","getWriter","Base","el_date","el_time","__patternslib_import_styles","DatePicker","date_value","time_value","el_wrapper","html_btn_now","today","html_btn_clear","clear","addEventListener","update","isotime","date_options","behavior","format","weekNumbers","firstDay","isodate","insertBefore","Event","toISOString","substr","toTimeString","parser_group_options","parser_multiple","parser_inherit","constructor","create_uuid","update_event","one","event_name","event_callback","once","destroy","ArgumentParser","order","parameters","enum_values","enum_conflicts","groups","possible_groups","group_pattern","json_param_pattern","named_param_pattern","token_pattern","_camelCase","__","p1","alias","original","addGroupToSpec","spec","group","field","first_spec","first_name","dest","choices","multiple","addJSONArgument","default_value","_typeof","choice","_coerce","toLowerCase","num","_set","opts","part","_split","text","tokens","quoted","simple","_parseExtendedNotation","argstring","map","matches","arg","values","subopt","_parseShorthandNotation","parameter","sense","positional","_parse","sep","extended","_defaults","result","_cleanupOptions","group_options","inherit","$possible_config_providers","final_length","hasClass","parents","addBack","provider","data","attr","current_value","add_argument","xhrCount","a","get","_","off","onTriggerEvents","onClickSubmit","request","_request","cfg","seqNumber","inc","temp","clickedData","serialize","Boolean","headers","cache","browserCache","accept","Accept","is","formdata","FormData","key","removeData","ajax_deferred","done","status","jqxhr","fail","inject","cfgs","extractConfig","history","nextHref","nodeName","href","pushMarker","onTrigger","currentTarget","idleTrigger","_initIdleTrigger","processDelay","ajax","delayed_trigger","uuid_","still_there","_initAutoloadVisible","formaction","cfg_node","params","serializeArray","execute","submitSubform","$sub","assign","$context","urlparts","defaultSelector","elementIsDirty","askForConfirmation","should_confirm","_confirm","confirm","$target","confirmMessage","ensureTarget","createTarget","$created_target","verifySingleConfig","extractModifiers","listenForFormReset","verifyConfig","source_match","target_match","sourceMod","targetMod","targetPosition","loadingClass","selector","_performInjection","$sources","$title","wrapper","sources_string","img","content","source_nodes","childNodes","_inject","_update_history","_afterInjection","pushState","glue","title_el","$injected","idx","el_","origin","addClass","scroll","scroll_target","querySelectorAllAndMe","scroll_container","find_scroll_container","scroll_to_top","scroll_to_element","_onInjectSuccess","ev","responseText","sources$","callTypeHandler","dataType","idx1","perform_inject","_onInjectError","explanation","timestamp","error_page","error_page_fragment","URLSearchParams","error_page_url","error_page_response","fetch","removeClass","executingClass","error_zone","scan","statusText","removeAttr","do_close_panel","replaceWith","contentafter","contentbefore","element","elementafter","elementbefore","_sourcesFromHtml","sources","$html","_parseRawHtml","$source","_rebaseAttrs","object","video","_rebaseOptions","_rebaseURL","base","URL","lastIndexOf","_rebaseHTML","page","rebase_selector","patterns","pattern_parser","changed","config","opt","title","clean_html","children","timeout_id","observer","IntersectionObserver","isIntersecting","disconnect","threshold","margin","observe","onTimeout","unsub","onInteraction","contains","removeEventListener","registerTypeHandler","handlers","fn","injected","skipPatInjectHandler","executedClass","originalEvent","reload","replaceState","event_listener_map","Map","els","el_events","delete","size","UpdateEvent","super","event_type","cb","has","set","_cb","await_event","await_pattern_init","reject","catch","generic_event","blur_event","click_event","change_event","focus_event","mousedown_event","mouseup_event","scroll_event","submit_event","dragstart_event","dragend_event","methods","settings","initialTime","exceptionAreas","lastEvent","trueTime","untouched","inExceptionArea","mouseMoved","live","enteredException","leftException","startTimer","diff","scrollable","css","scrollHeight","scrollWidth","makeVisibleInScroll","parent_id","absoluteParent","elemTop","position","elemBottom","viewTop","scrollTop","viewBottom","safeOffset","docElem","elem","ownerDocument","setPositionAbsolute","offsettop","offsetleft","thiswidth","pos","setleft","settop","appendTo","positionAncestor","$ancestor","$child","childMarginEdgeLeft","childMarginEdgeTop","ancestorPaddingEdgeLeft","ancestorPaddingEdgeTop","findInclusive","slideIn","speed","animate","slideOut","Contains","scopedFind","jquery_plugin","all_selects","all_deselects","all_toggles","all_checkboxes","all_radios","_init","change_handler","change_buttons_and_toggles","change_checked","find_scoped","select","btn","select_all","deselect","deselect_all","toggle","toggle_all","find_siblings","sel","res","find_checkboxes","ref_el","chkbxs","tgl","box","disable_re","dont_catch_re","dont_catch","__patternslib_registry","PATTERN_REGISTRY","__patternslib_registry_initialized","document_ready","transformPattern","transform","initPattern","plog","orderPatterns","splice","Text","selectors","selector_string","reverse","BLACKLIST","__patternslib_patterns_blacklist","plugin_name","DATA_PREFIX","DATA_STYLE_DISPLAY","INPUT_SELECTOR","all","get_css_value","property","as_pixels","as_float","getComputedStyle","getPropertyValue","get_relative_position","reference_el","abs","scrollLeft","get_data","set_data","event_id","_ready","readyState","wrap","display","find_parents","ret","get_parents","HTMLElement","acquire_attribute","include_empty","include_all","_el","parentElement","is_visible","offsetWidth","offsetHeight","is_input","string","createRange","createContextualFragment","direction","fallback","overflow_y","overflow_x","get_scroll_x","scroll_reference","scrollX","get_scroll_y","scrollY","scrollTo","scroll_to_bottom","delete_data","template","template_string","template_variables","get_visible_ratio","container","rect","container_rect","visible_ratio","rect_height","escape_css_id","CSS","escape","element_uuid","find_form","getOptions","patternName","elOptions","tmpOptions","item","pop","initBasePattern","Registry","mockupParser","defaults","emit","eventName","eventCallback","patternProps","child","Surrogate","__super__","autoregister","language_mapping","atom","plist","rss","svg","wsf","xhtml","xjb","xsd","xsl","CodeJar","hljs","theme","highlight","editor","highlightElement","highlight_wrapper","linenumbers","withLineNumbers","class","language","startsWith","hljs_language","registerLanguage","pre_el","tab","indentOn","spellcheck","catchTab","preserveIdent","addClosing","codeeditor","onUpdate","code","crypto","randomUUID","array","Uint32Array","getRandomValues","SubmitEvent","last_btn","submitable_buttons","canditates","activeElement","candidate","navigation","NavigateEvent","destination","create_event","Moment","lang","locale","out","strict","fromNow","rtf","Intl","RelativeTimeFormat","numeric","toDate","calendar","lastWeek","lastDay","sameDay","nextDay","nextWeek","sameElse","noSuffix","outputFormat","dialog_panel","close","tippy","active_class","inactive_class","Tippy","tippy_options","parseOptionsForTippy","defaultProps","animation","arrow","hideOnClick","closing","ignoreAttributes","interactive","onHide","_onHide","onShow","_onShow","setDefaultProps","markInactive","placement","pos0","r","b","l","pos1","popperOptions","modifiers","arrowPadding","padding","parsers","flip_options","policy","fallbacks","fallbackPlacements","allowHTML","_initialize_content","popper","tippy_classes","close_button","setProps","_get_content","setContent","get_url_parts","data_type_handlers","ajaxDataType","response","popperInstance","forceUpdate","get_content","query","tmp","markdown","Markdown","instance","renderForInjection","register_type_handler","Storage","backend","prefix","ValueStorage","store","_key","_allKeys","prefix_length","getItem","setItem","removeItem","local","localStorage","session","sessionStorage","updateOptions","storage","befores","b_el","b_date","a_date","offsetDays","setDate","substring","dispatch_change_event","display_el","insertAdjacentElement","pat_display_time","PatDisplayTime","display_time_config","_add_additional","add_clear_button","placeholder","Pikaday","showWeekNumber","onSelect","onClose","minDate","maxDate","i18n","json","pikaday","el_append_to","clear_button","firedBy"],"sourceRoot":""}