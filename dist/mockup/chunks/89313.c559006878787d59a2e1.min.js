(self.webpackChunk_plone_mockup=self.webpackChunk_plone_mockup||[]).push([[89313],{89313:function(){!function(){"use strict";var o=tinymce.util.Tools.resolve("tinymce.PluginManager");const e=(o,e,t)=>{o.dom.toggleClass(o.getBody(),"mce-visualblocks"),t.set(!t.get()),((o,e)=>{o.dispatch("VisualBlocks",{state:e})})(o,t.get())},t=(s="visualblocks_default_state",o=>o.options.get(s));var s;const l=(o,e)=>t=>{t.setActive(e.get());const s=o=>t.setActive(o.state);return o.on("VisualBlocks",s),()=>o.off("VisualBlocks",s)};o.add("visualblocks",((o,s)=>{(o=>{(0,o.options.register)("visualblocks_default_state",{processor:"boolean",default:!1})})(o);const c=(o=>{let e=o;return{get:()=>e,set:o=>{e=o}}})(!1);((o,t,s)=>{o.addCommand("mceVisualBlocks",(()=>{e(o,0,s)}))})(o,0,c),((o,e)=>{const t=()=>o.execCommand("mceVisualBlocks");o.ui.registry.addToggleButton("visualblocks",{icon:"visualblocks",tooltip:"Show blocks",onAction:t,onSetup:l(o,e)}),o.ui.registry.addToggleMenuItem("visualblocks",{text:"Show blocks",icon:"visualblocks",onAction:t,onSetup:l(o,e)})})(o,c),((o,s,l)=>{o.on("PreviewFormats AfterPreviewFormats",(e=>{l.get()&&o.dom.toggleClass(o.getBody(),"mce-visualblocks","afterpreviewformats"===e.type)})),o.on("init",(()=>{t(o)&&e(o,0,l)}))})(o,0,c)}))}()}}]);
//# sourceMappingURL=89313.c559006878787d59a2e1.min.js.map