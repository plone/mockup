{"version":3,"file":"chunks/90095.460c4dde56cf298403fd.min.js","mappings":"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","sources":["webpack://@plone/mockup/./node_modules/tinymce/plugins/link/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 7.9.1 (2025-05-29)\n */\n\n(function () {\n    'use strict';\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    /* eslint-disable @typescript-eslint/no-wrapper-object-types */\n    const hasProto = (v, constructor, predicate) => {\n        var _a;\n        if (predicate(v, constructor.prototype)) {\n            return true;\n        }\n        else {\n            // String-based fallback time\n            return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n        }\n    };\n    const typeOf = (x) => {\n        const t = typeof x;\n        if (x === null) {\n            return 'null';\n        }\n        else if (t === 'object' && Array.isArray(x)) {\n            return 'array';\n        }\n        else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n            return 'string';\n        }\n        else {\n            return t;\n        }\n    };\n    const isType = (type) => (value) => typeOf(value) === type;\n    const isSimpleType = (type) => (value) => typeof value === type;\n    const eq = (t) => (a) => t === a;\n    const isString = isType('string');\n    const isObject = isType('object');\n    const isArray = isType('array');\n    const isNull = eq(null);\n    const isBoolean = isSimpleType('boolean');\n    const isNullable = (a) => a === null || a === undefined;\n    const isNonNullable = (a) => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isArrayOf = (value, pred) => {\n        if (isArray(value)) {\n            for (let i = 0, len = value.length; i < len; ++i) {\n                if (!(pred(value[i]))) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n\n    const noop = () => { };\n    const constant = (value) => {\n        return () => {\n            return value;\n        };\n    };\n    const tripleEquals = (a, b) => {\n        return a === b;\n    };\n\n    /**\n     * The `Optional` type represents a value (of any type) that potentially does\n     * not exist. Any `Optional<T>` can either be a `Some<T>` (in which case the\n     * value does exist) or a `None` (in which case the value does not exist). This\n     * module defines a whole lot of FP-inspired utility functions for dealing with\n     * `Optional` objects.\n     *\n     * Comparison with null or undefined:\n     * - We don't get fancy null coalescing operators with `Optional`\n     * - We do get fancy helper functions with `Optional`\n     * - `Optional` support nesting, and allow for the type to still be nullable (or\n     * another `Optional`)\n     * - There is no option to turn off strict-optional-checks like there is for\n     * strict-null-checks\n     */\n    class Optional {\n        // The internal representation has a `tag` and a `value`, but both are\n        // private: able to be console.logged, but not able to be accessed by code\n        constructor(tag, value) {\n            this.tag = tag;\n            this.value = value;\n        }\n        // --- Identities ---\n        /**\n         * Creates a new `Optional<T>` that **does** contain a value.\n         */\n        static some(value) {\n            return new Optional(true, value);\n        }\n        /**\n         * Create a new `Optional<T>` that **does not** contain a value. `T` can be\n         * any type because we don't actually have a `T`.\n         */\n        static none() {\n            return Optional.singletonNone;\n        }\n        /**\n         * Perform a transform on an `Optional` type. Regardless of whether this\n         * `Optional` contains a value or not, `fold` will return a value of type `U`.\n         * If this `Optional` does not contain a value, the `U` will be created by\n         * calling `onNone`. If this `Optional` does contain a value, the `U` will be\n         * created by calling `onSome`.\n         *\n         * For the FP enthusiasts in the room, this function:\n         * 1. Could be used to implement all of the functions below\n         * 2. Forms a catamorphism\n         */\n        fold(onNone, onSome) {\n            if (this.tag) {\n                return onSome(this.value);\n            }\n            else {\n                return onNone();\n            }\n        }\n        /**\n         * Determine if this `Optional` object contains a value.\n         */\n        isSome() {\n            return this.tag;\n        }\n        /**\n         * Determine if this `Optional` object **does not** contain a value.\n         */\n        isNone() {\n            return !this.tag;\n        }\n        // --- Functor (name stolen from Haskell / maths) ---\n        /**\n         * Perform a transform on an `Optional` object, **if** there is a value. If\n         * you provide a function to turn a T into a U, this is the function you use\n         * to turn an `Optional<T>` into an `Optional<U>`. If this **does** contain\n         * a value then the output will also contain a value (that value being the\n         * output of `mapper(this.value)`), and if this **does not** contain a value\n         * then neither will the output.\n         */\n        map(mapper) {\n            if (this.tag) {\n                return Optional.some(mapper(this.value));\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Monad (name stolen from Haskell / maths) ---\n        /**\n         * Perform a transform on an `Optional` object, **if** there is a value.\n         * Unlike `map`, here the transform itself also returns an `Optional`.\n         */\n        bind(binder) {\n            if (this.tag) {\n                return binder(this.value);\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Traversable (name stolen from Haskell / maths) ---\n        /**\n         * For a given predicate, this function finds out if there **exists** a value\n         * inside this `Optional` object that meets the predicate. In practice, this\n         * means that for `Optional`s that do not contain a value it returns false (as\n         * no predicate-meeting value exists).\n         */\n        exists(predicate) {\n            return this.tag && predicate(this.value);\n        }\n        /**\n         * For a given predicate, this function finds out if **all** the values inside\n         * this `Optional` object meet the predicate. In practice, this means that\n         * for `Optional`s that do not contain a value it returns true (as all 0\n         * objects do meet the predicate).\n         */\n        forall(predicate) {\n            return !this.tag || predicate(this.value);\n        }\n        filter(predicate) {\n            if (!this.tag || predicate(this.value)) {\n                return this;\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Getters ---\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value.\n         */\n        getOr(replacement) {\n            return this.tag ? this.value : replacement;\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value.  Unlike `getOr`, in this method the `replacement` object is also\n         * `Optional` - meaning that this method will always return an `Optional`.\n         */\n        or(replacement) {\n            return this.tag ? this : replacement;\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value. Unlike `getOr`, in this method the `replacement` value is\n         * \"thunked\" - that is to say that you don't pass a value to `getOrThunk`, you\n         * pass a function which (if called) will **return** the `value` you want to\n         * use.\n         */\n        getOrThunk(thunk) {\n            return this.tag ? this.value : thunk();\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided Optional object does not contain a\n         * value.\n         *\n         * Unlike `or`, in this method the `replacement` value is \"thunked\" - that is\n         * to say that you don't pass a value to `orThunk`, you pass a function which\n         * (if called) will **return** the `value` you want to use.\n         *\n         * Unlike `getOrThunk`, in this method the `replacement` value is also\n         * `Optional`, meaning that this method will always return an `Optional`.\n         */\n        orThunk(thunk) {\n            return this.tag ? this : thunk();\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, throwing an\n         * exception if the provided `Optional` object does not contain a value.\n         *\n         * WARNING:\n         * You should only be using this function if you know that the `Optional`\n         * object **is not** empty (otherwise you're throwing exceptions in production\n         * code, which is bad).\n         *\n         * In tests this is more acceptable.\n         *\n         * Prefer other methods to this, such as `.each`.\n         */\n        getOrDie(message) {\n            if (!this.tag) {\n                throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n            }\n            else {\n                return this.value;\n            }\n        }\n        // --- Interop with null and undefined ---\n        /**\n         * Creates an `Optional` value from a nullable (or undefined-able) input.\n         * Null, or undefined, is converted to `None`, and anything else is converted\n         * to `Some`.\n         */\n        static from(value) {\n            return isNonNullable(value) ? Optional.some(value) : Optional.none();\n        }\n        /**\n         * Converts an `Optional` to a nullable type, by getting the value if it\n         * exists, or returning `null` if it does not.\n         */\n        getOrNull() {\n            return this.tag ? this.value : null;\n        }\n        /**\n         * Converts an `Optional` to an undefined-able type, by getting the value if\n         * it exists, or returning `undefined` if it does not.\n         */\n        getOrUndefined() {\n            return this.value;\n        }\n        // --- Utilities ---\n        /**\n         * If the `Optional` contains a value, perform an action on that value.\n         * Unlike the rest of the methods on this type, `.each` has side-effects. If\n         * you want to transform an `Optional<T>` **into** something, then this is not\n         * the method for you. If you want to use an `Optional<T>` to **do**\n         * something, then this is the method for you - provided you're okay with not\n         * doing anything in the case where the `Optional` doesn't have a value inside\n         * it. If you're not sure whether your use-case fits into transforming\n         * **into** something or **doing** something, check whether it has a return\n         * value. If it does, you should be performing a transform.\n         */\n        each(worker) {\n            if (this.tag) {\n                worker(this.value);\n            }\n        }\n        /**\n         * Turn the `Optional` object into an array that contains all of the values\n         * stored inside the `Optional`. In practice, this means the output will have\n         * either 0 or 1 elements.\n         */\n        toArray() {\n            return this.tag ? [this.value] : [];\n        }\n        /**\n         * Turn the `Optional` object into a string for debugging or printing. Not\n         * recommended for production code, but good for debugging. Also note that\n         * these days an `Optional` object can be logged to the console directly, and\n         * its inner value (if it exists) will be visible.\n         */\n        toString() {\n            return this.tag ? `some(${this.value})` : 'none()';\n        }\n    }\n    // Sneaky optimisation: every instance of Optional.none is identical, so just\n    // reuse the same object\n    Optional.singletonNone = new Optional(false);\n\n    /* eslint-disable @typescript-eslint/unbound-method */\n    const nativeSlice = Array.prototype.slice;\n    const nativeIndexOf = Array.prototype.indexOf;\n    const nativePush = Array.prototype.push;\n    /* eslint-enable */\n    const rawIndexOf = (ts, t) => nativeIndexOf.call(ts, t);\n    const contains = (xs, x) => rawIndexOf(xs, x) > -1;\n    const map = (xs, f) => {\n        // pre-allocating array size when it's guaranteed to be known\n        // http://jsperf.com/push-allocated-vs-dynamic/22\n        const len = xs.length;\n        const r = new Array(len);\n        for (let i = 0; i < len; i++) {\n            const x = xs[i];\n            r[i] = f(x, i);\n        }\n        return r;\n    };\n    // Unwound implementing other functions in terms of each.\n    // The code size is roughly the same, and it should allow for better optimisation.\n    // const each = function<T, U>(xs: T[], f: (x: T, i?: number, xs?: T[]) => void): void {\n    const each$1 = (xs, f) => {\n        for (let i = 0, len = xs.length; i < len; i++) {\n            const x = xs[i];\n            f(x, i);\n        }\n    };\n    const foldl = (xs, f, acc) => {\n        each$1(xs, (x, i) => {\n            acc = f(acc, x, i);\n        });\n        return acc;\n    };\n    const flatten = (xs) => {\n        // Note, this is possible because push supports multiple arguments:\n        // http://jsperf.com/concat-push/6\n        // Note that in the past, concat() would silently work (very slowly) for array-like objects.\n        // With this change it will throw an error.\n        const r = [];\n        for (let i = 0, len = xs.length; i < len; ++i) {\n            // Ensure that each value is an array itself\n            if (!isArray(xs[i])) {\n                throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n            }\n            nativePush.apply(r, xs[i]);\n        }\n        return r;\n    };\n    const bind = (xs, f) => flatten(map(xs, f));\n    isFunction(Array.from) ? Array.from : (x) => nativeSlice.call(x);\n    const findMap = (arr, f) => {\n        for (let i = 0; i < arr.length; i++) {\n            const r = f(arr[i], i);\n            if (r.isSome()) {\n                return r;\n            }\n        }\n        return Optional.none();\n    };\n\n    // There are many variations of Object iteration that are faster than the 'for-in' style:\n    // http://jsperf.com/object-keys-iteration/107\n    //\n    // Use the native keys if it is available (IE9+), otherwise fall back to manually filtering\n    const keys = Object.keys;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const hasOwnProperty = Object.hasOwnProperty;\n    const each = (obj, f) => {\n        const props = keys(obj);\n        for (let k = 0, len = props.length; k < len; k++) {\n            const i = props[k];\n            const x = obj[i];\n            f(x, i);\n        }\n    };\n    const objAcc = (r) => (x, i) => {\n        r[i] = x;\n    };\n    const internalFilter = (obj, pred, onTrue, onFalse) => {\n        each(obj, (x, i) => {\n            (pred(x, i) ? onTrue : onFalse)(x, i);\n        });\n    };\n    const filter = (obj, pred) => {\n        const t = {};\n        internalFilter(obj, pred, objAcc(t), noop);\n        return t;\n    };\n    const has = (obj, key) => hasOwnProperty.call(obj, key);\n    const hasNonNullableKey = (obj, key) => has(obj, key) && obj[key] !== undefined && obj[key] !== null;\n\n    const Cell = (initial) => {\n        let value = initial;\n        const get = () => {\n            return value;\n        };\n        const set = (v) => {\n            value = v;\n        };\n        return {\n            get,\n            set\n        };\n    };\n\n    /**\n     * **Is** the value stored inside this Optional object equal to `rhs`?\n     */\n    const is = (lhs, rhs, comparator = tripleEquals) => lhs.exists((left) => comparator(left, rhs));\n    const cat = (arr) => {\n        const r = [];\n        const push = (x) => {\n            r.push(x);\n        };\n        for (let i = 0; i < arr.length; i++) {\n            arr[i].each(push);\n        }\n        return r;\n    };\n    // This can help with type inference, by specifying the type param on the none case, so the caller doesn't have to.\n    const someIf = (b, a) => b ? Optional.some(a) : Optional.none();\n\n    const singleton = (doRevoke) => {\n        const subject = Cell(Optional.none());\n        const revoke = () => subject.get().each(doRevoke);\n        const clear = () => {\n            revoke();\n            subject.set(Optional.none());\n        };\n        const isSet = () => subject.get().isSome();\n        const get = () => subject.get();\n        const set = (s) => {\n            revoke();\n            subject.set(Optional.some(s));\n        };\n        return {\n            clear,\n            isSet,\n            get,\n            set\n        };\n    };\n    const value = () => {\n        const subject = singleton(noop);\n        const on = (f) => subject.get().each(f);\n        return {\n            ...subject,\n            on\n        };\n    };\n\n    const removeFromStart = (str, numChars) => {\n        return str.substring(numChars);\n    };\n\n    const checkRange = (str, substr, start) => substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n    const removeLeading = (str, prefix) => {\n        return startsWith(str, prefix) ? removeFromStart(str, prefix.length) : str;\n    };\n    /** Does 'str' start with 'prefix'?\n     *  Note: all strings start with the empty string.\n     *        More formally, for all strings x, startsWith(x, \"\").\n     *        This is so that for all strings x and y, startsWith(y + x, y)\n     */\n    const startsWith = (str, prefix) => {\n        return checkRange(str, prefix, 0);\n    };\n\n    const option = (name) => (editor) => editor.options.get(name);\n    const register$1 = (editor) => {\n        const registerOption = editor.options.register;\n        registerOption('link_assume_external_targets', {\n            processor: (value) => {\n                const valid = isString(value) || isBoolean(value);\n                if (valid) {\n                    if (value === true) {\n                        return { value: 1 /* AssumeExternalTargets.WARN */, valid };\n                    }\n                    else if (value === \"http\" /* AssumeExternalTargets.ALWAYS_HTTP */ || value === \"https\" /* AssumeExternalTargets.ALWAYS_HTTPS */) {\n                        return { value, valid };\n                    }\n                    else {\n                        return { value: 0 /* AssumeExternalTargets.OFF */, valid };\n                    }\n                }\n                else {\n                    return { valid: false, message: 'Must be a string or a boolean.' };\n                }\n            },\n            default: false\n        });\n        registerOption('link_context_toolbar', {\n            processor: 'boolean',\n            default: false\n        });\n        registerOption('link_list', {\n            processor: (value) => isString(value) || isFunction(value) || isArrayOf(value, isObject)\n        });\n        registerOption('link_default_target', {\n            processor: 'string'\n        });\n        registerOption('link_default_protocol', {\n            processor: 'string',\n            default: 'https'\n        });\n        registerOption('link_target_list', {\n            processor: (value) => isBoolean(value) || isArrayOf(value, isObject),\n            default: true\n        });\n        registerOption('link_rel_list', {\n            processor: 'object[]',\n            default: []\n        });\n        registerOption('link_class_list', {\n            processor: 'object[]',\n            default: []\n        });\n        registerOption('link_title', {\n            processor: 'boolean',\n            default: true\n        });\n        registerOption('allow_unsafe_link_target', {\n            processor: 'boolean',\n            default: false\n        });\n        registerOption('link_quicklink', {\n            processor: 'boolean',\n            default: false\n        });\n        registerOption('link_attributes_postprocess', {\n            processor: 'function',\n        });\n    };\n    const assumeExternalTargets = option('link_assume_external_targets');\n    const hasContextToolbar = option('link_context_toolbar');\n    const getLinkList = option('link_list');\n    const getDefaultLinkTarget = option('link_default_target');\n    const getDefaultLinkProtocol = option('link_default_protocol');\n    const getTargetList = option('link_target_list');\n    const getRelList = option('link_rel_list');\n    const getLinkClassList = option('link_class_list');\n    const shouldShowLinkTitle = option('link_title');\n    const allowUnsafeLinkTarget = option('allow_unsafe_link_target');\n    const useQuickLink = option('link_quicklink');\n    const attributesPostProcess = option('link_attributes_postprocess');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.util.URI');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.dom.TreeWalker');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const isAnchor = (elm) => isNonNullable(elm) && elm.nodeName.toLowerCase() === 'a';\n    const isLink = (elm) => isAnchor(elm) && !!getHref(elm);\n    const collectNodesInRange = (rng, predicate) => {\n        if (rng.collapsed) {\n            return [];\n        }\n        else {\n            const contents = rng.cloneContents();\n            const firstChild = contents.firstChild;\n            const walker = new global$3(firstChild, contents);\n            const elements = [];\n            let current = firstChild;\n            do {\n                if (predicate(current)) {\n                    elements.push(current);\n                }\n            } while ((current = walker.next()));\n            return elements;\n        }\n    };\n    const hasProtocol = (url) => /^\\w+:/i.test(url);\n    const getHref = (elm) => {\n        var _a, _b;\n        // Returns the real href value not the resolved a.href value\n        return (_b = (_a = elm.getAttribute('data-mce-href')) !== null && _a !== void 0 ? _a : elm.getAttribute('href')) !== null && _b !== void 0 ? _b : '';\n    };\n    const applyRelTargetRules = (rel, isUnsafe) => {\n        const rules = ['noopener'];\n        const rels = rel ? rel.split(/\\s+/) : [];\n        const toString = (rels) => global$2.trim(rels.sort().join(' '));\n        const addTargetRules = (rels) => {\n            rels = removeTargetRules(rels);\n            return rels.length > 0 ? rels.concat(rules) : rules;\n        };\n        const removeTargetRules = (rels) => rels.filter((val) => global$2.inArray(rules, val) === -1);\n        const newRels = isUnsafe ? addTargetRules(rels) : removeTargetRules(rels);\n        return newRels.length > 0 ? toString(newRels) : '';\n    };\n    const trimCaretContainers = (text) => text.replace(/\\uFEFF/g, '');\n    const getAnchorElement = (editor, selectedElm) => {\n        selectedElm = selectedElm || getLinksInSelection(editor.selection.getRng())[0] || editor.selection.getNode();\n        if (isImageFigure(selectedElm)) {\n            // for an image contained in a figure we look for a link inside the selected element\n            return Optional.from(editor.dom.select('a[href]', selectedElm)[0]);\n        }\n        else {\n            return Optional.from(editor.dom.getParent(selectedElm, 'a[href]'));\n        }\n    };\n    const isInAnchor = (editor, selectedElm) => getAnchorElement(editor, selectedElm).isSome();\n    const getAnchorText = (selection, anchorElm) => {\n        const text = anchorElm.fold(() => selection.getContent({ format: 'text' }), (anchorElm) => anchorElm.innerText || anchorElm.textContent || '');\n        return trimCaretContainers(text);\n    };\n    const getLinksInSelection = (rng) => collectNodesInRange(rng, isLink);\n    const getLinks$1 = (elements) => global$2.grep(elements, isLink);\n    const hasLinks = (elements) => getLinks$1(elements).length > 0;\n    const hasLinksInSelection = (rng) => getLinksInSelection(rng).length > 0;\n    const isOnlyTextSelected = (editor) => {\n        // Allow anchor and inline text elements to be in the selection but nothing else\n        const inlineTextElements = editor.schema.getTextInlineElements();\n        const isElement = (elm) => elm.nodeType === 1 && !isAnchor(elm) && !has(inlineTextElements, elm.nodeName.toLowerCase());\n        // If selection is inside a block anchor then always treat it as non text only\n        const isInBlockAnchor = getAnchorElement(editor).exists((anchor) => anchor.hasAttribute('data-mce-block'));\n        if (isInBlockAnchor) {\n            return false;\n        }\n        const rng = editor.selection.getRng();\n        if (!rng.collapsed) {\n            // Collect all non inline text elements in the range and make sure no elements were found\n            const elements = collectNodesInRange(rng, isElement);\n            return elements.length === 0;\n        }\n        else {\n            return true;\n        }\n    };\n    const isImageFigure = (elm) => isNonNullable(elm) && elm.nodeName === 'FIGURE' && /\\bimage\\b/i.test(elm.className);\n\n    const getLinkAttrs = (data) => {\n        const attrs = ['title', 'rel', 'class', 'target'];\n        return foldl(attrs, (acc, key) => {\n            data[key].each((value) => {\n                // If dealing with an empty string, then treat that as being null so the attribute is removed\n                acc[key] = value.length > 0 ? value : null;\n            });\n            return acc;\n        }, {\n            href: data.href\n        });\n    };\n    const handleExternalTargets = (href, assumeExternalTargets) => {\n        if ((assumeExternalTargets === \"http\" /* AssumeExternalTargets.ALWAYS_HTTP */\n            || assumeExternalTargets === \"https\" /* AssumeExternalTargets.ALWAYS_HTTPS */)\n            && !hasProtocol(href)) {\n            return assumeExternalTargets + '://' + href;\n        }\n        return href;\n    };\n    const applyLinkOverrides = (editor, linkAttrs) => {\n        const newLinkAttrs = { ...linkAttrs };\n        if (getRelList(editor).length === 0 && !allowUnsafeLinkTarget(editor)) {\n            const newRel = applyRelTargetRules(newLinkAttrs.rel, newLinkAttrs.target === '_blank');\n            newLinkAttrs.rel = newRel ? newRel : null;\n        }\n        if (Optional.from(newLinkAttrs.target).isNone() && getTargetList(editor) === false) {\n            newLinkAttrs.target = getDefaultLinkTarget(editor);\n        }\n        newLinkAttrs.href = handleExternalTargets(newLinkAttrs.href, assumeExternalTargets(editor));\n        return newLinkAttrs;\n    };\n    const updateLink = (editor, anchorElm, text, linkAttrs) => {\n        // If we have text, then update the anchor elements text content\n        text.each((text) => {\n            if (has(anchorElm, 'innerText')) {\n                anchorElm.innerText = text;\n            }\n            else {\n                anchorElm.textContent = text;\n            }\n        });\n        editor.dom.setAttribs(anchorElm, linkAttrs);\n        // Move the cursor behind the updated link, so the user can go on typing.\n        const rng = editor.dom.createRng();\n        rng.setStartAfter(anchorElm);\n        rng.setEndAfter(anchorElm);\n        editor.selection.setRng(rng);\n    };\n    const createLink = (editor, selectedElm, text, linkAttrs) => {\n        const dom = editor.dom;\n        if (isImageFigure(selectedElm)) {\n            linkImageFigure(dom, selectedElm, linkAttrs);\n        }\n        else {\n            text.fold(() => {\n                editor.execCommand('mceInsertLink', false, linkAttrs);\n                // Now the newly inserted link is selected. Move the cursor behind the new link, so the user can go on typing.\n                const end = editor.selection.getEnd();\n                const rng = dom.createRng();\n                rng.setStartAfter(end);\n                rng.setEndAfter(end);\n                editor.selection.setRng(rng);\n            }, (text) => {\n                editor.insertContent(dom.createHTML('a', linkAttrs, dom.encode(text)));\n            });\n        }\n    };\n    const linkDomMutation = (editor, attachState, data) => {\n        const selectedElm = editor.selection.getNode();\n        const anchorElm = getAnchorElement(editor, selectedElm);\n        const linkAttrs = applyLinkOverrides(editor, getLinkAttrs(data));\n        const attributesPostProcess$1 = attributesPostProcess(editor);\n        if (isNonNullable(attributesPostProcess$1)) {\n            attributesPostProcess$1(linkAttrs);\n        }\n        editor.undoManager.transact(() => {\n            if (data.href === attachState.href) {\n                attachState.attach();\n            }\n            anchorElm.fold(() => {\n                createLink(editor, selectedElm, data.text, linkAttrs);\n            }, (elm) => {\n                editor.focus();\n                updateLink(editor, elm, data.text, linkAttrs);\n            });\n        });\n    };\n    const unlinkSelection = (editor) => {\n        const dom = editor.dom, selection = editor.selection;\n        const bookmark = selection.getBookmark();\n        const rng = selection.getRng().cloneRange();\n        // Extend the selection out to the entire anchor element\n        const startAnchorElm = dom.getParent(rng.startContainer, 'a[href]', editor.getBody());\n        const endAnchorElm = dom.getParent(rng.endContainer, 'a[href]', editor.getBody());\n        if (startAnchorElm) {\n            rng.setStartBefore(startAnchorElm);\n        }\n        if (endAnchorElm) {\n            rng.setEndAfter(endAnchorElm);\n        }\n        selection.setRng(rng);\n        // Remove the link\n        editor.execCommand('unlink');\n        selection.moveToBookmark(bookmark);\n    };\n    const unlinkDomMutation = (editor) => {\n        editor.undoManager.transact(() => {\n            const node = editor.selection.getNode();\n            if (isImageFigure(node)) {\n                unlinkImageFigure(editor, node);\n            }\n            else {\n                unlinkSelection(editor);\n            }\n            editor.focus();\n        });\n    };\n    /*\n     * RTC uses unwrapped options.\n     *\n     * To best simulate this, we unwrap to null and filter out empty values.\n     */\n    const unwrapOptions = (data) => {\n        const { class: cls, href, rel, target, text, title } = data;\n        return filter({\n            class: cls.getOrNull(),\n            href,\n            rel: rel.getOrNull(),\n            target: target.getOrNull(),\n            text: text.getOrNull(),\n            title: title.getOrNull()\n        }, (v, _k) => isNull(v) === false);\n    };\n    const sanitizeData = (editor, data) => {\n        const getOption = editor.options.get;\n        const uriOptions = {\n            allow_html_data_urls: getOption('allow_html_data_urls'),\n            allow_script_urls: getOption('allow_script_urls'),\n            allow_svg_data_urls: getOption('allow_svg_data_urls')\n        };\n        // Sanitize the URL\n        const href = data.href;\n        return {\n            ...data,\n            href: global$4.isDomSafe(href, 'a', uriOptions) ? href : ''\n        };\n    };\n    const link = (editor, attachState, data) => {\n        const sanitizedData = sanitizeData(editor, data);\n        editor.hasPlugin('rtc', true) ? editor.execCommand('createlink', false, unwrapOptions(sanitizedData)) : linkDomMutation(editor, attachState, sanitizedData);\n    };\n    const unlink = (editor) => {\n        editor.hasPlugin('rtc', true) ? editor.execCommand('unlink') : unlinkDomMutation(editor);\n    };\n    const unlinkImageFigure = (editor, fig) => {\n        var _a;\n        const img = editor.dom.select('img', fig)[0];\n        if (img) {\n            const a = editor.dom.getParents(img, 'a[href]', fig)[0];\n            if (a) {\n                (_a = a.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(img, a);\n                editor.dom.remove(a);\n            }\n        }\n    };\n    const linkImageFigure = (dom, fig, attrs) => {\n        var _a;\n        const img = dom.select('img', fig)[0];\n        if (img) {\n            const a = dom.create('a', attrs);\n            (_a = img.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(a, img);\n            a.appendChild(img);\n        }\n    };\n\n    const getValue = (item) => isString(item.value) ? item.value : '';\n    const getText = (item) => {\n        if (isString(item.text)) {\n            return item.text;\n        }\n        else if (isString(item.title)) {\n            return item.title;\n        }\n        else {\n            return '';\n        }\n    };\n    const sanitizeList = (list, extractValue) => {\n        const out = [];\n        global$2.each(list, (item) => {\n            const text = getText(item);\n            if (item.menu !== undefined) {\n                const items = sanitizeList(item.menu, extractValue);\n                out.push({ text, items }); // list group\n            }\n            else {\n                const value = extractValue(item);\n                out.push({ text, value }); // list value\n            }\n        });\n        return out;\n    };\n    const sanitizeWith = (extracter = getValue) => (list) => Optional.from(list).map((list) => sanitizeList(list, extracter));\n    const sanitize = (list) => sanitizeWith(getValue)(list);\n    // NOTE: May need to care about flattening.\n    const createUi = (name, label) => (items) => ({\n        name,\n        type: 'listbox',\n        label,\n        items\n    });\n    const ListOptions = {\n        sanitize,\n        sanitizeWith,\n        createUi,\n        getValue\n    };\n\n    const isListGroup = (item) => hasNonNullableKey(item, 'items');\n    const findTextByValue = (value, catalog) => findMap(catalog, (item) => {\n        if (isListGroup(item)) {\n            return findTextByValue(value, item.items);\n        }\n        else {\n            return someIf(item.value === value, item);\n        }\n    });\n    const getDelta = (persistentText, fieldName, catalog, data) => {\n        const value = data[fieldName];\n        const hasPersistentText = persistentText.length > 0;\n        return value !== undefined ? findTextByValue(value, catalog).map((i) => ({\n            url: {\n                value: i.value,\n                meta: {\n                    text: hasPersistentText ? persistentText : i.text,\n                    attach: noop\n                }\n            },\n            text: hasPersistentText ? persistentText : i.text\n        })) : Optional.none();\n    };\n    const findCatalog = (catalogs, fieldName) => {\n        if (fieldName === 'link') {\n            return catalogs.link;\n        }\n        else if (fieldName === 'anchor') {\n            return catalogs.anchor;\n        }\n        else {\n            return Optional.none();\n        }\n    };\n    const init = (initialData, linkCatalog) => {\n        const persistentData = {\n            text: initialData.text,\n            title: initialData.title\n        };\n        const getTitleFromUrlChange = (url) => { var _a; return someIf(persistentData.title.length <= 0, Optional.from((_a = url.meta) === null || _a === void 0 ? void 0 : _a.title).getOr('')); };\n        const getTextFromUrlChange = (url) => { var _a; return someIf(persistentData.text.length <= 0, Optional.from((_a = url.meta) === null || _a === void 0 ? void 0 : _a.text).getOr(url.value)); };\n        const onUrlChange = (data) => {\n            const text = getTextFromUrlChange(data.url);\n            const title = getTitleFromUrlChange(data.url);\n            // We are going to change the text/title because it has not been manually entered by the user.\n            if (text.isSome() || title.isSome()) {\n                return Optional.some({\n                    ...text.map((text) => ({ text })).getOr({}),\n                    ...title.map((title) => ({ title })).getOr({})\n                });\n            }\n            else {\n                return Optional.none();\n            }\n        };\n        const onCatalogChange = (data, change) => {\n            const catalog = findCatalog(linkCatalog, change).getOr([]);\n            return getDelta(persistentData.text, change, catalog, data);\n        };\n        const onChange = (getData, change) => {\n            const name = change.name;\n            if (name === 'url') {\n                return onUrlChange(getData());\n            }\n            else if (contains(['anchor', 'link'], name)) {\n                return onCatalogChange(getData(), name);\n            }\n            else if (name === 'text' || name === 'title') {\n                // Update the persistent text/title state, as a user has input custom text\n                persistentData[name] = getData()[name];\n                return Optional.none();\n            }\n            else {\n                return Optional.none();\n            }\n        };\n        return {\n            onChange\n        };\n    };\n    const DialogChanges = {\n        init,\n        getDelta\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    // Delay confirm since onSubmit will move focus\n    const delayedConfirm = (editor, message, callback) => {\n        const rng = editor.selection.getRng();\n        global$1.setEditorTimeout(editor, () => {\n            editor.windowManager.confirm(message, (state) => {\n                editor.selection.setRng(rng);\n                callback(state);\n            });\n        });\n    };\n    const tryEmailTransform = (data) => {\n        const url = data.href;\n        const suggestMailTo = url.indexOf('@') > 0 && url.indexOf('/') === -1 && url.indexOf('mailto:') === -1;\n        return suggestMailTo ? Optional.some({\n            message: 'The URL you entered seems to be an email address. Do you want to add the required mailto: prefix?',\n            preprocess: (oldData) => ({ ...oldData, href: 'mailto:' + url })\n        }) : Optional.none();\n    };\n    const tryProtocolTransform = (assumeExternalTargets, defaultLinkProtocol) => (data) => {\n        const url = data.href;\n        const suggestProtocol = (assumeExternalTargets === 1 /* AssumeExternalTargets.WARN */ && !hasProtocol(url) ||\n            assumeExternalTargets === 0 /* AssumeExternalTargets.OFF */ && /^\\s*www(\\.|\\d\\.)/i.test(url));\n        return suggestProtocol ? Optional.some({\n            message: `The URL you entered seems to be an external link. Do you want to add the required ${defaultLinkProtocol}:// prefix?`,\n            preprocess: (oldData) => ({ ...oldData, href: defaultLinkProtocol + '://' + url })\n        }) : Optional.none();\n    };\n    const preprocess = (editor, data) => findMap([tryEmailTransform, tryProtocolTransform(assumeExternalTargets(editor), getDefaultLinkProtocol(editor))], (f) => f(data)).fold(() => Promise.resolve(data), (transform) => new Promise((callback) => {\n        delayedConfirm(editor, transform.message, (state) => {\n            callback(state ? transform.preprocess(data) : data);\n        });\n    }));\n    const DialogConfirms = {\n        preprocess\n    };\n\n    // NOTE: you currently need anchors in the content for this field to appear\n    const getAnchors = (editor) => {\n        const anchorNodes = editor.dom.select('a:not([href])');\n        const anchors = bind(anchorNodes, (anchor) => {\n            const id = anchor.name || anchor.id;\n            return id ? [{ text: id, value: '#' + id }] : [];\n        });\n        return anchors.length > 0 ? Optional.some([{ text: 'None', value: '' }].concat(anchors)) : Optional.none();\n    };\n    const AnchorListOptions = {\n        getAnchors\n    };\n\n    // Looks like tinymce currently renders menus, but doesn't\n    // let you choose from one.\n    const getClasses = (editor) => {\n        const list = getLinkClassList(editor);\n        if (list.length > 0) {\n            return ListOptions.sanitize(list);\n        }\n        return Optional.none();\n    };\n    const ClassListOptions = {\n        getClasses\n    };\n\n    const parseJson = (text) => {\n        // Do some proper modelling.\n        try {\n            return Optional.some(JSON.parse(text));\n        }\n        catch (_a) {\n            return Optional.none();\n        }\n    };\n    const getLinks = (editor) => {\n        const extractor = (item) => editor.convertURL(item.value || item.url || '', 'href');\n        const linkList = getLinkList(editor);\n        return new Promise((resolve) => {\n            // TODO - better handling of failure\n            if (isString(linkList)) {\n                fetch(linkList)\n                    .then((res) => res.ok ? res.text().then(parseJson) : Promise.reject())\n                    .then(resolve, () => resolve(Optional.none()));\n            }\n            else if (isFunction(linkList)) {\n                linkList((output) => resolve(Optional.some(output)));\n            }\n            else {\n                resolve(Optional.from(linkList));\n            }\n        }).then((optItems) => optItems.bind(ListOptions.sanitizeWith(extractor)).map((items) => {\n            if (items.length > 0) {\n                const noneItem = [{ text: 'None', value: '' }];\n                return noneItem.concat(items);\n            }\n            else {\n                return items;\n            }\n        }));\n    };\n    const LinkListOptions = {\n        getLinks\n    };\n\n    const getRels = (editor, initialTarget) => {\n        const list = getRelList(editor);\n        if (list.length > 0) {\n            const isTargetBlank = is(initialTarget, '_blank');\n            const enforceSafe = allowUnsafeLinkTarget(editor) === false;\n            const safeRelExtractor = (item) => applyRelTargetRules(ListOptions.getValue(item), isTargetBlank);\n            const sanitizer = enforceSafe ? ListOptions.sanitizeWith(safeRelExtractor) : ListOptions.sanitize;\n            return sanitizer(list);\n        }\n        return Optional.none();\n    };\n    const RelOptions = {\n        getRels\n    };\n\n    // In current tinymce, targets can be nested menus.\n    // Do we really want to support that?\n    const fallbacks = [\n        { text: 'Current window', value: '' },\n        { text: 'New window', value: '_blank' }\n    ];\n    const getTargets = (editor) => {\n        const list = getTargetList(editor);\n        if (isArray(list)) {\n            return ListOptions.sanitize(list).orThunk(() => Optional.some(fallbacks));\n        }\n        else if (list === false) {\n            return Optional.none();\n        }\n        return Optional.some(fallbacks);\n    };\n    const TargetOptions = {\n        getTargets\n    };\n\n    const nonEmptyAttr = (dom, elem, name) => {\n        const val = dom.getAttrib(elem, name);\n        return val !== null && val.length > 0 ? Optional.some(val) : Optional.none();\n    };\n    const extractFromAnchor = (editor, anchor) => {\n        const dom = editor.dom;\n        const onlyText = isOnlyTextSelected(editor);\n        const text = onlyText ? Optional.some(getAnchorText(editor.selection, anchor)) : Optional.none();\n        const url = anchor.bind((anchorElm) => Optional.from(dom.getAttrib(anchorElm, 'href')));\n        const target = anchor.bind((anchorElm) => Optional.from(dom.getAttrib(anchorElm, 'target')));\n        const rel = anchor.bind((anchorElm) => nonEmptyAttr(dom, anchorElm, 'rel'));\n        const linkClass = anchor.bind((anchorElm) => nonEmptyAttr(dom, anchorElm, 'class'));\n        const title = anchor.bind((anchorElm) => nonEmptyAttr(dom, anchorElm, 'title'));\n        return {\n            url,\n            text,\n            title,\n            target,\n            rel,\n            linkClass\n        };\n    };\n    const collect = (editor, linkNode) => LinkListOptions.getLinks(editor).then((links) => {\n        const anchor = extractFromAnchor(editor, linkNode);\n        return {\n            anchor,\n            catalogs: {\n                targets: TargetOptions.getTargets(editor),\n                // This should be initial target. Is anchor.target that?\n                rels: RelOptions.getRels(editor, anchor.target),\n                classes: ClassListOptions.getClasses(editor),\n                anchor: AnchorListOptions.getAnchors(editor),\n                link: links\n            },\n            optNode: linkNode,\n            flags: {\n                titleEnabled: shouldShowLinkTitle(editor)\n            }\n        };\n    });\n    const DialogInfo = {\n        collect\n    };\n\n    const handleSubmit = (editor, info) => (api) => {\n        const data = api.getData();\n        if (!data.url.value) {\n            unlink(editor);\n            // Temporary fix. TODO: TINY-2811\n            api.close();\n            return;\n        }\n        // Check if a key is defined, meaning it was a field in the dialog. If it is,\n        // then check if it's changed and return none if nothing has changed.\n        const getChangedValue = (key) => Optional.from(data[key]).filter((value) => !is(info.anchor[key], value));\n        const changedData = {\n            href: data.url.value,\n            text: getChangedValue('text'),\n            target: getChangedValue('target'),\n            rel: getChangedValue('rel'),\n            class: getChangedValue('linkClass'),\n            title: getChangedValue('title')\n        };\n        const attachState = {\n            href: data.url.value,\n            attach: data.url.meta !== undefined && data.url.meta.attach ? data.url.meta.attach : noop\n        };\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        DialogConfirms.preprocess(editor, changedData).then((pData) => {\n            link(editor, attachState, pData);\n        });\n        api.close();\n    };\n    const collectData = (editor) => {\n        const anchorNode = getAnchorElement(editor);\n        return DialogInfo.collect(editor, anchorNode);\n    };\n    const getInitialData = (info, defaultTarget) => {\n        const anchor = info.anchor;\n        const url = anchor.url.getOr('');\n        return {\n            url: {\n                value: url,\n                meta: {\n                    original: {\n                        value: url\n                    }\n                }\n            },\n            text: anchor.text.getOr(''),\n            title: anchor.title.getOr(''),\n            anchor: url,\n            link: url,\n            rel: anchor.rel.getOr(''),\n            target: anchor.target.or(defaultTarget).getOr(''),\n            linkClass: anchor.linkClass.getOr('')\n        };\n    };\n    const makeDialog = (settings, onSubmit, editor) => {\n        const urlInput = [\n            {\n                name: 'url',\n                type: 'urlinput',\n                filetype: 'file',\n                label: 'URL',\n                picker_text: 'Browse links'\n            }\n        ];\n        const displayText = settings.anchor.text.map(() => ({\n            name: 'text',\n            type: 'input',\n            label: 'Text to display'\n        })).toArray();\n        const titleText = settings.flags.titleEnabled ? [\n            {\n                name: 'title',\n                type: 'input',\n                label: 'Title'\n            }\n        ] : [];\n        const defaultTarget = Optional.from(getDefaultLinkTarget(editor));\n        const initialData = getInitialData(settings, defaultTarget);\n        const catalogs = settings.catalogs;\n        const dialogDelta = DialogChanges.init(initialData, catalogs);\n        const body = {\n            type: 'panel',\n            items: flatten([\n                urlInput,\n                displayText,\n                titleText,\n                cat([\n                    catalogs.anchor.map(ListOptions.createUi('anchor', 'Anchors')),\n                    catalogs.rels.map(ListOptions.createUi('rel', 'Rel')),\n                    catalogs.targets.map(ListOptions.createUi('target', 'Open link in...')),\n                    catalogs.link.map(ListOptions.createUi('link', 'Link list')),\n                    catalogs.classes.map(ListOptions.createUi('linkClass', 'Class'))\n                ])\n            ])\n        };\n        return {\n            title: 'Insert/Edit Link',\n            size: 'normal',\n            body,\n            buttons: [\n                {\n                    type: 'cancel',\n                    name: 'cancel',\n                    text: 'Cancel'\n                },\n                {\n                    type: 'submit',\n                    name: 'save',\n                    text: 'Save',\n                    primary: true\n                }\n            ],\n            initialData,\n            onChange: (api, { name }) => {\n                dialogDelta.onChange(api.getData, { name }).each((newData) => {\n                    api.setData(newData);\n                });\n            },\n            onSubmit\n        };\n    };\n    const open = (editor) => {\n        const data = collectData(editor);\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        data.then((info) => {\n            const onSubmit = handleSubmit(editor, info);\n            return makeDialog(info, onSubmit, editor);\n        }).then((spec) => {\n            editor.windowManager.open(spec);\n        });\n    };\n\n    const register = (editor) => {\n        editor.addCommand('mceLink', (_ui, value) => {\n            if ((value === null || value === void 0 ? void 0 : value.dialog) === true || !useQuickLink(editor)) {\n                open(editor);\n            }\n            else {\n                editor.dispatch('contexttoolbar-show', {\n                    toolbarKey: 'quicklink'\n                });\n            }\n        });\n    };\n\n    const setup$2 = (editor) => {\n        editor.addShortcut('Meta+K', '', () => {\n            editor.execCommand('mceLink');\n        });\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    const appendClickRemove = (link, evt) => {\n        document.body.appendChild(link);\n        link.dispatchEvent(evt);\n        document.body.removeChild(link);\n    };\n    const openLink = (url) => {\n        const link = document.createElement('a');\n        link.target = '_blank';\n        link.href = url;\n        link.rel = 'noreferrer noopener';\n        const evt = new MouseEvent('click', {\n            bubbles: true,\n            cancelable: true,\n            view: window\n        });\n        document.dispatchEvent(evt);\n        appendClickRemove(link, evt);\n    };\n    const hasOnlyAltModifier = (e) => {\n        return e.altKey === true && e.shiftKey === false && e.ctrlKey === false && e.metaKey === false;\n    };\n    const gotoLink = (editor, a) => {\n        if (a) {\n            const href = getHref(a);\n            if (/^#/.test(href)) {\n                const targetEl = editor.dom.select(`${href},[name=\"${removeLeading(href, '#')}\"]`);\n                if (targetEl.length) {\n                    editor.selection.scrollIntoView(targetEl[0], true);\n                }\n            }\n            else {\n                openLink(a.href);\n            }\n        }\n    };\n    const isSelectionOnImageWithEmbeddedLink = (editor) => {\n        const rng = editor.selection.getRng();\n        const node = rng.startContainer;\n        // Handle a case where an image embedded with a link is selected\n        return isLink(node) && rng.startContainer === rng.endContainer && editor.dom.select('img', node).length === 1;\n    };\n    const getLinkFromElement = (editor, element) => {\n        const links = getLinks$1(editor.dom.getParents(element));\n        return someIf(links.length === 1, links[0]);\n    };\n    const getLinkInSelection = (editor) => {\n        const links = getLinksInSelection(editor.selection.getRng());\n        return someIf(links.length > 0, links[0]).or(getLinkFromElement(editor, editor.selection.getNode()));\n    };\n    const getLinkFromSelection = (editor) => editor.selection.isCollapsed() || isSelectionOnImageWithEmbeddedLink(editor)\n        ? getLinkFromElement(editor, editor.selection.getStart())\n        : getLinkInSelection(editor);\n    const setup$1 = (editor) => {\n        const selectedLink = value();\n        const getSelectedLink = () => selectedLink.get().or(getLinkFromSelection(editor));\n        const gotoSelectedLink = () => getSelectedLink().each((link) => gotoLink(editor, link));\n        editor.on('contextmenu', (e) => {\n            getLinkFromElement(editor, e.target).each(selectedLink.set);\n        });\n        editor.on('SelectionChange', () => {\n            if (!selectedLink.isSet()) {\n                getLinkFromSelection(editor).each(selectedLink.set);\n            }\n        });\n        editor.on('click', (e) => {\n            selectedLink.clear();\n            const links = getLinks$1(editor.dom.getParents(e.target));\n            if (links.length === 1 && global.metaKeyPressed(e)) {\n                e.preventDefault();\n                gotoLink(editor, links[0]);\n            }\n        });\n        editor.on('keydown', (e) => {\n            selectedLink.clear();\n            if (!e.isDefaultPrevented() && e.keyCode === 13 && hasOnlyAltModifier(e)) {\n                getSelectedLink().each((link) => {\n                    e.preventDefault();\n                    gotoLink(editor, link);\n                });\n            }\n        });\n        return {\n            gotoSelectedLink\n        };\n    };\n\n    const openDialog = (editor) => () => {\n        editor.execCommand('mceLink', false, { dialog: true });\n    };\n    const toggleState = (editor, toggler) => {\n        editor.on('NodeChange', toggler);\n        return () => editor.off('NodeChange', toggler);\n    };\n    const toggleLinkState = (editor) => (api) => {\n        const updateState = () => {\n            api.setActive(!editor.mode.isReadOnly() && isInAnchor(editor, editor.selection.getNode()));\n            api.setEnabled(editor.selection.isEditable());\n        };\n        updateState();\n        return toggleState(editor, updateState);\n    };\n    const toggleLinkMenuState = (editor) => (api) => {\n        const updateState = () => {\n            api.setEnabled(editor.selection.isEditable());\n        };\n        updateState();\n        return toggleState(editor, updateState);\n    };\n    const toggleRequiresLinkState = (editor) => (api) => {\n        const hasLinks$1 = (parents) => hasLinks(parents) || hasLinksInSelection(editor.selection.getRng());\n        const parents = editor.dom.getParents(editor.selection.getStart());\n        const updateEnabled = (parents) => {\n            api.setEnabled(hasLinks$1(parents) && editor.selection.isEditable());\n        };\n        updateEnabled(parents);\n        return toggleState(editor, (e) => updateEnabled(e.parents));\n    };\n    const setupButtons = (editor, openLink) => {\n        editor.ui.registry.addToggleButton('link', {\n            icon: 'link',\n            tooltip: 'Insert/edit link',\n            shortcut: 'Meta+K',\n            onAction: openDialog(editor),\n            onSetup: toggleLinkState(editor)\n        });\n        editor.ui.registry.addButton('openlink', {\n            icon: 'new-tab',\n            tooltip: 'Open link',\n            onAction: openLink.gotoSelectedLink,\n            onSetup: toggleRequiresLinkState(editor)\n        });\n        editor.ui.registry.addButton('unlink', {\n            icon: 'unlink',\n            tooltip: 'Remove link',\n            onAction: () => unlink(editor),\n            onSetup: toggleRequiresLinkState(editor)\n        });\n    };\n    const setupMenuItems = (editor, openLink) => {\n        editor.ui.registry.addMenuItem('openlink', {\n            text: 'Open link',\n            icon: 'new-tab',\n            onAction: openLink.gotoSelectedLink,\n            onSetup: toggleRequiresLinkState(editor)\n        });\n        editor.ui.registry.addMenuItem('link', {\n            icon: 'link',\n            text: 'Link...',\n            shortcut: 'Meta+K',\n            onAction: openDialog(editor),\n            onSetup: toggleLinkMenuState(editor)\n        });\n        editor.ui.registry.addMenuItem('unlink', {\n            icon: 'unlink',\n            text: 'Remove link',\n            onAction: () => unlink(editor),\n            onSetup: toggleRequiresLinkState(editor)\n        });\n    };\n    const setupContextMenu = (editor) => {\n        const inLink = 'link unlink openlink';\n        const noLink = 'link';\n        editor.ui.registry.addContextMenu('link', {\n            update: (element) => {\n                const isEditable = editor.dom.isEditable(element);\n                if (!isEditable) {\n                    return '';\n                }\n                return hasLinks(editor.dom.getParents(element, 'a')) ? inLink : noLink;\n            }\n        });\n    };\n    const setupContextToolbars = (editor, openLink) => {\n        const collapseSelectionToEnd = (editor) => {\n            editor.selection.collapse(false);\n        };\n        const onSetupLink = (buttonApi) => {\n            const node = editor.selection.getNode();\n            buttonApi.setEnabled(isInAnchor(editor, node) && editor.selection.isEditable());\n            return noop;\n        };\n        /**\n         * if we're editing a link, don't change the text.\n         * if anything other than text is selected, don't change the text.\n         * TINY-9593: If there is a text selection return `Optional.none`\n         * because `mceInsertLink` command will handle the selection.\n         */\n        const getLinkText = (value) => {\n            const anchor = getAnchorElement(editor);\n            const onlyText = isOnlyTextSelected(editor);\n            if (anchor.isNone() && onlyText) {\n                const text = getAnchorText(editor.selection, anchor);\n                return someIf(text.length === 0, value);\n            }\n            else {\n                return Optional.none();\n            }\n        };\n        editor.ui.registry.addContextForm('quicklink', {\n            launch: {\n                type: 'contextformtogglebutton',\n                icon: 'link',\n                tooltip: 'Link',\n                onSetup: toggleLinkState(editor)\n            },\n            label: 'Link',\n            predicate: (node) => hasContextToolbar(editor) && isInAnchor(editor, node),\n            initValue: () => {\n                const elm = getAnchorElement(editor);\n                return elm.fold(constant(''), getHref);\n            },\n            commands: [\n                {\n                    type: 'contextformtogglebutton',\n                    icon: 'link',\n                    tooltip: 'Link',\n                    primary: true,\n                    onSetup: (buttonApi) => {\n                        const node = editor.selection.getNode();\n                        // TODO: Make a test for this later.\n                        buttonApi.setActive(isInAnchor(editor, node));\n                        return toggleLinkState(editor)(buttonApi);\n                    },\n                    onAction: (formApi) => {\n                        const value = formApi.getValue();\n                        const text = getLinkText(value);\n                        const attachState = { href: value, attach: noop };\n                        link(editor, attachState, {\n                            href: value,\n                            text,\n                            title: Optional.none(),\n                            rel: Optional.none(),\n                            target: Optional.from(getDefaultLinkTarget(editor)),\n                            class: Optional.none()\n                        });\n                        collapseSelectionToEnd(editor);\n                        formApi.hide();\n                    }\n                },\n                {\n                    type: 'contextformbutton',\n                    icon: 'unlink',\n                    tooltip: 'Remove link',\n                    onSetup: onSetupLink,\n                    // TODO: The original inlite action was quite complex. Are we missing something with this?\n                    onAction: (formApi) => {\n                        unlink(editor);\n                        formApi.hide();\n                    }\n                },\n                {\n                    type: 'contextformbutton',\n                    icon: 'new-tab',\n                    tooltip: 'Open link',\n                    onSetup: onSetupLink,\n                    onAction: (formApi) => {\n                        openLink.gotoSelectedLink();\n                        formApi.hide();\n                    }\n                }\n            ]\n        });\n    };\n    const setup = (editor) => {\n        const openLink = setup$1(editor);\n        setupButtons(editor, openLink);\n        setupMenuItems(editor, openLink);\n        setupContextMenu(editor);\n        setupContextToolbars(editor, openLink);\n    };\n\n    var Plugin = () => {\n        global$5.add('link', (editor) => {\n            register$1(editor);\n            register(editor);\n            setup(editor);\n            setup$2(editor);\n        });\n    };\n\n    Plugin();\n    /** *****\n     * DO NOT EXPORT ANYTHING\n     *\n     * IF YOU DO ROLLUP WILL LEAVE A GLOBAL ON THE PAGE\n     *******/\n\n})();\n"],"names":["global$5","tinymce","util","Tools","resolve","isType","type","value","x","t","Array","isArray","o","v","proto","constructor","String","prototype","isPrototypeOf","_a","name","typeOf","isSimpleType","isString","isObject","isNull","a","isBoolean","isNonNullable","isNullable","isFunction","isArrayOf","pred","i","len","length","noop","tripleEquals","b","Optional","tag","this","some","none","singletonNone","fold","onNone","onSome","isSome","isNone","map","mapper","bind","binder","exists","predicate","forall","filter","getOr","replacement","or","getOrThunk","thunk","orThunk","getOrDie","message","Error","from","getOrNull","getOrUndefined","each","worker","toArray","toString","slice","nativeIndexOf","indexOf","nativePush","push","contains","xs","ts","call","rawIndexOf","flatten","r","apply","f","findMap","arr","keys","Object","hasOwnProperty","internalFilter","obj","onTrue","onFalse","props","k","has","key","is","lhs","rhs","comparator","left","cat","someIf","subject","doRevoke","initial","get","set","Cell","revoke","clear","isSet","s","singleton","on","startsWith","str","prefix","substr","start","checkRange","option","editor","options","assumeExternalTargets","hasContextToolbar","getLinkList","getDefaultLinkTarget","getDefaultLinkProtocol","getTargetList","getRelList","getLinkClassList","shouldShowLinkTitle","allowUnsafeLinkTarget","useQuickLink","attributesPostProcess","global$4","global$3","global$2","isAnchor","elm","nodeName","toLowerCase","isLink","getHref","collectNodesInRange","rng","collapsed","contents","cloneContents","firstChild","walker","elements","current","next","hasProtocol","url","test","_b","getAttribute","applyRelTargetRules","rel","isUnsafe","rules","rels","split","removeTargetRules","val","inArray","newRels","concat","addTargetRules","trim","sort","join","getAnchorElement","selectedElm","getLinksInSelection","selection","getRng","getNode","isImageFigure","dom","select","getParent","isInAnchor","getAnchorText","anchorElm","text","replace","trimCaretContainers","getContent","format","innerText","textContent","getLinks$1","grep","hasLinks","isOnlyTextSelected","inlineTextElements","schema","getTextInlineElements","isElement","nodeType","anchor","hasAttribute","className","applyLinkOverrides","linkAttrs","newLinkAttrs","newRel","target","href","handleExternalTargets","linkDomMutation","attachState","data","acc","each$1","getLinkAttrs","attributesPostProcess$1","undoManager","transact","attach","linkImageFigure","execCommand","end","getEnd","createRng","setStartAfter","setEndAfter","setRng","insertContent","createHTML","encode","createLink","focus","setAttribs","updateLink","unwrapOptions","class","cls","title","_k","link","sanitizedData","getOption","uriOptions","allow_html_data_urls","allow_script_urls","allow_svg_data_urls","isDomSafe","sanitizeData","hasPlugin","unlink","node","unlinkImageFigure","bookmark","getBookmark","cloneRange","startAnchorElm","startContainer","getBody","endAnchorElm","endContainer","setStartBefore","moveToBookmark","unlinkSelection","unlinkDomMutation","fig","img","getParents","parentNode","insertBefore","remove","attrs","create","appendChild","getValue","item","sanitizeList","list","extractValue","out","getText","undefined","menu","items","sanitizeWith","extracter","ListOptions","sanitize","createUi","label","isListGroup","hasNonNullableKey","findTextByValue","catalog","getDelta","persistentText","fieldName","hasPersistentText","meta","DialogChanges","initialData","linkCatalog","persistentData","onUrlChange","getTitleFromUrlChange","onCatalogChange","change","catalogs","onChange","getData","global$1","tryEmailTransform","preprocess","oldData","tryProtocolTransform","defaultLinkProtocol","DialogConfirms","Promise","transform","callback","setEditorTimeout","windowManager","confirm","state","delayedConfirm","AnchorListOptions","anchorNodes","anchors","id","ClassListOptions","parseJson","JSON","parse","LinkListOptions","extractor","convertURL","linkList","fetch","then","res","ok","reject","output","optItems","RelOptions","initialTarget","isTargetBlank","safeRelExtractor","fallbacks","TargetOptions","nonEmptyAttr","elem","getAttrib","DialogInfo","linkNode","links","linkClass","extractFromAnchor","targets","classes","optNode","flags","titleEnabled","open","anchorNode","collectData","info","onSubmit","api","close","getChangedValue","changedData","pData","handleSubmit","settings","displayText","titleText","defaultTarget","original","getInitialData","dialogDelta","size","body","filetype","picker_text","buttons","primary","newData","setData","makeDialog","spec","global","openLink","document","createElement","evt","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","removeChild","appendClickRemove","gotoLink","targetEl","numChars","substring","removeFromStart","scrollIntoView","getLinkFromElement","element","getLinkFromSelection","isCollapsed","isSelectionOnImageWithEmbeddedLink","getStart","getLinkInSelection","openDialog","dialog","toggleState","toggler","off","toggleLinkState","updateState","setActive","mode","isReadOnly","setEnabled","isEditable","toggleLinkMenuState","toggleRequiresLinkState","hasLinks$1","parents","updateEnabled","e","setupContextToolbars","onSetupLink","buttonApi","ui","registry","addContextForm","launch","icon","tooltip","onSetup","initValue","constant","commands","onAction","formApi","onlyText","getLinkText","collapse","collapseSelectionToEnd","hide","gotoSelectedLink","setup","selectedLink","getSelectedLink","metaKeyPressed","preventDefault","isDefaultPrevented","keyCode","altKey","shiftKey","ctrlKey","metaKey","hasOnlyAltModifier","setup$1","addToggleButton","shortcut","addButton","setupButtons","addMenuItem","setupMenuItems","addContextMenu","update","setupContextMenu","add","registerOption","register","processor","valid","default","register$1","addCommand","_ui","dispatch","toolbarKey","addShortcut","setup$2"],"sourceRoot":""}