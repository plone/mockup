{"version":3,"file":"chunks/6176.4931d33e7b3547419c91.min.js","mappings":"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","sources":["webpack://@plone/mockup/./node_modules/@plone/registry/dist/index.js"],"sourcesContent":["// src/index.ts\nvar Config = class _Config {\n  _data;\n  static instance;\n  constructor() {\n    if (!_Config.instance) {\n      this._data = {\n        settings: {},\n        blocks: {},\n        views: {},\n        widgets: {},\n        slots: {},\n        components: {},\n        utilities: {}\n      };\n      _Config.instance = this;\n    }\n    return _Config.instance;\n  }\n  set(registry, item) {\n    this._data[registry] = item;\n  }\n  get(registry) {\n    return this._data[registry];\n  }\n  get settings() {\n    return this._data.settings;\n  }\n  set settings(settings) {\n    this._data.settings = settings;\n  }\n  get experimental() {\n    return this._data.experimental;\n  }\n  set experimental(experimental) {\n    this._data.experimental = experimental;\n  }\n  get blocks() {\n    return this._data.blocks;\n  }\n  set blocks(blocks) {\n    this._data.blocks = blocks;\n  }\n  get views() {\n    return this._data.views;\n  }\n  set views(views) {\n    this._data.views = views;\n  }\n  get widgets() {\n    return this._data.widgets;\n  }\n  set widgets(widgets) {\n    this._data.widgets = widgets;\n  }\n  get addonReducers() {\n    return this._data.addonReducers;\n  }\n  set addonReducers(addonReducers) {\n    this._data.addonReducers = addonReducers;\n  }\n  get addonRoutes() {\n    return this._data.addonRoutes;\n  }\n  set addonRoutes(addonRoutes) {\n    this._data.addonRoutes = addonRoutes;\n  }\n  get routes() {\n    return this._data.routes;\n  }\n  set routes(routes) {\n    this._data.routes = routes;\n  }\n  get slots() {\n    return this._data.slots;\n  }\n  set slots(slots) {\n    this._data.slots = slots;\n  }\n  get components() {\n    return this._data.components;\n  }\n  set components(components) {\n    this._data.components = components;\n  }\n  get utilities() {\n    return this._data.utilities;\n  }\n  set utilities(utilities) {\n    this._data.utilities = utilities;\n  }\n  getComponent(options) {\n    if (typeof options === \"object\") {\n      const { name, dependencies = \"\" } = options;\n      let depsString = \"\";\n      if (dependencies && Array.isArray(dependencies)) {\n        depsString = dependencies.join(\"+\");\n      } else if (typeof dependencies === \"string\") {\n        depsString = dependencies;\n      }\n      const componentName = `${name}${depsString ? `|${depsString}` : \"\"}`;\n      return this._data.components[componentName] || {};\n    } else {\n      const componentName = options;\n      return this._data.components[componentName] || {};\n    }\n  }\n  registerComponent(options) {\n    const { name, component, dependencies = \"\" } = options;\n    let depsString = \"\";\n    if (!component) {\n      throw new Error(\"No component provided\");\n    } else {\n      if (dependencies && Array.isArray(dependencies)) {\n        depsString = dependencies.join(\"+\");\n      } else if (typeof dependencies === \"string\") {\n        depsString = dependencies;\n      }\n      const componentName = `${name}${depsString ? `|${depsString}` : \"\"}`;\n      this._data.components[componentName] = { component };\n      try {\n        const displayName = this._data.components[componentName].component.displayName;\n        if (!displayName && typeof this._data.components[componentName].component === \"function\") {\n          this._data.components[componentName].component.displayName = name;\n        }\n      } catch (error) {\n        console.warn(`Not setting the component displayName because ${error}`);\n      }\n    }\n  }\n  getSlot(name, args) {\n    if (!this._data.slots[name]) {\n      return;\n    }\n    const { slots, data } = this._data.slots[name];\n    const slotComponents = [];\n    for (const slotName of slots) {\n      let noPredicateComponent;\n      const reversedSlotComponents = data[slotName].slice().reverse();\n      for (const slotComponent of reversedSlotComponents) {\n        let isPredicateTrueFound = false;\n        if (slotComponent.predicates) {\n          isPredicateTrueFound = slotComponent.predicates.every(\n            (predicate) => predicate(args)\n          );\n        } else {\n          noPredicateComponent = slotComponent;\n        }\n        if (isPredicateTrueFound) {\n          slotComponents.push({\n            component: slotComponent.component,\n            name: slotName\n          });\n          noPredicateComponent = void 0;\n          break;\n        }\n      }\n      if (noPredicateComponent) {\n        slotComponents.push({\n          component: noPredicateComponent.component,\n          name: slotName\n        });\n      }\n    }\n    return slotComponents;\n  }\n  registerSlotComponent(options) {\n    const { name, component, predicates, slot } = options;\n    if (!component) {\n      throw new Error(\"No component provided\");\n    }\n    if (!predicates) {\n      const hasRegisteredNoPredicatesComponent = this._data.slots?.[slot]?.data?.[name]?.find(({ predicates: predicates2 }) => !predicates2);\n      if (hasRegisteredNoPredicatesComponent && component !== hasRegisteredNoPredicatesComponent.component) {\n        hasRegisteredNoPredicatesComponent.component = component;\n      }\n    }\n    let currentSlot = this._data.slots[slot];\n    if (!currentSlot) {\n      this._data.slots[slot] = {\n        slots: [],\n        data: {}\n      };\n      currentSlot = this._data.slots[slot];\n    }\n    if (!currentSlot.data[name]) {\n      currentSlot.data[name] = [];\n    }\n    const currentSlotComponents = currentSlot.data[name];\n    if (!currentSlot.slots.includes(name)) {\n      currentSlot.slots.push(name);\n    }\n    const slotComponentData = {\n      component,\n      predicates\n    };\n    try {\n      const displayName = slotComponentData.component.displayName;\n      if (!displayName && typeof slotComponentData?.component === \"function\") {\n        slotComponentData.component.displayName = name;\n      }\n    } catch (error) {\n      console.warn(\n        `Not setting the slot component displayName because ${error}`\n      );\n    }\n    currentSlotComponents.push(slotComponentData);\n  }\n  getSlotComponent(slot, name) {\n    const currentSlot = this._data.slots[slot];\n    if (!slot || !currentSlot) {\n      throw new Error(`No slot ${slot} found`);\n    }\n    const currentSlotComponents = currentSlot.data[name];\n    if (!currentSlotComponents) {\n      throw new Error(`No slot component ${name} in slot ${slot} found`);\n    }\n    return currentSlotComponents;\n  }\n  getSlotComponents(slot) {\n    const currentSlot = this._data.slots[slot];\n    if (!slot || !currentSlot) {\n      throw new Error(`No slot ${slot} found`);\n    }\n    return currentSlot.slots;\n  }\n  reorderSlotComponent({\n    slot,\n    name,\n    position,\n    action,\n    target\n  }) {\n    if (!position && !action) {\n      throw new Error(`At least a position or action is required as argument`);\n    }\n    if (position && action) {\n      throw new Error(\n        `You should provide only one of position or action as arguments`\n      );\n    }\n    if ((action == \"after\" || action == \"before\") && !target) {\n      throw new Error(\n        `No action target set. You should provide the name of a slot component as target when action is 'after' or 'before'.`\n      );\n    }\n    const currentSlot = this._data.slots[slot];\n    if (!slot || !currentSlot) {\n      throw new Error(`No slot ${slot} found`);\n    }\n    const origin = currentSlot.slots.indexOf(name);\n    const result = Array.from(currentSlot.slots);\n    const [removed] = result.splice(origin, 1);\n    if (action) {\n      let targetIdx = 0;\n      if (target) {\n        targetIdx = currentSlot.slots.indexOf(target);\n      }\n      switch (action) {\n        case \"after\":\n          if (targetIdx < origin) {\n            result.splice(targetIdx + 1, 0, removed);\n            break;\n          } else {\n            result.splice(targetIdx, 0, removed);\n            break;\n          }\n        case \"before\":\n          if (targetIdx > origin) {\n            result.splice(targetIdx - 1, 0, removed);\n            break;\n          } else {\n            result.splice(targetIdx, 0, removed);\n            break;\n          }\n        case \"last\":\n          result.push(removed);\n          break;\n        case \"first\":\n          result.unshift(removed);\n          break;\n        default:\n          break;\n      }\n    }\n    if (position) {\n      result.splice(position, 0, removed);\n    }\n    currentSlot.slots = result;\n  }\n  unRegisterSlotComponent(slot, name, position) {\n    const currentSlot = this._data.slots[slot];\n    if (!slot || !currentSlot) {\n      throw new Error(`No slot ${slot} found`);\n    }\n    const currentSlotComponents = currentSlot.data[name];\n    if (!currentSlotComponents) {\n      throw new Error(`No slot component ${name} in slot ${slot} found`);\n    }\n    const result = currentSlotComponents.slice();\n    result.splice(position, 1);\n    currentSlot.data[name] = result;\n    if (result.length === 0) {\n      const index = currentSlot.slots.indexOf(name);\n      if (index > -1) {\n        currentSlot.slots.splice(index, 1);\n      }\n    }\n  }\n  registerUtility(options) {\n    const { name, type, method, dependencies = {} } = options;\n    let depsString = \"\";\n    if (!method) {\n      throw new Error(\"No method provided\");\n    } else {\n      depsString = Object.keys(dependencies).sort().map((key) => `${key}:${dependencies[key]}`).join(\"+\");\n    }\n    const utilityName = `${depsString ? `|${depsString}` : \"\"}${name}`;\n    let utilityType = this._data.utilities[type];\n    if (!utilityType) {\n      this._data.utilities[type] = {};\n      utilityType = this._data.utilities[type];\n    }\n    utilityType[utilityName] = { method };\n  }\n  getUtility(options) {\n    const { name, type, dependencies = {} } = options;\n    if (!name || !type) return {};\n    let depsString = \"\";\n    depsString = Object.keys(dependencies).map((key) => `${key}:${dependencies[key]}`).join(\"+\");\n    const utilityName = `${depsString ? `|${depsString}` : \"\"}${name}`;\n    return this._data.utilities[type]?.[utilityName] || {};\n  }\n  getUtilities(options) {\n    const { type, dependencies = {} } = options;\n    if (!type) return [];\n    let depsString = \"\";\n    depsString = Object.keys(dependencies).map((key) => `${key}:${dependencies[key]}`).join(\"+\");\n    const utilityName = `${depsString ? `|${depsString}` : \"\"}`;\n    const utilitiesKeys = Object.keys(this._data.utilities[type] || {}).filter(\n      (key) => key.startsWith(utilityName)\n    );\n    const utilities = utilitiesKeys.map(\n      (key) => this._data.utilities[type][key]\n    );\n    return utilities;\n  }\n  registerRoute(options) {\n    const route = this._data.routes || [];\n    route.push(options);\n    this._data.routes = route;\n  }\n};\nvar instance = new Config();\nObject.freeze(instance);\nvar src_default = instance;\nexport {\n  src_default as default\n};\n"],"names":["instance","_Config","_data","static","constructor","this","settings","blocks","views","widgets","slots","components","utilities","set","registry","item","get","experimental","addonReducers","addonRoutes","routes","getComponent","options","name","dependencies","depsString","Array","isArray","join","componentName","registerComponent","component","Error","displayName","error","console","warn","getSlot","args","data","slotComponents","slotName","noPredicateComponent","reversedSlotComponents","slice","reverse","slotComponent","isPredicateTrueFound","predicates","every","predicate","push","registerSlotComponent","slot","hasRegisteredNoPredicatesComponent","find","predicates2","currentSlot","currentSlotComponents","includes","slotComponentData","getSlotComponent","getSlotComponents","reorderSlotComponent","position","action","target","origin","indexOf","result","from","removed","splice","targetIdx","unshift","unRegisterSlotComponent","length","index","registerUtility","type","method","Object","keys","sort","map","key","utilityName","utilityType","getUtility","getUtilities","filter","startsWith","registerRoute","route","freeze","src_default"],"sourceRoot":""}