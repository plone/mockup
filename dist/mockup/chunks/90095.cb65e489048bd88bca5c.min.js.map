{"version":3,"file":"chunks/90095.cb65e489048bd88bca5c.min.js","mappings":"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","sources":["webpack://@plone/mockup/./node_modules/tinymce/plugins/link/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 7.2.1 (2024-07-03)\n */\n\n(function () {\n    'use strict';\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const eq = t => a => t === a;\n    const isString = isType('string');\n    const isObject = isType('object');\n    const isArray = isType('array');\n    const isNull = eq(null);\n    const isBoolean = isSimpleType('boolean');\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isArrayOf = (value, pred) => {\n      if (isArray(value)) {\n        for (let i = 0, len = value.length; i < len; ++i) {\n          if (!pred(value[i])) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    };\n\n    const noop = () => {\n    };\n    const constant = value => {\n      return () => {\n        return value;\n      };\n    };\n    const tripleEquals = (a, b) => {\n      return a === b;\n    };\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const nativeIndexOf = Array.prototype.indexOf;\n    const nativePush = Array.prototype.push;\n    const rawIndexOf = (ts, t) => nativeIndexOf.call(ts, t);\n    const contains = (xs, x) => rawIndexOf(xs, x) > -1;\n    const map = (xs, f) => {\n      const len = xs.length;\n      const r = new Array(len);\n      for (let i = 0; i < len; i++) {\n        const x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    const each$1 = (xs, f) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const foldl = (xs, f, acc) => {\n      each$1(xs, (x, i) => {\n        acc = f(acc, x, i);\n      });\n      return acc;\n    };\n    const flatten = xs => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    const bind = (xs, f) => flatten(map(xs, f));\n    const findMap = (arr, f) => {\n      for (let i = 0; i < arr.length; i++) {\n        const r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Optional.none();\n    };\n\n    const is = (lhs, rhs, comparator = tripleEquals) => lhs.exists(left => comparator(left, rhs));\n    const cat = arr => {\n      const r = [];\n      const push = x => {\n        r.push(x);\n      };\n      for (let i = 0; i < arr.length; i++) {\n        arr[i].each(push);\n      }\n      return r;\n    };\n    const someIf = (b, a) => b ? Optional.some(a) : Optional.none();\n\n    const option = name => editor => editor.options.get(name);\n    const register$1 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('link_assume_external_targets', {\n        processor: value => {\n          const valid = isString(value) || isBoolean(value);\n          if (valid) {\n            if (value === true) {\n              return {\n                value: 1,\n                valid\n              };\n            } else if (value === 'http' || value === 'https') {\n              return {\n                value,\n                valid\n              };\n            } else {\n              return {\n                value: 0,\n                valid\n              };\n            }\n          } else {\n            return {\n              valid: false,\n              message: 'Must be a string or a boolean.'\n            };\n          }\n        },\n        default: false\n      });\n      registerOption('link_context_toolbar', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('link_list', { processor: value => isString(value) || isFunction(value) || isArrayOf(value, isObject) });\n      registerOption('link_default_target', { processor: 'string' });\n      registerOption('link_default_protocol', {\n        processor: 'string',\n        default: 'https'\n      });\n      registerOption('link_target_list', {\n        processor: value => isBoolean(value) || isArrayOf(value, isObject),\n        default: true\n      });\n      registerOption('link_rel_list', {\n        processor: 'object[]',\n        default: []\n      });\n      registerOption('link_class_list', {\n        processor: 'object[]',\n        default: []\n      });\n      registerOption('link_title', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('allow_unsafe_link_target', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('link_quicklink', {\n        processor: 'boolean',\n        default: false\n      });\n    };\n    const assumeExternalTargets = option('link_assume_external_targets');\n    const hasContextToolbar = option('link_context_toolbar');\n    const getLinkList = option('link_list');\n    const getDefaultLinkTarget = option('link_default_target');\n    const getDefaultLinkProtocol = option('link_default_protocol');\n    const getTargetList = option('link_target_list');\n    const getRelList = option('link_rel_list');\n    const getLinkClassList = option('link_class_list');\n    const shouldShowLinkTitle = option('link_title');\n    const allowUnsafeLinkTarget = option('allow_unsafe_link_target');\n    const useQuickLink = option('link_quicklink');\n\n    const keys = Object.keys;\n    const hasOwnProperty = Object.hasOwnProperty;\n    const each = (obj, f) => {\n      const props = keys(obj);\n      for (let k = 0, len = props.length; k < len; k++) {\n        const i = props[k];\n        const x = obj[i];\n        f(x, i);\n      }\n    };\n    const objAcc = r => (x, i) => {\n      r[i] = x;\n    };\n    const internalFilter = (obj, pred, onTrue, onFalse) => {\n      each(obj, (x, i) => {\n        (pred(x, i) ? onTrue : onFalse)(x, i);\n      });\n    };\n    const filter = (obj, pred) => {\n      const t = {};\n      internalFilter(obj, pred, objAcc(t), noop);\n      return t;\n    };\n    const has = (obj, key) => hasOwnProperty.call(obj, key);\n    const hasNonNullableKey = (obj, key) => has(obj, key) && obj[key] !== undefined && obj[key] !== null;\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.util.URI');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.dom.TreeWalker');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const isAnchor = elm => isNonNullable(elm) && elm.nodeName.toLowerCase() === 'a';\n    const isLink = elm => isAnchor(elm) && !!getHref(elm);\n    const collectNodesInRange = (rng, predicate) => {\n      if (rng.collapsed) {\n        return [];\n      } else {\n        const contents = rng.cloneContents();\n        const firstChild = contents.firstChild;\n        const walker = new global$3(firstChild, contents);\n        const elements = [];\n        let current = firstChild;\n        do {\n          if (predicate(current)) {\n            elements.push(current);\n          }\n        } while (current = walker.next());\n        return elements;\n      }\n    };\n    const hasProtocol = url => /^\\w+:/i.test(url);\n    const getHref = elm => {\n      var _a, _b;\n      return (_b = (_a = elm.getAttribute('data-mce-href')) !== null && _a !== void 0 ? _a : elm.getAttribute('href')) !== null && _b !== void 0 ? _b : '';\n    };\n    const applyRelTargetRules = (rel, isUnsafe) => {\n      const rules = ['noopener'];\n      const rels = rel ? rel.split(/\\s+/) : [];\n      const toString = rels => global$2.trim(rels.sort().join(' '));\n      const addTargetRules = rels => {\n        rels = removeTargetRules(rels);\n        return rels.length > 0 ? rels.concat(rules) : rules;\n      };\n      const removeTargetRules = rels => rels.filter(val => global$2.inArray(rules, val) === -1);\n      const newRels = isUnsafe ? addTargetRules(rels) : removeTargetRules(rels);\n      return newRels.length > 0 ? toString(newRels) : '';\n    };\n    const trimCaretContainers = text => text.replace(/\\uFEFF/g, '');\n    const getAnchorElement = (editor, selectedElm) => {\n      selectedElm = selectedElm || getLinksInSelection(editor.selection.getRng())[0] || editor.selection.getNode();\n      if (isImageFigure(selectedElm)) {\n        return Optional.from(editor.dom.select('a[href]', selectedElm)[0]);\n      } else {\n        return Optional.from(editor.dom.getParent(selectedElm, 'a[href]'));\n      }\n    };\n    const isInAnchor = (editor, selectedElm) => getAnchorElement(editor, selectedElm).isSome();\n    const getAnchorText = (selection, anchorElm) => {\n      const text = anchorElm.fold(() => selection.getContent({ format: 'text' }), anchorElm => anchorElm.innerText || anchorElm.textContent || '');\n      return trimCaretContainers(text);\n    };\n    const getLinksInSelection = rng => collectNodesInRange(rng, isLink);\n    const getLinks$1 = elements => global$2.grep(elements, isLink);\n    const hasLinks = elements => getLinks$1(elements).length > 0;\n    const hasLinksInSelection = rng => getLinksInSelection(rng).length > 0;\n    const isOnlyTextSelected = editor => {\n      const inlineTextElements = editor.schema.getTextInlineElements();\n      const isElement = elm => elm.nodeType === 1 && !isAnchor(elm) && !has(inlineTextElements, elm.nodeName.toLowerCase());\n      const isInBlockAnchor = getAnchorElement(editor).exists(anchor => anchor.hasAttribute('data-mce-block'));\n      if (isInBlockAnchor) {\n        return false;\n      }\n      const rng = editor.selection.getRng();\n      if (!rng.collapsed) {\n        const elements = collectNodesInRange(rng, isElement);\n        return elements.length === 0;\n      } else {\n        return true;\n      }\n    };\n    const isImageFigure = elm => isNonNullable(elm) && elm.nodeName === 'FIGURE' && /\\bimage\\b/i.test(elm.className);\n\n    const getLinkAttrs = data => {\n      const attrs = [\n        'title',\n        'rel',\n        'class',\n        'target'\n      ];\n      return foldl(attrs, (acc, key) => {\n        data[key].each(value => {\n          acc[key] = value.length > 0 ? value : null;\n        });\n        return acc;\n      }, { href: data.href });\n    };\n    const handleExternalTargets = (href, assumeExternalTargets) => {\n      if ((assumeExternalTargets === 'http' || assumeExternalTargets === 'https') && !hasProtocol(href)) {\n        return assumeExternalTargets + '://' + href;\n      }\n      return href;\n    };\n    const applyLinkOverrides = (editor, linkAttrs) => {\n      const newLinkAttrs = { ...linkAttrs };\n      if (getRelList(editor).length === 0 && !allowUnsafeLinkTarget(editor)) {\n        const newRel = applyRelTargetRules(newLinkAttrs.rel, newLinkAttrs.target === '_blank');\n        newLinkAttrs.rel = newRel ? newRel : null;\n      }\n      if (Optional.from(newLinkAttrs.target).isNone() && getTargetList(editor) === false) {\n        newLinkAttrs.target = getDefaultLinkTarget(editor);\n      }\n      newLinkAttrs.href = handleExternalTargets(newLinkAttrs.href, assumeExternalTargets(editor));\n      return newLinkAttrs;\n    };\n    const updateLink = (editor, anchorElm, text, linkAttrs) => {\n      text.each(text => {\n        if (has(anchorElm, 'innerText')) {\n          anchorElm.innerText = text;\n        } else {\n          anchorElm.textContent = text;\n        }\n      });\n      editor.dom.setAttribs(anchorElm, linkAttrs);\n      editor.selection.select(anchorElm);\n    };\n    const createLink = (editor, selectedElm, text, linkAttrs) => {\n      const dom = editor.dom;\n      if (isImageFigure(selectedElm)) {\n        linkImageFigure(dom, selectedElm, linkAttrs);\n      } else {\n        text.fold(() => {\n          editor.execCommand('mceInsertLink', false, linkAttrs);\n        }, text => {\n          editor.insertContent(dom.createHTML('a', linkAttrs, dom.encode(text)));\n        });\n      }\n    };\n    const linkDomMutation = (editor, attachState, data) => {\n      const selectedElm = editor.selection.getNode();\n      const anchorElm = getAnchorElement(editor, selectedElm);\n      const linkAttrs = applyLinkOverrides(editor, getLinkAttrs(data));\n      editor.undoManager.transact(() => {\n        if (data.href === attachState.href) {\n          attachState.attach();\n        }\n        anchorElm.fold(() => {\n          createLink(editor, selectedElm, data.text, linkAttrs);\n        }, elm => {\n          editor.focus();\n          updateLink(editor, elm, data.text, linkAttrs);\n        });\n      });\n    };\n    const unlinkSelection = editor => {\n      const dom = editor.dom, selection = editor.selection;\n      const bookmark = selection.getBookmark();\n      const rng = selection.getRng().cloneRange();\n      const startAnchorElm = dom.getParent(rng.startContainer, 'a[href]', editor.getBody());\n      const endAnchorElm = dom.getParent(rng.endContainer, 'a[href]', editor.getBody());\n      if (startAnchorElm) {\n        rng.setStartBefore(startAnchorElm);\n      }\n      if (endAnchorElm) {\n        rng.setEndAfter(endAnchorElm);\n      }\n      selection.setRng(rng);\n      editor.execCommand('unlink');\n      selection.moveToBookmark(bookmark);\n    };\n    const unlinkDomMutation = editor => {\n      editor.undoManager.transact(() => {\n        const node = editor.selection.getNode();\n        if (isImageFigure(node)) {\n          unlinkImageFigure(editor, node);\n        } else {\n          unlinkSelection(editor);\n        }\n        editor.focus();\n      });\n    };\n    const unwrapOptions = data => {\n      const {\n        class: cls,\n        href,\n        rel,\n        target,\n        text,\n        title\n      } = data;\n      return filter({\n        class: cls.getOrNull(),\n        href,\n        rel: rel.getOrNull(),\n        target: target.getOrNull(),\n        text: text.getOrNull(),\n        title: title.getOrNull()\n      }, (v, _k) => isNull(v) === false);\n    };\n    const sanitizeData = (editor, data) => {\n      const getOption = editor.options.get;\n      const uriOptions = {\n        allow_html_data_urls: getOption('allow_html_data_urls'),\n        allow_script_urls: getOption('allow_script_urls'),\n        allow_svg_data_urls: getOption('allow_svg_data_urls')\n      };\n      const href = data.href;\n      return {\n        ...data,\n        href: global$4.isDomSafe(href, 'a', uriOptions) ? href : ''\n      };\n    };\n    const link = (editor, attachState, data) => {\n      const sanitizedData = sanitizeData(editor, data);\n      editor.hasPlugin('rtc', true) ? editor.execCommand('createlink', false, unwrapOptions(sanitizedData)) : linkDomMutation(editor, attachState, sanitizedData);\n    };\n    const unlink = editor => {\n      editor.hasPlugin('rtc', true) ? editor.execCommand('unlink') : unlinkDomMutation(editor);\n    };\n    const unlinkImageFigure = (editor, fig) => {\n      var _a;\n      const img = editor.dom.select('img', fig)[0];\n      if (img) {\n        const a = editor.dom.getParents(img, 'a[href]', fig)[0];\n        if (a) {\n          (_a = a.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(img, a);\n          editor.dom.remove(a);\n        }\n      }\n    };\n    const linkImageFigure = (dom, fig, attrs) => {\n      var _a;\n      const img = dom.select('img', fig)[0];\n      if (img) {\n        const a = dom.create('a', attrs);\n        (_a = img.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(a, img);\n        a.appendChild(img);\n      }\n    };\n\n    const getValue = item => isString(item.value) ? item.value : '';\n    const getText = item => {\n      if (isString(item.text)) {\n        return item.text;\n      } else if (isString(item.title)) {\n        return item.title;\n      } else {\n        return '';\n      }\n    };\n    const sanitizeList = (list, extractValue) => {\n      const out = [];\n      global$2.each(list, item => {\n        const text = getText(item);\n        if (item.menu !== undefined) {\n          const items = sanitizeList(item.menu, extractValue);\n          out.push({\n            text,\n            items\n          });\n        } else {\n          const value = extractValue(item);\n          out.push({\n            text,\n            value\n          });\n        }\n      });\n      return out;\n    };\n    const sanitizeWith = (extracter = getValue) => list => Optional.from(list).map(list => sanitizeList(list, extracter));\n    const sanitize = list => sanitizeWith(getValue)(list);\n    const createUi = (name, label) => items => ({\n      name,\n      type: 'listbox',\n      label,\n      items\n    });\n    const ListOptions = {\n      sanitize,\n      sanitizeWith,\n      createUi,\n      getValue\n    };\n\n    const isListGroup = item => hasNonNullableKey(item, 'items');\n    const findTextByValue = (value, catalog) => findMap(catalog, item => {\n      if (isListGroup(item)) {\n        return findTextByValue(value, item.items);\n      } else {\n        return someIf(item.value === value, item);\n      }\n    });\n    const getDelta = (persistentText, fieldName, catalog, data) => {\n      const value = data[fieldName];\n      const hasPersistentText = persistentText.length > 0;\n      return value !== undefined ? findTextByValue(value, catalog).map(i => ({\n        url: {\n          value: i.value,\n          meta: {\n            text: hasPersistentText ? persistentText : i.text,\n            attach: noop\n          }\n        },\n        text: hasPersistentText ? persistentText : i.text\n      })) : Optional.none();\n    };\n    const findCatalog = (catalogs, fieldName) => {\n      if (fieldName === 'link') {\n        return catalogs.link;\n      } else if (fieldName === 'anchor') {\n        return catalogs.anchor;\n      } else {\n        return Optional.none();\n      }\n    };\n    const init = (initialData, linkCatalog) => {\n      const persistentData = {\n        text: initialData.text,\n        title: initialData.title\n      };\n      const getTitleFromUrlChange = url => {\n        var _a;\n        return someIf(persistentData.title.length <= 0, Optional.from((_a = url.meta) === null || _a === void 0 ? void 0 : _a.title).getOr(''));\n      };\n      const getTextFromUrlChange = url => {\n        var _a;\n        return someIf(persistentData.text.length <= 0, Optional.from((_a = url.meta) === null || _a === void 0 ? void 0 : _a.text).getOr(url.value));\n      };\n      const onUrlChange = data => {\n        const text = getTextFromUrlChange(data.url);\n        const title = getTitleFromUrlChange(data.url);\n        if (text.isSome() || title.isSome()) {\n          return Optional.some({\n            ...text.map(text => ({ text })).getOr({}),\n            ...title.map(title => ({ title })).getOr({})\n          });\n        } else {\n          return Optional.none();\n        }\n      };\n      const onCatalogChange = (data, change) => {\n        const catalog = findCatalog(linkCatalog, change).getOr([]);\n        return getDelta(persistentData.text, change, catalog, data);\n      };\n      const onChange = (getData, change) => {\n        const name = change.name;\n        if (name === 'url') {\n          return onUrlChange(getData());\n        } else if (contains([\n            'anchor',\n            'link'\n          ], name)) {\n          return onCatalogChange(getData(), name);\n        } else if (name === 'text' || name === 'title') {\n          persistentData[name] = getData()[name];\n          return Optional.none();\n        } else {\n          return Optional.none();\n        }\n      };\n      return { onChange };\n    };\n    const DialogChanges = {\n      init,\n      getDelta\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    const delayedConfirm = (editor, message, callback) => {\n      const rng = editor.selection.getRng();\n      global$1.setEditorTimeout(editor, () => {\n        editor.windowManager.confirm(message, state => {\n          editor.selection.setRng(rng);\n          callback(state);\n        });\n      });\n    };\n    const tryEmailTransform = data => {\n      const url = data.href;\n      const suggestMailTo = url.indexOf('@') > 0 && url.indexOf('/') === -1 && url.indexOf('mailto:') === -1;\n      return suggestMailTo ? Optional.some({\n        message: 'The URL you entered seems to be an email address. Do you want to add the required mailto: prefix?',\n        preprocess: oldData => ({\n          ...oldData,\n          href: 'mailto:' + url\n        })\n      }) : Optional.none();\n    };\n    const tryProtocolTransform = (assumeExternalTargets, defaultLinkProtocol) => data => {\n      const url = data.href;\n      const suggestProtocol = assumeExternalTargets === 1 && !hasProtocol(url) || assumeExternalTargets === 0 && /^\\s*www(\\.|\\d\\.)/i.test(url);\n      return suggestProtocol ? Optional.some({\n        message: `The URL you entered seems to be an external link. Do you want to add the required ${ defaultLinkProtocol }:// prefix?`,\n        preprocess: oldData => ({\n          ...oldData,\n          href: defaultLinkProtocol + '://' + url\n        })\n      }) : Optional.none();\n    };\n    const preprocess = (editor, data) => findMap([\n      tryEmailTransform,\n      tryProtocolTransform(assumeExternalTargets(editor), getDefaultLinkProtocol(editor))\n    ], f => f(data)).fold(() => Promise.resolve(data), transform => new Promise(callback => {\n      delayedConfirm(editor, transform.message, state => {\n        callback(state ? transform.preprocess(data) : data);\n      });\n    }));\n    const DialogConfirms = { preprocess };\n\n    const getAnchors = editor => {\n      const anchorNodes = editor.dom.select('a:not([href])');\n      const anchors = bind(anchorNodes, anchor => {\n        const id = anchor.name || anchor.id;\n        return id ? [{\n            text: id,\n            value: '#' + id\n          }] : [];\n      });\n      return anchors.length > 0 ? Optional.some([{\n          text: 'None',\n          value: ''\n        }].concat(anchors)) : Optional.none();\n    };\n    const AnchorListOptions = { getAnchors };\n\n    const getClasses = editor => {\n      const list = getLinkClassList(editor);\n      if (list.length > 0) {\n        return ListOptions.sanitize(list);\n      }\n      return Optional.none();\n    };\n    const ClassListOptions = { getClasses };\n\n    const parseJson = text => {\n      try {\n        return Optional.some(JSON.parse(text));\n      } catch (err) {\n        return Optional.none();\n      }\n    };\n    const getLinks = editor => {\n      const extractor = item => editor.convertURL(item.value || item.url || '', 'href');\n      const linkList = getLinkList(editor);\n      return new Promise(resolve => {\n        if (isString(linkList)) {\n          fetch(linkList).then(res => res.ok ? res.text().then(parseJson) : Promise.reject()).then(resolve, () => resolve(Optional.none()));\n        } else if (isFunction(linkList)) {\n          linkList(output => resolve(Optional.some(output)));\n        } else {\n          resolve(Optional.from(linkList));\n        }\n      }).then(optItems => optItems.bind(ListOptions.sanitizeWith(extractor)).map(items => {\n        if (items.length > 0) {\n          const noneItem = [{\n              text: 'None',\n              value: ''\n            }];\n          return noneItem.concat(items);\n        } else {\n          return items;\n        }\n      }));\n    };\n    const LinkListOptions = { getLinks };\n\n    const getRels = (editor, initialTarget) => {\n      const list = getRelList(editor);\n      if (list.length > 0) {\n        const isTargetBlank = is(initialTarget, '_blank');\n        const enforceSafe = allowUnsafeLinkTarget(editor) === false;\n        const safeRelExtractor = item => applyRelTargetRules(ListOptions.getValue(item), isTargetBlank);\n        const sanitizer = enforceSafe ? ListOptions.sanitizeWith(safeRelExtractor) : ListOptions.sanitize;\n        return sanitizer(list);\n      }\n      return Optional.none();\n    };\n    const RelOptions = { getRels };\n\n    const fallbacks = [\n      {\n        text: 'Current window',\n        value: ''\n      },\n      {\n        text: 'New window',\n        value: '_blank'\n      }\n    ];\n    const getTargets = editor => {\n      const list = getTargetList(editor);\n      if (isArray(list)) {\n        return ListOptions.sanitize(list).orThunk(() => Optional.some(fallbacks));\n      } else if (list === false) {\n        return Optional.none();\n      }\n      return Optional.some(fallbacks);\n    };\n    const TargetOptions = { getTargets };\n\n    const nonEmptyAttr = (dom, elem, name) => {\n      const val = dom.getAttrib(elem, name);\n      return val !== null && val.length > 0 ? Optional.some(val) : Optional.none();\n    };\n    const extractFromAnchor = (editor, anchor) => {\n      const dom = editor.dom;\n      const onlyText = isOnlyTextSelected(editor);\n      const text = onlyText ? Optional.some(getAnchorText(editor.selection, anchor)) : Optional.none();\n      const url = anchor.bind(anchorElm => Optional.from(dom.getAttrib(anchorElm, 'href')));\n      const target = anchor.bind(anchorElm => Optional.from(dom.getAttrib(anchorElm, 'target')));\n      const rel = anchor.bind(anchorElm => nonEmptyAttr(dom, anchorElm, 'rel'));\n      const linkClass = anchor.bind(anchorElm => nonEmptyAttr(dom, anchorElm, 'class'));\n      const title = anchor.bind(anchorElm => nonEmptyAttr(dom, anchorElm, 'title'));\n      return {\n        url,\n        text,\n        title,\n        target,\n        rel,\n        linkClass\n      };\n    };\n    const collect = (editor, linkNode) => LinkListOptions.getLinks(editor).then(links => {\n      const anchor = extractFromAnchor(editor, linkNode);\n      return {\n        anchor,\n        catalogs: {\n          targets: TargetOptions.getTargets(editor),\n          rels: RelOptions.getRels(editor, anchor.target),\n          classes: ClassListOptions.getClasses(editor),\n          anchor: AnchorListOptions.getAnchors(editor),\n          link: links\n        },\n        optNode: linkNode,\n        flags: { titleEnabled: shouldShowLinkTitle(editor) }\n      };\n    });\n    const DialogInfo = { collect };\n\n    const handleSubmit = (editor, info) => api => {\n      const data = api.getData();\n      if (!data.url.value) {\n        unlink(editor);\n        api.close();\n        return;\n      }\n      const getChangedValue = key => Optional.from(data[key]).filter(value => !is(info.anchor[key], value));\n      const changedData = {\n        href: data.url.value,\n        text: getChangedValue('text'),\n        target: getChangedValue('target'),\n        rel: getChangedValue('rel'),\n        class: getChangedValue('linkClass'),\n        title: getChangedValue('title')\n      };\n      const attachState = {\n        href: data.url.value,\n        attach: data.url.meta !== undefined && data.url.meta.attach ? data.url.meta.attach : noop\n      };\n      DialogConfirms.preprocess(editor, changedData).then(pData => {\n        link(editor, attachState, pData);\n      });\n      api.close();\n    };\n    const collectData = editor => {\n      const anchorNode = getAnchorElement(editor);\n      return DialogInfo.collect(editor, anchorNode);\n    };\n    const getInitialData = (info, defaultTarget) => {\n      const anchor = info.anchor;\n      const url = anchor.url.getOr('');\n      return {\n        url: {\n          value: url,\n          meta: { original: { value: url } }\n        },\n        text: anchor.text.getOr(''),\n        title: anchor.title.getOr(''),\n        anchor: url,\n        link: url,\n        rel: anchor.rel.getOr(''),\n        target: anchor.target.or(defaultTarget).getOr(''),\n        linkClass: anchor.linkClass.getOr('')\n      };\n    };\n    const makeDialog = (settings, onSubmit, editor) => {\n      const urlInput = [{\n          name: 'url',\n          type: 'urlinput',\n          filetype: 'file',\n          label: 'URL',\n          picker_text: 'Browse links'\n        }];\n      const displayText = settings.anchor.text.map(() => ({\n        name: 'text',\n        type: 'input',\n        label: 'Text to display'\n      })).toArray();\n      const titleText = settings.flags.titleEnabled ? [{\n          name: 'title',\n          type: 'input',\n          label: 'Title'\n        }] : [];\n      const defaultTarget = Optional.from(getDefaultLinkTarget(editor));\n      const initialData = getInitialData(settings, defaultTarget);\n      const catalogs = settings.catalogs;\n      const dialogDelta = DialogChanges.init(initialData, catalogs);\n      const body = {\n        type: 'panel',\n        items: flatten([\n          urlInput,\n          displayText,\n          titleText,\n          cat([\n            catalogs.anchor.map(ListOptions.createUi('anchor', 'Anchors')),\n            catalogs.rels.map(ListOptions.createUi('rel', 'Rel')),\n            catalogs.targets.map(ListOptions.createUi('target', 'Open link in...')),\n            catalogs.link.map(ListOptions.createUi('link', 'Link list')),\n            catalogs.classes.map(ListOptions.createUi('linkClass', 'Class'))\n          ])\n        ])\n      };\n      return {\n        title: 'Insert/Edit Link',\n        size: 'normal',\n        body,\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData,\n        onChange: (api, {name}) => {\n          dialogDelta.onChange(api.getData, { name }).each(newData => {\n            api.setData(newData);\n          });\n        },\n        onSubmit\n      };\n    };\n    const open = editor => {\n      const data = collectData(editor);\n      data.then(info => {\n        const onSubmit = handleSubmit(editor, info);\n        return makeDialog(info, onSubmit, editor);\n      }).then(spec => {\n        editor.windowManager.open(spec);\n      });\n    };\n\n    const register = editor => {\n      editor.addCommand('mceLink', (_ui, value) => {\n        if ((value === null || value === void 0 ? void 0 : value.dialog) === true || !useQuickLink(editor)) {\n          open(editor);\n        } else {\n          editor.dispatch('contexttoolbar-show', { toolbarKey: 'quicklink' });\n        }\n      });\n    };\n\n    const setup$2 = editor => {\n      editor.addShortcut('Meta+K', '', () => {\n        editor.execCommand('mceLink');\n      });\n    };\n\n    const Cell = initial => {\n      let value = initial;\n      const get = () => {\n        return value;\n      };\n      const set = v => {\n        value = v;\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    const singleton = doRevoke => {\n      const subject = Cell(Optional.none());\n      const revoke = () => subject.get().each(doRevoke);\n      const clear = () => {\n        revoke();\n        subject.set(Optional.none());\n      };\n      const isSet = () => subject.get().isSome();\n      const get = () => subject.get();\n      const set = s => {\n        revoke();\n        subject.set(Optional.some(s));\n      };\n      return {\n        clear,\n        isSet,\n        get,\n        set\n      };\n    };\n    const value = () => {\n      const subject = singleton(noop);\n      const on = f => subject.get().each(f);\n      return {\n        ...subject,\n        on\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    const appendClickRemove = (link, evt) => {\n      document.body.appendChild(link);\n      link.dispatchEvent(evt);\n      document.body.removeChild(link);\n    };\n    const openLink = url => {\n      const link = document.createElement('a');\n      link.target = '_blank';\n      link.href = url;\n      link.rel = 'noreferrer noopener';\n      const evt = new MouseEvent('click', {\n        bubbles: true,\n        cancelable: true,\n        view: window\n      });\n      document.dispatchEvent(evt);\n      appendClickRemove(link, evt);\n    };\n    const hasOnlyAltModifier = e => {\n      return e.altKey === true && e.shiftKey === false && e.ctrlKey === false && e.metaKey === false;\n    };\n    const gotoLink = (editor, a) => {\n      if (a) {\n        const href = getHref(a);\n        if (/^#/.test(href)) {\n          const targetEl = editor.dom.select(href);\n          if (targetEl.length) {\n            editor.selection.scrollIntoView(targetEl[0], true);\n          }\n        } else {\n          openLink(a.href);\n        }\n      }\n    };\n    const isSelectionOnImageWithEmbeddedLink = editor => {\n      const rng = editor.selection.getRng();\n      const node = rng.startContainer;\n      return isLink(node) && rng.startContainer === rng.endContainer && editor.dom.select('img', node).length === 1;\n    };\n    const getLinkFromElement = (editor, element) => {\n      const links = getLinks$1(editor.dom.getParents(element));\n      return someIf(links.length === 1, links[0]);\n    };\n    const getLinkInSelection = editor => {\n      const links = getLinksInSelection(editor.selection.getRng());\n      return someIf(links.length > 0, links[0]).or(getLinkFromElement(editor, editor.selection.getNode()));\n    };\n    const getLinkFromSelection = editor => editor.selection.isCollapsed() || isSelectionOnImageWithEmbeddedLink(editor) ? getLinkFromElement(editor, editor.selection.getStart()) : getLinkInSelection(editor);\n    const setup$1 = editor => {\n      const selectedLink = value();\n      const getSelectedLink = () => selectedLink.get().or(getLinkFromSelection(editor));\n      const gotoSelectedLink = () => getSelectedLink().each(link => gotoLink(editor, link));\n      editor.on('contextmenu', e => {\n        getLinkFromElement(editor, e.target).each(selectedLink.set);\n      });\n      editor.on('SelectionChange', () => {\n        if (!selectedLink.isSet()) {\n          getLinkFromSelection(editor).each(selectedLink.set);\n        }\n      });\n      editor.on('click', e => {\n        selectedLink.clear();\n        const links = getLinks$1(editor.dom.getParents(e.target));\n        if (links.length === 1 && global.metaKeyPressed(e)) {\n          e.preventDefault();\n          gotoLink(editor, links[0]);\n        }\n      });\n      editor.on('keydown', e => {\n        selectedLink.clear();\n        if (!e.isDefaultPrevented() && e.keyCode === 13 && hasOnlyAltModifier(e)) {\n          getSelectedLink().each(link => {\n            e.preventDefault();\n            gotoLink(editor, link);\n          });\n        }\n      });\n      return { gotoSelectedLink };\n    };\n\n    const openDialog = editor => () => {\n      editor.execCommand('mceLink', false, { dialog: true });\n    };\n    const toggleState = (editor, toggler) => {\n      editor.on('NodeChange', toggler);\n      return () => editor.off('NodeChange', toggler);\n    };\n    const toggleLinkState = editor => api => {\n      const updateState = () => {\n        api.setActive(!editor.mode.isReadOnly() && isInAnchor(editor, editor.selection.getNode()));\n        api.setEnabled(editor.selection.isEditable());\n      };\n      updateState();\n      return toggleState(editor, updateState);\n    };\n    const toggleLinkMenuState = editor => api => {\n      const updateState = () => {\n        api.setEnabled(editor.selection.isEditable());\n      };\n      updateState();\n      return toggleState(editor, updateState);\n    };\n    const toggleRequiresLinkState = editor => api => {\n      const hasLinks$1 = parents => hasLinks(parents) || hasLinksInSelection(editor.selection.getRng());\n      const parents = editor.dom.getParents(editor.selection.getStart());\n      const updateEnabled = parents => {\n        api.setEnabled(hasLinks$1(parents) && editor.selection.isEditable());\n      };\n      updateEnabled(parents);\n      return toggleState(editor, e => updateEnabled(e.parents));\n    };\n    const setupButtons = (editor, openLink) => {\n      editor.ui.registry.addToggleButton('link', {\n        icon: 'link',\n        tooltip: 'Insert/edit link',\n        shortcut: 'Meta+K',\n        onAction: openDialog(editor),\n        onSetup: toggleLinkState(editor)\n      });\n      editor.ui.registry.addButton('openlink', {\n        icon: 'new-tab',\n        tooltip: 'Open link',\n        onAction: openLink.gotoSelectedLink,\n        onSetup: toggleRequiresLinkState(editor)\n      });\n      editor.ui.registry.addButton('unlink', {\n        icon: 'unlink',\n        tooltip: 'Remove link',\n        onAction: () => unlink(editor),\n        onSetup: toggleRequiresLinkState(editor)\n      });\n    };\n    const setupMenuItems = (editor, openLink) => {\n      editor.ui.registry.addMenuItem('openlink', {\n        text: 'Open link',\n        icon: 'new-tab',\n        onAction: openLink.gotoSelectedLink,\n        onSetup: toggleRequiresLinkState(editor)\n      });\n      editor.ui.registry.addMenuItem('link', {\n        icon: 'link',\n        text: 'Link...',\n        shortcut: 'Meta+K',\n        onAction: openDialog(editor),\n        onSetup: toggleLinkMenuState(editor)\n      });\n      editor.ui.registry.addMenuItem('unlink', {\n        icon: 'unlink',\n        text: 'Remove link',\n        onAction: () => unlink(editor),\n        onSetup: toggleRequiresLinkState(editor)\n      });\n    };\n    const setupContextMenu = editor => {\n      const inLink = 'link unlink openlink';\n      const noLink = 'link';\n      editor.ui.registry.addContextMenu('link', {\n        update: element => {\n          const isEditable = editor.dom.isEditable(element);\n          if (!isEditable) {\n            return '';\n          }\n          return hasLinks(editor.dom.getParents(element, 'a')) ? inLink : noLink;\n        }\n      });\n    };\n    const setupContextToolbars = (editor, openLink) => {\n      const collapseSelectionToEnd = editor => {\n        editor.selection.collapse(false);\n      };\n      const onSetupLink = buttonApi => {\n        const node = editor.selection.getNode();\n        buttonApi.setEnabled(isInAnchor(editor, node));\n        return noop;\n      };\n      const getLinkText = value => {\n        const anchor = getAnchorElement(editor);\n        const onlyText = isOnlyTextSelected(editor);\n        if (anchor.isNone() && onlyText) {\n          const text = getAnchorText(editor.selection, anchor);\n          return someIf(text.length === 0, value);\n        } else {\n          return Optional.none();\n        }\n      };\n      editor.ui.registry.addContextForm('quicklink', {\n        launch: {\n          type: 'contextformtogglebutton',\n          icon: 'link',\n          tooltip: 'Link',\n          onSetup: toggleLinkState(editor)\n        },\n        label: 'Link',\n        predicate: node => hasContextToolbar(editor) && isInAnchor(editor, node),\n        initValue: () => {\n          const elm = getAnchorElement(editor);\n          return elm.fold(constant(''), getHref);\n        },\n        commands: [\n          {\n            type: 'contextformtogglebutton',\n            icon: 'link',\n            tooltip: 'Link',\n            primary: true,\n            onSetup: buttonApi => {\n              const node = editor.selection.getNode();\n              buttonApi.setActive(isInAnchor(editor, node));\n              return toggleLinkState(editor)(buttonApi);\n            },\n            onAction: formApi => {\n              const value = formApi.getValue();\n              const text = getLinkText(value);\n              const attachState = {\n                href: value,\n                attach: noop\n              };\n              link(editor, attachState, {\n                href: value,\n                text,\n                title: Optional.none(),\n                rel: Optional.none(),\n                target: Optional.from(getDefaultLinkTarget(editor)),\n                class: Optional.none()\n              });\n              collapseSelectionToEnd(editor);\n              formApi.hide();\n            }\n          },\n          {\n            type: 'contextformbutton',\n            icon: 'unlink',\n            tooltip: 'Remove link',\n            onSetup: onSetupLink,\n            onAction: formApi => {\n              unlink(editor);\n              formApi.hide();\n            }\n          },\n          {\n            type: 'contextformbutton',\n            icon: 'new-tab',\n            tooltip: 'Open link',\n            onSetup: onSetupLink,\n            onAction: formApi => {\n              openLink.gotoSelectedLink();\n              formApi.hide();\n            }\n          }\n        ]\n      });\n    };\n    const setup = editor => {\n      const openLink = setup$1(editor);\n      setupButtons(editor, openLink);\n      setupMenuItems(editor, openLink);\n      setupContextMenu(editor);\n      setupContextToolbars(editor, openLink);\n    };\n\n    var Plugin = () => {\n      global$5.add('link', editor => {\n        register$1(editor);\n        register(editor);\n        setup(editor);\n        setup$2(editor);\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["global$5","tinymce","util","Tools","resolve","isType","type","value","x","t","Array","isArray","o","v","proto","constructor","String","prototype","isPrototypeOf","_a","name","typeOf","isSimpleType","isString","isObject","isNull","a","isBoolean","isNonNullable","isNullable","isFunction","isArrayOf","pred","i","len","length","noop","tripleEquals","b","Optional","tag","this","some","none","singletonNone","fold","onNone","onSome","isSome","isNone","map","mapper","bind","binder","exists","predicate","forall","filter","getOr","replacement","or","getOrThunk","thunk","orThunk","getOrDie","message","Error","from","getOrNull","getOrUndefined","each","worker","toArray","toString","nativeIndexOf","indexOf","nativePush","push","contains","xs","ts","call","rawIndexOf","flatten","r","apply","f","findMap","arr","is","lhs","rhs","comparator","left","cat","someIf","option","editor","options","get","assumeExternalTargets","hasContextToolbar","getLinkList","getDefaultLinkTarget","getDefaultLinkProtocol","getTargetList","getRelList","getLinkClassList","shouldShowLinkTitle","allowUnsafeLinkTarget","useQuickLink","keys","Object","hasOwnProperty","internalFilter","obj","onTrue","onFalse","props","k","has","key","global$4","global$3","global$2","isAnchor","elm","nodeName","toLowerCase","isLink","getHref","collectNodesInRange","rng","collapsed","contents","cloneContents","firstChild","walker","elements","current","next","hasProtocol","url","test","_b","getAttribute","applyRelTargetRules","rel","isUnsafe","rules","rels","split","removeTargetRules","val","inArray","newRels","concat","addTargetRules","trim","sort","join","getAnchorElement","selectedElm","getLinksInSelection","selection","getRng","getNode","isImageFigure","dom","select","getParent","isInAnchor","getAnchorText","anchorElm","text","replace","trimCaretContainers","getContent","format","innerText","textContent","getLinks$1","grep","hasLinks","isOnlyTextSelected","inlineTextElements","schema","getTextInlineElements","isElement","nodeType","anchor","hasAttribute","className","applyLinkOverrides","linkAttrs","newLinkAttrs","newRel","target","href","handleExternalTargets","linkDomMutation","attachState","data","acc","each$1","getLinkAttrs","undoManager","transact","attach","linkImageFigure","execCommand","insertContent","createHTML","encode","createLink","focus","setAttribs","updateLink","unwrapOptions","class","cls","title","_k","link","sanitizedData","getOption","uriOptions","allow_html_data_urls","allow_script_urls","allow_svg_data_urls","isDomSafe","sanitizeData","hasPlugin","unlink","node","unlinkImageFigure","bookmark","getBookmark","cloneRange","startAnchorElm","startContainer","getBody","endAnchorElm","endContainer","setStartBefore","setEndAfter","setRng","moveToBookmark","unlinkSelection","unlinkDomMutation","fig","img","getParents","parentNode","insertBefore","remove","attrs","create","appendChild","getValue","item","sanitizeList","list","extractValue","out","getText","undefined","menu","items","sanitizeWith","extracter","ListOptions","sanitize","createUi","label","isListGroup","hasNonNullableKey","findTextByValue","catalog","getDelta","persistentText","fieldName","hasPersistentText","meta","DialogChanges","initialData","linkCatalog","persistentData","onUrlChange","getTitleFromUrlChange","onCatalogChange","change","catalogs","onChange","getData","global$1","tryEmailTransform","preprocess","oldData","tryProtocolTransform","defaultLinkProtocol","DialogConfirms","Promise","transform","callback","setEditorTimeout","windowManager","confirm","state","delayedConfirm","AnchorListOptions","anchorNodes","anchors","id","ClassListOptions","parseJson","JSON","parse","err","LinkListOptions","extractor","convertURL","linkList","fetch","then","res","ok","reject","output","optItems","RelOptions","initialTarget","isTargetBlank","safeRelExtractor","fallbacks","TargetOptions","nonEmptyAttr","elem","getAttrib","DialogInfo","linkNode","links","linkClass","extractFromAnchor","targets","classes","optNode","flags","titleEnabled","open","anchorNode","collectData","info","onSubmit","api","close","getChangedValue","changedData","pData","handleSubmit","settings","displayText","titleText","defaultTarget","original","getInitialData","dialogDelta","size","body","filetype","picker_text","buttons","primary","newData","setData","makeDialog","spec","subject","doRevoke","initial","set","Cell","revoke","clear","isSet","s","singleton","on","global","openLink","document","createElement","evt","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","removeChild","appendClickRemove","gotoLink","targetEl","scrollIntoView","getLinkFromElement","element","getLinkFromSelection","isCollapsed","isSelectionOnImageWithEmbeddedLink","getStart","getLinkInSelection","openDialog","dialog","toggleState","toggler","off","toggleLinkState","updateState","setActive","mode","isReadOnly","setEnabled","isEditable","toggleLinkMenuState","toggleRequiresLinkState","hasLinks$1","parents","updateEnabled","e","setupContextToolbars","onSetupLink","buttonApi","ui","registry","addContextForm","launch","icon","tooltip","onSetup","initValue","constant","commands","onAction","formApi","onlyText","getLinkText","collapse","collapseSelectionToEnd","hide","gotoSelectedLink","setup","selectedLink","getSelectedLink","metaKeyPressed","preventDefault","isDefaultPrevented","keyCode","altKey","shiftKey","ctrlKey","metaKey","hasOnlyAltModifier","setup$1","addToggleButton","shortcut","addButton","setupButtons","addMenuItem","setupMenuItems","addContextMenu","update","setupContextMenu","add","registerOption","register","processor","valid","default","register$1","addCommand","_ui","dispatch","toolbarKey","addShortcut","setup$2"],"sourceRoot":""}