{"version":3,"file":"chunks/72564.b41c7dc9a5e284ce6a18.min.js","mappings":"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","sources":["webpack://@plone/mockup/./node_modules/tinymce/plugins/image/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 7.9.1 (2025-05-29)\n */\n\n(function () {\n    'use strict';\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    /* eslint-disable @typescript-eslint/no-wrapper-object-types */\n    const getPrototypeOf = Object.getPrototypeOf;\n    const hasProto = (v, constructor, predicate) => {\n        var _a;\n        if (predicate(v, constructor.prototype)) {\n            return true;\n        }\n        else {\n            // String-based fallback time\n            return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n        }\n    };\n    const typeOf = (x) => {\n        const t = typeof x;\n        if (x === null) {\n            return 'null';\n        }\n        else if (t === 'object' && Array.isArray(x)) {\n            return 'array';\n        }\n        else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n            return 'string';\n        }\n        else {\n            return t;\n        }\n    };\n    const isType = (type) => (value) => typeOf(value) === type;\n    const isSimpleType = (type) => (value) => typeof value === type;\n    const eq = (t) => (a) => t === a;\n    const is = (value, constructor) => isObject(value) && hasProto(value, constructor, (o, proto) => getPrototypeOf(o) === proto);\n    const isString = isType('string');\n    const isObject = isType('object');\n    const isPlainObject = (value) => is(value, Object);\n    const isArray = isType('array');\n    const isNull = eq(null);\n    const isBoolean = isSimpleType('boolean');\n    const isNullable = (a) => a === null || a === undefined;\n    const isNonNullable = (a) => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isNumber = isSimpleType('number');\n    const isArrayOf = (value, pred) => {\n        if (isArray(value)) {\n            for (let i = 0, len = value.length; i < len; ++i) {\n                if (!(pred(value[i]))) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n\n    const noop = () => { };\n\n    /**\n     * The `Optional` type represents a value (of any type) that potentially does\n     * not exist. Any `Optional<T>` can either be a `Some<T>` (in which case the\n     * value does exist) or a `None` (in which case the value does not exist). This\n     * module defines a whole lot of FP-inspired utility functions for dealing with\n     * `Optional` objects.\n     *\n     * Comparison with null or undefined:\n     * - We don't get fancy null coalescing operators with `Optional`\n     * - We do get fancy helper functions with `Optional`\n     * - `Optional` support nesting, and allow for the type to still be nullable (or\n     * another `Optional`)\n     * - There is no option to turn off strict-optional-checks like there is for\n     * strict-null-checks\n     */\n    class Optional {\n        // The internal representation has a `tag` and a `value`, but both are\n        // private: able to be console.logged, but not able to be accessed by code\n        constructor(tag, value) {\n            this.tag = tag;\n            this.value = value;\n        }\n        // --- Identities ---\n        /**\n         * Creates a new `Optional<T>` that **does** contain a value.\n         */\n        static some(value) {\n            return new Optional(true, value);\n        }\n        /**\n         * Create a new `Optional<T>` that **does not** contain a value. `T` can be\n         * any type because we don't actually have a `T`.\n         */\n        static none() {\n            return Optional.singletonNone;\n        }\n        /**\n         * Perform a transform on an `Optional` type. Regardless of whether this\n         * `Optional` contains a value or not, `fold` will return a value of type `U`.\n         * If this `Optional` does not contain a value, the `U` will be created by\n         * calling `onNone`. If this `Optional` does contain a value, the `U` will be\n         * created by calling `onSome`.\n         *\n         * For the FP enthusiasts in the room, this function:\n         * 1. Could be used to implement all of the functions below\n         * 2. Forms a catamorphism\n         */\n        fold(onNone, onSome) {\n            if (this.tag) {\n                return onSome(this.value);\n            }\n            else {\n                return onNone();\n            }\n        }\n        /**\n         * Determine if this `Optional` object contains a value.\n         */\n        isSome() {\n            return this.tag;\n        }\n        /**\n         * Determine if this `Optional` object **does not** contain a value.\n         */\n        isNone() {\n            return !this.tag;\n        }\n        // --- Functor (name stolen from Haskell / maths) ---\n        /**\n         * Perform a transform on an `Optional` object, **if** there is a value. If\n         * you provide a function to turn a T into a U, this is the function you use\n         * to turn an `Optional<T>` into an `Optional<U>`. If this **does** contain\n         * a value then the output will also contain a value (that value being the\n         * output of `mapper(this.value)`), and if this **does not** contain a value\n         * then neither will the output.\n         */\n        map(mapper) {\n            if (this.tag) {\n                return Optional.some(mapper(this.value));\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Monad (name stolen from Haskell / maths) ---\n        /**\n         * Perform a transform on an `Optional` object, **if** there is a value.\n         * Unlike `map`, here the transform itself also returns an `Optional`.\n         */\n        bind(binder) {\n            if (this.tag) {\n                return binder(this.value);\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Traversable (name stolen from Haskell / maths) ---\n        /**\n         * For a given predicate, this function finds out if there **exists** a value\n         * inside this `Optional` object that meets the predicate. In practice, this\n         * means that for `Optional`s that do not contain a value it returns false (as\n         * no predicate-meeting value exists).\n         */\n        exists(predicate) {\n            return this.tag && predicate(this.value);\n        }\n        /**\n         * For a given predicate, this function finds out if **all** the values inside\n         * this `Optional` object meet the predicate. In practice, this means that\n         * for `Optional`s that do not contain a value it returns true (as all 0\n         * objects do meet the predicate).\n         */\n        forall(predicate) {\n            return !this.tag || predicate(this.value);\n        }\n        filter(predicate) {\n            if (!this.tag || predicate(this.value)) {\n                return this;\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Getters ---\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value.\n         */\n        getOr(replacement) {\n            return this.tag ? this.value : replacement;\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value.  Unlike `getOr`, in this method the `replacement` object is also\n         * `Optional` - meaning that this method will always return an `Optional`.\n         */\n        or(replacement) {\n            return this.tag ? this : replacement;\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value. Unlike `getOr`, in this method the `replacement` value is\n         * \"thunked\" - that is to say that you don't pass a value to `getOrThunk`, you\n         * pass a function which (if called) will **return** the `value` you want to\n         * use.\n         */\n        getOrThunk(thunk) {\n            return this.tag ? this.value : thunk();\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided Optional object does not contain a\n         * value.\n         *\n         * Unlike `or`, in this method the `replacement` value is \"thunked\" - that is\n         * to say that you don't pass a value to `orThunk`, you pass a function which\n         * (if called) will **return** the `value` you want to use.\n         *\n         * Unlike `getOrThunk`, in this method the `replacement` value is also\n         * `Optional`, meaning that this method will always return an `Optional`.\n         */\n        orThunk(thunk) {\n            return this.tag ? this : thunk();\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, throwing an\n         * exception if the provided `Optional` object does not contain a value.\n         *\n         * WARNING:\n         * You should only be using this function if you know that the `Optional`\n         * object **is not** empty (otherwise you're throwing exceptions in production\n         * code, which is bad).\n         *\n         * In tests this is more acceptable.\n         *\n         * Prefer other methods to this, such as `.each`.\n         */\n        getOrDie(message) {\n            if (!this.tag) {\n                throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n            }\n            else {\n                return this.value;\n            }\n        }\n        // --- Interop with null and undefined ---\n        /**\n         * Creates an `Optional` value from a nullable (or undefined-able) input.\n         * Null, or undefined, is converted to `None`, and anything else is converted\n         * to `Some`.\n         */\n        static from(value) {\n            return isNonNullable(value) ? Optional.some(value) : Optional.none();\n        }\n        /**\n         * Converts an `Optional` to a nullable type, by getting the value if it\n         * exists, or returning `null` if it does not.\n         */\n        getOrNull() {\n            return this.tag ? this.value : null;\n        }\n        /**\n         * Converts an `Optional` to an undefined-able type, by getting the value if\n         * it exists, or returning `undefined` if it does not.\n         */\n        getOrUndefined() {\n            return this.value;\n        }\n        // --- Utilities ---\n        /**\n         * If the `Optional` contains a value, perform an action on that value.\n         * Unlike the rest of the methods on this type, `.each` has side-effects. If\n         * you want to transform an `Optional<T>` **into** something, then this is not\n         * the method for you. If you want to use an `Optional<T>` to **do**\n         * something, then this is the method for you - provided you're okay with not\n         * doing anything in the case where the `Optional` doesn't have a value inside\n         * it. If you're not sure whether your use-case fits into transforming\n         * **into** something or **doing** something, check whether it has a return\n         * value. If it does, you should be performing a transform.\n         */\n        each(worker) {\n            if (this.tag) {\n                worker(this.value);\n            }\n        }\n        /**\n         * Turn the `Optional` object into an array that contains all of the values\n         * stored inside the `Optional`. In practice, this means the output will have\n         * either 0 or 1 elements.\n         */\n        toArray() {\n            return this.tag ? [this.value] : [];\n        }\n        /**\n         * Turn the `Optional` object into a string for debugging or printing. Not\n         * recommended for production code, but good for debugging. Also note that\n         * these days an `Optional` object can be logged to the console directly, and\n         * its inner value (if it exists) will be visible.\n         */\n        toString() {\n            return this.tag ? `some(${this.value})` : 'none()';\n        }\n    }\n    // Sneaky optimisation: every instance of Optional.none is identical, so just\n    // reuse the same object\n    Optional.singletonNone = new Optional(false);\n\n    /* eslint-disable @typescript-eslint/unbound-method */\n    const nativeSlice = Array.prototype.slice;\n    const nativePush = Array.prototype.push;\n    const flatten = (xs) => {\n        // Note, this is possible because push supports multiple arguments:\n        // http://jsperf.com/concat-push/6\n        // Note that in the past, concat() would silently work (very slowly) for array-like objects.\n        // With this change it will throw an error.\n        const r = [];\n        for (let i = 0, len = xs.length; i < len; ++i) {\n            // Ensure that each value is an array itself\n            if (!isArray(xs[i])) {\n                throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n            }\n            nativePush.apply(r, xs[i]);\n        }\n        return r;\n    };\n    const get = (xs, i) => i >= 0 && i < xs.length ? Optional.some(xs[i]) : Optional.none();\n    const head = (xs) => get(xs, 0);\n    isFunction(Array.from) ? Array.from : (x) => nativeSlice.call(x);\n    const findMap = (arr, f) => {\n        for (let i = 0; i < arr.length; i++) {\n            const r = f(arr[i], i);\n            if (r.isSome()) {\n                return r;\n            }\n        }\n        return Optional.none();\n    };\n\n    // There are many variations of Object iteration that are faster than the 'for-in' style:\n    // http://jsperf.com/object-keys-iteration/107\n    //\n    // Use the native keys if it is available (IE9+), otherwise fall back to manually filtering\n    const keys = Object.keys;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const hasOwnProperty = Object.hasOwnProperty;\n    const each = (obj, f) => {\n        const props = keys(obj);\n        for (let k = 0, len = props.length; k < len; k++) {\n            const i = props[k];\n            const x = obj[i];\n            f(x, i);\n        }\n    };\n    const objAcc = (r) => (x, i) => {\n        r[i] = x;\n    };\n    const internalFilter = (obj, pred, onTrue, onFalse) => {\n        each(obj, (x, i) => {\n            (pred(x, i) ? onTrue : onFalse)(x, i);\n        });\n    };\n    const filter = (obj, pred) => {\n        const t = {};\n        internalFilter(obj, pred, objAcc(t), noop);\n        return t;\n    };\n    const has = (obj, key) => hasOwnProperty.call(obj, key);\n    const hasNonNullableKey = (obj, key) => has(obj, key) && obj[key] !== undefined && obj[key] !== null;\n\n    const deep = (old, nu) => {\n        const bothObjects = isPlainObject(old) && isPlainObject(nu);\n        return bothObjects ? deepMerge(old, nu) : nu;\n    };\n    const baseMerge = (merger) => {\n        return (...objects) => {\n            if (objects.length === 0) {\n                throw new Error(`Can't merge zero objects`);\n            }\n            const ret = {};\n            for (let j = 0; j < objects.length; j++) {\n                const curObject = objects[j];\n                for (const key in curObject) {\n                    if (has(curObject, key)) {\n                        ret[key] = merger(ret[key], curObject[key]);\n                    }\n                }\n            }\n            return ret;\n        };\n    };\n    const deepMerge = baseMerge(deep);\n\n    const isNotEmpty = (s) => s.length > 0;\n\n    const fromHtml = (html, scope) => {\n        const doc = scope || document;\n        const div = doc.createElement('div');\n        div.innerHTML = html;\n        if (!div.hasChildNodes() || div.childNodes.length > 1) {\n            const message = 'HTML does not have a single root node';\n            // eslint-disable-next-line no-console\n            console.error(message, html);\n            throw new Error(message);\n        }\n        return fromDom(div.childNodes[0]);\n    };\n    const fromTag = (tag, scope) => {\n        const doc = scope || document;\n        const node = doc.createElement(tag);\n        return fromDom(node);\n    };\n    const fromText = (text, scope) => {\n        const doc = scope || document;\n        const node = doc.createTextNode(text);\n        return fromDom(node);\n    };\n    const fromDom = (node) => {\n        // TODO: Consider removing this check, but left atm for safety\n        if (node === null || node === undefined) {\n            throw new Error('Node cannot be null or undefined');\n        }\n        return {\n            dom: node\n        };\n    };\n    const fromPoint = (docElm, x, y) => Optional.from(docElm.dom.elementFromPoint(x, y)).map(fromDom);\n    // tslint:disable-next-line:variable-name\n    const SugarElement = {\n        fromHtml,\n        fromTag,\n        fromText,\n        fromDom,\n        fromPoint\n    };\n\n    const rawSet = (dom, key, value) => {\n        /*\n         * JQuery coerced everything to a string, and silently did nothing on text node/null/undefined.\n         *\n         * We fail on those invalid cases, only allowing numbers and booleans.\n         */\n        if (isString(value) || isBoolean(value) || isNumber(value)) {\n            dom.setAttribute(key, value + '');\n        }\n        else {\n            // eslint-disable-next-line no-console\n            console.error('Invalid call to Attribute.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n            throw new Error('Attribute value was not simple');\n        }\n    };\n    const set = (element, key, value) => {\n        rawSet(element.dom, key, value);\n    };\n    const remove = (element, key) => {\n        element.dom.removeAttribute(key);\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.URI');\n\n    const option = (name) => (editor) => editor.options.get(name);\n    const register$2 = (editor) => {\n        const registerOption = editor.options.register;\n        registerOption('image_dimensions', {\n            processor: 'boolean',\n            default: true\n        });\n        registerOption('image_advtab', {\n            processor: 'boolean',\n            default: false\n        });\n        registerOption('image_uploadtab', {\n            processor: 'boolean',\n            default: true\n        });\n        registerOption('image_prepend_url', {\n            processor: 'string',\n            default: ''\n        });\n        registerOption('image_class_list', {\n            processor: 'object[]'\n        });\n        registerOption('image_description', {\n            processor: 'boolean',\n            default: true\n        });\n        registerOption('image_title', {\n            processor: 'boolean',\n            default: false\n        });\n        registerOption('image_caption', {\n            processor: 'boolean',\n            default: false\n        });\n        registerOption('image_list', {\n            processor: (value) => {\n                const valid = value === false || isString(value) || isArrayOf(value, isObject) || isFunction(value);\n                return valid ? { value, valid } : { valid: false, message: 'Must be false, a string, an array or a function.' };\n            },\n            default: false\n        });\n    };\n    const hasDimensions = option('image_dimensions');\n    const hasAdvTab = option('image_advtab');\n    const hasUploadTab = option('image_uploadtab');\n    const getPrependUrl = option('image_prepend_url');\n    const getClassList = option('image_class_list');\n    const hasDescription = option('image_description');\n    const hasImageTitle = option('image_title');\n    const hasImageCaption = option('image_caption');\n    const getImageList = option('image_list');\n    const showAccessibilityOptions = option('a11y_advanced_options');\n    const isAutomaticUploadsEnabled = option('automatic_uploads');\n    const hasUploadUrl = (editor) => isNotEmpty(editor.options.get('images_upload_url'));\n    const hasUploadHandler = (editor) => isNonNullable(editor.options.get('images_upload_handler'));\n\n    // TODO: Figure out if these would ever be something other than numbers. This was added in: #TINY-1350\n    const parseIntAndGetMax = (val1, val2) => Math.max(parseInt(val1, 10), parseInt(val2, 10));\n    const getImageSize = (url) => new Promise((callback) => {\n        const img = document.createElement('img');\n        const done = (dimensions) => {\n            if (img.parentNode) {\n                img.parentNode.removeChild(img);\n            }\n            callback(dimensions);\n        };\n        img.addEventListener('load', () => {\n            const width = parseIntAndGetMax(img.width, img.clientWidth);\n            const height = parseIntAndGetMax(img.height, img.clientHeight);\n            const dimensions = { width, height };\n            done(Promise.resolve(dimensions));\n        });\n        img.addEventListener('error', () => {\n            done(Promise.reject(`Failed to get image dimensions for: ${url}`));\n        });\n        const style = img.style;\n        style.visibility = 'hidden';\n        style.position = 'fixed';\n        style.bottom = style.left = '0px';\n        style.width = style.height = 'auto';\n        document.body.appendChild(img);\n        img.src = url;\n    });\n    const removePixelSuffix = (value) => {\n        if (value) {\n            value = value.replace(/px$/, '');\n        }\n        return value;\n    };\n    const addPixelSuffix = (value) => {\n        if (value.length > 0 && /^[0-9]+$/.test(value)) {\n            value += 'px';\n        }\n        return value;\n    };\n    const mergeMargins = (css) => {\n        if (css.margin) {\n            const splitMargin = String(css.margin).split(' ');\n            switch (splitMargin.length) {\n                case 1: // margin: toprightbottomleft;\n                    css['margin-top'] = css['margin-top'] || splitMargin[0];\n                    css['margin-right'] = css['margin-right'] || splitMargin[0];\n                    css['margin-bottom'] = css['margin-bottom'] || splitMargin[0];\n                    css['margin-left'] = css['margin-left'] || splitMargin[0];\n                    break;\n                case 2: // margin: topbottom rightleft;\n                    css['margin-top'] = css['margin-top'] || splitMargin[0];\n                    css['margin-right'] = css['margin-right'] || splitMargin[1];\n                    css['margin-bottom'] = css['margin-bottom'] || splitMargin[0];\n                    css['margin-left'] = css['margin-left'] || splitMargin[1];\n                    break;\n                case 3: // margin: top rightleft bottom;\n                    css['margin-top'] = css['margin-top'] || splitMargin[0];\n                    css['margin-right'] = css['margin-right'] || splitMargin[1];\n                    css['margin-bottom'] = css['margin-bottom'] || splitMargin[2];\n                    css['margin-left'] = css['margin-left'] || splitMargin[1];\n                    break;\n                case 4: // margin: top right bottom left;\n                    css['margin-top'] = css['margin-top'] || splitMargin[0];\n                    css['margin-right'] = css['margin-right'] || splitMargin[1];\n                    css['margin-bottom'] = css['margin-bottom'] || splitMargin[2];\n                    css['margin-left'] = css['margin-left'] || splitMargin[3];\n            }\n            delete css.margin;\n        }\n        return css;\n    };\n    // TODO: Input on this callback should really be validated\n    const createImageList = (editor, callback) => {\n        const imageList = getImageList(editor);\n        if (isString(imageList)) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            fetch(imageList)\n                .then((res) => {\n                if (res.ok) {\n                    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                    res.json().then(callback);\n                }\n            });\n        }\n        else if (isFunction(imageList)) {\n            imageList(callback);\n        }\n        else {\n            callback(imageList);\n        }\n    };\n    const waitLoadImage = (editor, data, imgElm) => {\n        const selectImage = () => {\n            imgElm.onload = imgElm.onerror = null;\n            if (editor.selection) {\n                editor.selection.select(imgElm);\n                editor.nodeChanged();\n            }\n        };\n        imgElm.onload = () => {\n            if (!data.width && !data.height && hasDimensions(editor)) {\n                editor.dom.setAttribs(imgElm, {\n                    width: String(imgElm.clientWidth),\n                    height: String(imgElm.clientHeight)\n                });\n            }\n            selectImage();\n        };\n        imgElm.onerror = selectImage;\n    };\n    const blobToDataUri = (blob) => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            resolve(reader.result);\n        };\n        reader.onerror = () => {\n            var _a;\n            reject((_a = reader.error) === null || _a === void 0 ? void 0 : _a.message);\n        };\n        reader.readAsDataURL(blob);\n    });\n    const isPlaceholderImage = (imgElm) => imgElm.nodeName === 'IMG' && (imgElm.hasAttribute('data-mce-object') || imgElm.hasAttribute('data-mce-placeholder'));\n    const isSafeImageUrl = (editor, src) => {\n        const getOption = editor.options.get;\n        return global$2.isDomSafe(src, 'img', {\n            allow_html_data_urls: getOption('allow_html_data_urls'),\n            allow_script_urls: getOption('allow_script_urls'),\n            allow_svg_data_urls: getOption('allow_svg_data_urls')\n        });\n    };\n\n    const DOM = global$3.DOM;\n    const getHspace = (image) => {\n        if (image.style.marginLeft && image.style.marginRight && image.style.marginLeft === image.style.marginRight) {\n            return removePixelSuffix(image.style.marginLeft);\n        }\n        else {\n            return '';\n        }\n    };\n    const getVspace = (image) => {\n        if (image.style.marginTop && image.style.marginBottom && image.style.marginTop === image.style.marginBottom) {\n            return removePixelSuffix(image.style.marginTop);\n        }\n        else {\n            return '';\n        }\n    };\n    const getBorder = (image) => {\n        if (image.style.borderWidth) {\n            return removePixelSuffix(image.style.borderWidth);\n        }\n        else {\n            return '';\n        }\n    };\n    const getAttrib = (image, name) => {\n        var _a;\n        if (image.hasAttribute(name)) {\n            return (_a = image.getAttribute(name)) !== null && _a !== void 0 ? _a : '';\n        }\n        else {\n            return '';\n        }\n    };\n    const hasCaption = (image) => image.parentNode !== null && image.parentNode.nodeName === 'FIGURE';\n    const updateAttrib = (image, name, value) => {\n        if (value === '' || value === null) {\n            image.removeAttribute(name);\n        }\n        else {\n            image.setAttribute(name, value);\n        }\n    };\n    const wrapInFigure = (image) => {\n        const figureElm = DOM.create('figure', { class: 'image' });\n        DOM.insertAfter(figureElm, image);\n        figureElm.appendChild(image);\n        figureElm.appendChild(DOM.create('figcaption', { contentEditable: 'true' }, 'Caption'));\n        figureElm.contentEditable = 'false';\n    };\n    const removeFigure = (image) => {\n        const figureElm = image.parentNode;\n        if (isNonNullable(figureElm)) {\n            DOM.insertAfter(image, figureElm);\n            DOM.remove(figureElm);\n        }\n    };\n    const toggleCaption = (image) => {\n        if (hasCaption(image)) {\n            removeFigure(image);\n        }\n        else {\n            wrapInFigure(image);\n        }\n    };\n    const normalizeStyle = (image, normalizeCss) => {\n        const attrValue = image.getAttribute('style');\n        const value = normalizeCss(attrValue !== null ? attrValue : '');\n        if (value.length > 0) {\n            image.setAttribute('style', value);\n            image.setAttribute('data-mce-style', value);\n        }\n        else {\n            image.removeAttribute('style');\n        }\n    };\n    const setSize = (name, normalizeCss) => (image, name, value) => {\n        const styles = image.style;\n        if (styles[name]) {\n            styles[name] = addPixelSuffix(value);\n            normalizeStyle(image, normalizeCss);\n        }\n        else {\n            updateAttrib(image, name, value);\n        }\n    };\n    const getSize = (image, name) => {\n        if (image.style[name]) {\n            return removePixelSuffix(image.style[name]);\n        }\n        else {\n            return getAttrib(image, name);\n        }\n    };\n    const setHspace = (image, value) => {\n        const pxValue = addPixelSuffix(value);\n        image.style.marginLeft = pxValue;\n        image.style.marginRight = pxValue;\n    };\n    const setVspace = (image, value) => {\n        const pxValue = addPixelSuffix(value);\n        image.style.marginTop = pxValue;\n        image.style.marginBottom = pxValue;\n    };\n    const setBorder = (image, value) => {\n        const pxValue = addPixelSuffix(value);\n        image.style.borderWidth = pxValue;\n    };\n    const setBorderStyle = (image, value) => {\n        image.style.borderStyle = value;\n    };\n    const getBorderStyle = (image) => { var _a; return (_a = image.style.borderStyle) !== null && _a !== void 0 ? _a : ''; };\n    const isFigure = (elm) => isNonNullable(elm) && elm.nodeName === 'FIGURE';\n    const isImage = (elm) => elm.nodeName === 'IMG';\n    const getIsDecorative = (image) => DOM.getAttrib(image, 'alt').length === 0 && DOM.getAttrib(image, 'role') === 'presentation';\n    const getAlt = (image) => {\n        if (getIsDecorative(image)) {\n            return '';\n        }\n        else {\n            return getAttrib(image, 'alt');\n        }\n    };\n    const defaultData = () => ({\n        src: '',\n        alt: '',\n        title: '',\n        width: '',\n        height: '',\n        class: '',\n        style: '',\n        caption: false,\n        hspace: '',\n        vspace: '',\n        border: '',\n        borderStyle: '',\n        isDecorative: false\n    });\n    const getStyleValue = (normalizeCss, data) => {\n        var _a;\n        const image = document.createElement('img');\n        updateAttrib(image, 'style', data.style);\n        if (getHspace(image) || data.hspace !== '') {\n            setHspace(image, data.hspace);\n        }\n        if (getVspace(image) || data.vspace !== '') {\n            setVspace(image, data.vspace);\n        }\n        if (getBorder(image) || data.border !== '') {\n            setBorder(image, data.border);\n        }\n        if (getBorderStyle(image) || data.borderStyle !== '') {\n            setBorderStyle(image, data.borderStyle);\n        }\n        return normalizeCss((_a = image.getAttribute('style')) !== null && _a !== void 0 ? _a : '');\n    };\n    const create = (normalizeCss, data) => {\n        const image = document.createElement('img');\n        write(normalizeCss, { ...data, caption: false }, image);\n        // Always set alt even if data.alt is an empty string\n        setAlt(image, data.alt, data.isDecorative);\n        if (data.caption) {\n            const figure = DOM.create('figure', { class: 'image' });\n            figure.appendChild(image);\n            figure.appendChild(DOM.create('figcaption', { contentEditable: 'true' }, 'Caption'));\n            figure.contentEditable = 'false';\n            return figure;\n        }\n        else {\n            return image;\n        }\n    };\n    const read = (normalizeCss, image) => ({\n        src: getAttrib(image, 'src'),\n        alt: getAlt(image),\n        title: getAttrib(image, 'title'),\n        width: getSize(image, 'width'),\n        height: getSize(image, 'height'),\n        class: getAttrib(image, 'class'),\n        style: normalizeCss(getAttrib(image, 'style')),\n        caption: hasCaption(image),\n        hspace: getHspace(image),\n        vspace: getVspace(image),\n        border: getBorder(image),\n        borderStyle: getBorderStyle(image),\n        isDecorative: getIsDecorative(image)\n    });\n    const updateProp = (image, oldData, newData, name, set) => {\n        if (newData[name] !== oldData[name]) {\n            set(image, name, String(newData[name]));\n        }\n    };\n    const setAlt = (image, alt, isDecorative) => {\n        if (isDecorative) {\n            DOM.setAttrib(image, 'role', 'presentation');\n            // unfortunately can't set \"\" attr value with domutils\n            const sugarImage = SugarElement.fromDom(image);\n            set(sugarImage, 'alt', '');\n        }\n        else {\n            if (isNull(alt)) {\n                const sugarImage = SugarElement.fromDom(image);\n                remove(sugarImage, 'alt');\n            }\n            else {\n                // unfortunately can't set \"\" attr value with domutils\n                const sugarImage = SugarElement.fromDom(image);\n                set(sugarImage, 'alt', alt);\n            }\n            if (DOM.getAttrib(image, 'role') === 'presentation') {\n                DOM.setAttrib(image, 'role', '');\n            }\n        }\n    };\n    const updateAlt = (image, oldData, newData) => {\n        if (newData.alt !== oldData.alt || newData.isDecorative !== oldData.isDecorative) {\n            setAlt(image, newData.alt, newData.isDecorative);\n        }\n    };\n    const normalized = (set, normalizeCss) => (image, name, value) => {\n        set(image, value);\n        normalizeStyle(image, normalizeCss);\n    };\n    const write = (normalizeCss, newData, image) => {\n        const oldData = read(normalizeCss, image);\n        updateProp(image, oldData, newData, 'caption', (image, _name, _value) => toggleCaption(image));\n        updateProp(image, oldData, newData, 'src', updateAttrib);\n        updateProp(image, oldData, newData, 'title', updateAttrib);\n        updateProp(image, oldData, newData, 'width', setSize('width', normalizeCss));\n        updateProp(image, oldData, newData, 'height', setSize('height', normalizeCss));\n        updateProp(image, oldData, newData, 'class', updateAttrib);\n        updateProp(image, oldData, newData, 'style', normalized((image, value) => updateAttrib(image, 'style', value), normalizeCss));\n        updateProp(image, oldData, newData, 'hspace', normalized(setHspace, normalizeCss));\n        updateProp(image, oldData, newData, 'vspace', normalized(setVspace, normalizeCss));\n        updateProp(image, oldData, newData, 'border', normalized(setBorder, normalizeCss));\n        updateProp(image, oldData, newData, 'borderStyle', normalized(setBorderStyle, normalizeCss));\n        updateAlt(image, oldData, newData);\n    };\n\n    const normalizeCss$1 = (editor, cssText) => {\n        const css = editor.dom.styles.parse(cssText);\n        const mergedCss = mergeMargins(css);\n        const compressed = editor.dom.styles.parse(editor.dom.styles.serialize(mergedCss));\n        return editor.dom.styles.serialize(compressed);\n    };\n    const getSelectedImage = (editor) => {\n        const imgElm = editor.selection.getNode();\n        const figureElm = editor.dom.getParent(imgElm, 'figure.image');\n        if (figureElm) {\n            return editor.dom.select('img', figureElm)[0];\n        }\n        if (imgElm && (imgElm.nodeName !== 'IMG' || isPlaceholderImage(imgElm))) {\n            return null;\n        }\n        return imgElm;\n    };\n    const splitTextBlock = (editor, figure) => {\n        var _a;\n        const dom = editor.dom;\n        const textBlockElements = filter(editor.schema.getTextBlockElements(), (_, parentElm) => !editor.schema.isValidChild(parentElm, 'figure'));\n        const textBlock = dom.getParent(figure.parentNode, (node) => hasNonNullableKey(textBlockElements, node.nodeName), editor.getBody());\n        if (textBlock) {\n            return (_a = dom.split(textBlock, figure)) !== null && _a !== void 0 ? _a : figure;\n        }\n        else {\n            return figure;\n        }\n    };\n    const readImageDataFromSelection = (editor) => {\n        const image = getSelectedImage(editor);\n        return image ? read((css) => normalizeCss$1(editor, css), image) : defaultData();\n    };\n    const insertImageAtCaret = (editor, data) => {\n        const elm = create((css) => normalizeCss$1(editor, css), data);\n        editor.dom.setAttrib(elm, 'data-mce-id', '__mcenew');\n        editor.focus();\n        editor.selection.setContent(elm.outerHTML);\n        const insertedElm = editor.dom.select('*[data-mce-id=\"__mcenew\"]')[0];\n        editor.dom.setAttrib(insertedElm, 'data-mce-id', null);\n        if (isFigure(insertedElm)) {\n            const figure = splitTextBlock(editor, insertedElm);\n            editor.selection.select(figure);\n        }\n        else {\n            editor.selection.select(insertedElm);\n        }\n    };\n    const syncSrcAttr = (editor, image) => {\n        editor.dom.setAttrib(image, 'src', image.getAttribute('src'));\n    };\n    const deleteImage = (editor, image) => {\n        if (image) {\n            const elm = editor.dom.is(image.parentNode, 'figure.image') ? image.parentNode : image;\n            editor.dom.remove(elm);\n            editor.focus();\n            editor.nodeChanged();\n            if (editor.dom.isEmpty(editor.getBody())) {\n                editor.setContent('');\n                editor.selection.setCursorLocation();\n            }\n        }\n    };\n    const writeImageDataToSelection = (editor, data) => {\n        const image = getSelectedImage(editor);\n        if (image) {\n            write((css) => normalizeCss$1(editor, css), data, image);\n            syncSrcAttr(editor, image);\n            if (isFigure(image.parentNode)) {\n                editor.dom.setStyle(image, 'float', '');\n                const figure = image.parentNode;\n                splitTextBlock(editor, figure);\n                editor.selection.select(image.parentNode);\n            }\n            else {\n                editor.selection.select(image);\n                waitLoadImage(editor, data, image);\n            }\n        }\n    };\n    const sanitizeImageData = (editor, data) => {\n        // Sanitize the URL\n        const src = data.src;\n        return {\n            ...data,\n            src: isSafeImageUrl(editor, src) ? src : ''\n        };\n    };\n    const insertOrUpdateImage = (editor, partialData) => {\n        const image = getSelectedImage(editor);\n        if (image) {\n            const selectedImageData = read((css) => normalizeCss$1(editor, css), image);\n            const data = { ...selectedImageData, ...partialData };\n            const sanitizedData = sanitizeImageData(editor, data);\n            if (data.src) {\n                writeImageDataToSelection(editor, sanitizedData);\n            }\n            else {\n                deleteImage(editor, image);\n            }\n        }\n        else if (partialData.src) {\n            insertImageAtCaret(editor, { ...defaultData(), ...partialData });\n        }\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.ImageUploader');\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const getValue = (item) => isString(item.value) ? item.value : '';\n    const getText = (item) => {\n        if (isString(item.text)) {\n            return item.text;\n        }\n        else if (isString(item.title)) {\n            return item.title;\n        }\n        else {\n            return '';\n        }\n    };\n    const sanitizeList = (list, extractValue) => {\n        const out = [];\n        global.each(list, (item) => {\n            const text = getText(item);\n            if (item.menu !== undefined) {\n                const items = sanitizeList(item.menu, extractValue);\n                out.push({ text, items }); // list group\n            }\n            else {\n                const value = extractValue(item);\n                out.push({ text, value }); // list value\n            }\n        });\n        return out;\n    };\n    const sanitizer = (extractor = getValue) => (list) => {\n        if (list) {\n            return Optional.from(list).map((list) => sanitizeList(list, extractor));\n        }\n        else {\n            return Optional.none();\n        }\n    };\n    const sanitize = (list) => sanitizer(getValue)(list);\n    const isGroup = (item) => has(item, 'items');\n    const findEntryDelegate = (list, value) => findMap(list, (item) => {\n        if (isGroup(item)) {\n            return findEntryDelegate(item.items, value);\n        }\n        else if (item.value === value) {\n            return Optional.some(item);\n        }\n        else {\n            return Optional.none();\n        }\n    });\n    const findEntry = (optList, value) => optList.bind((list) => findEntryDelegate(list, value));\n    const ListUtils = {\n        sanitizer,\n        sanitize,\n        findEntry\n    };\n\n    const makeTab$2 = (_info) => ({\n        title: 'Advanced',\n        name: 'advanced',\n        items: [\n            {\n                type: 'grid',\n                columns: 2,\n                items: [\n                    {\n                        type: 'input',\n                        label: 'Vertical space',\n                        name: 'vspace',\n                        inputMode: 'numeric'\n                    },\n                    {\n                        type: 'input',\n                        label: 'Horizontal space',\n                        name: 'hspace',\n                        inputMode: 'numeric'\n                    },\n                    {\n                        type: 'input',\n                        label: 'Border width',\n                        name: 'border',\n                        inputMode: 'numeric'\n                    },\n                    {\n                        type: 'listbox',\n                        name: 'borderstyle',\n                        label: 'Border style',\n                        items: [\n                            { text: 'Select...', value: '' },\n                            { text: 'Solid', value: 'solid' },\n                            { text: 'Dotted', value: 'dotted' },\n                            { text: 'Dashed', value: 'dashed' },\n                            { text: 'Double', value: 'double' },\n                            { text: 'Groove', value: 'groove' },\n                            { text: 'Ridge', value: 'ridge' },\n                            { text: 'Inset', value: 'inset' },\n                            { text: 'Outset', value: 'outset' },\n                            { text: 'None', value: 'none' },\n                            { text: 'Hidden', value: 'hidden' }\n                        ]\n                    }\n                ]\n            }\n        ]\n    });\n    const AdvTab = {\n        makeTab: makeTab$2\n    };\n\n    const collect = (editor) => {\n        const urlListSanitizer = ListUtils.sanitizer((item) => editor.convertURL(item.value || item.url || '', 'src'));\n        const futureImageList = new Promise((completer) => {\n            createImageList(editor, (imageList) => {\n                completer(urlListSanitizer(imageList).map((items) => flatten([\n                    [{ text: 'None', value: '' }],\n                    items\n                ])));\n            });\n        });\n        const classList = ListUtils.sanitize(getClassList(editor));\n        const hasAdvTab$1 = hasAdvTab(editor);\n        const hasUploadTab$1 = hasUploadTab(editor);\n        const hasUploadUrl$1 = hasUploadUrl(editor);\n        const hasUploadHandler$1 = hasUploadHandler(editor);\n        const image = readImageDataFromSelection(editor);\n        const hasDescription$1 = hasDescription(editor);\n        const hasImageTitle$1 = hasImageTitle(editor);\n        const hasDimensions$1 = hasDimensions(editor);\n        const hasImageCaption$1 = hasImageCaption(editor);\n        const hasAccessibilityOptions = showAccessibilityOptions(editor);\n        const automaticUploads = isAutomaticUploadsEnabled(editor);\n        const prependURL = Optional.some(getPrependUrl(editor)).filter((preUrl) => isString(preUrl) && preUrl.length > 0);\n        return futureImageList.then((imageList) => ({\n            image,\n            imageList,\n            classList,\n            hasAdvTab: hasAdvTab$1,\n            hasUploadTab: hasUploadTab$1,\n            hasUploadUrl: hasUploadUrl$1,\n            hasUploadHandler: hasUploadHandler$1,\n            hasDescription: hasDescription$1,\n            hasImageTitle: hasImageTitle$1,\n            hasDimensions: hasDimensions$1,\n            hasImageCaption: hasImageCaption$1,\n            prependURL,\n            hasAccessibilityOptions,\n            automaticUploads\n        }));\n    };\n\n    const makeItems = (info) => {\n        const imageUrl = {\n            name: 'src',\n            type: 'urlinput',\n            filetype: 'image',\n            label: 'Source',\n            picker_text: 'Browse files'\n        };\n        const imageList = info.imageList.map((items) => ({\n            name: 'images',\n            type: 'listbox',\n            label: 'Image list',\n            items\n        }));\n        const imageDescription = {\n            name: 'alt',\n            type: 'input',\n            label: 'Alternative description',\n            enabled: !(info.hasAccessibilityOptions && info.image.isDecorative)\n        };\n        const imageTitle = {\n            name: 'title',\n            type: 'input',\n            label: 'Image title'\n        };\n        const imageDimensions = {\n            name: 'dimensions',\n            type: 'sizeinput'\n        };\n        const isDecorative = {\n            type: 'label',\n            label: 'Accessibility',\n            items: [{\n                    name: 'isDecorative',\n                    type: 'checkbox',\n                    label: 'Image is decorative'\n                }]\n        };\n        // TODO: the original listbox supported styled items but bridge does not seem to support this\n        const classList = info.classList.map((items) => ({\n            name: 'classes',\n            type: 'listbox',\n            label: 'Class',\n            items\n        }));\n        const caption = {\n            type: 'label',\n            label: 'Caption',\n            items: [\n                {\n                    type: 'checkbox',\n                    name: 'caption',\n                    label: 'Show caption'\n                }\n            ]\n        };\n        const getDialogContainerType = (useColumns) => useColumns ? { type: 'grid', columns: 2 } : { type: 'panel' };\n        return flatten([\n            [imageUrl],\n            imageList.toArray(),\n            info.hasAccessibilityOptions && info.hasDescription ? [isDecorative] : [],\n            info.hasDescription ? [imageDescription] : [],\n            info.hasImageTitle ? [imageTitle] : [],\n            info.hasDimensions ? [imageDimensions] : [],\n            [{\n                    ...getDialogContainerType(info.classList.isSome() && info.hasImageCaption),\n                    items: flatten([\n                        classList.toArray(),\n                        info.hasImageCaption ? [caption] : []\n                    ])\n                }]\n        ]);\n    };\n    const makeTab$1 = (info) => ({\n        title: 'General',\n        name: 'general',\n        items: makeItems(info)\n    });\n    const MainTab = {\n        makeTab: makeTab$1,\n        makeItems\n    };\n\n    const makeTab = (_info) => {\n        const items = [\n            {\n                type: 'dropzone',\n                name: 'fileinput'\n            }\n        ];\n        return {\n            title: 'Upload',\n            name: 'upload',\n            items\n        };\n    };\n    const UploadTab = {\n        makeTab\n    };\n\n    const createState = (info) => ({\n        prevImage: ListUtils.findEntry(info.imageList, info.image.src),\n        prevAlt: info.image.alt,\n        open: true\n    });\n    const fromImageData = (image) => ({\n        src: {\n            value: image.src,\n            meta: {}\n        },\n        images: image.src,\n        alt: image.alt,\n        title: image.title,\n        dimensions: {\n            width: image.width,\n            height: image.height\n        },\n        classes: image.class,\n        caption: image.caption,\n        style: image.style,\n        vspace: image.vspace,\n        border: image.border,\n        hspace: image.hspace,\n        borderstyle: image.borderStyle,\n        fileinput: [],\n        isDecorative: image.isDecorative\n    });\n    const toImageData = (data, removeEmptyAlt) => ({\n        src: data.src.value,\n        alt: (data.alt === null || data.alt.length === 0) && removeEmptyAlt ? null : data.alt,\n        title: data.title,\n        width: data.dimensions.width,\n        height: data.dimensions.height,\n        class: data.classes,\n        style: data.style,\n        caption: data.caption,\n        hspace: data.hspace,\n        vspace: data.vspace,\n        border: data.border,\n        borderStyle: data.borderstyle,\n        isDecorative: data.isDecorative\n    });\n    const addPrependUrl2 = (info, srcURL) => {\n        // Add the prependURL\n        if (!/^(?:[a-zA-Z]+:)?\\/\\//.test(srcURL)) {\n            return info.prependURL.bind((prependUrl) => {\n                if (srcURL.substring(0, prependUrl.length) !== prependUrl) {\n                    return Optional.some(prependUrl + srcURL);\n                }\n                return Optional.none();\n            });\n        }\n        return Optional.none();\n    };\n    const addPrependUrl = (info, api) => {\n        const data = api.getData();\n        addPrependUrl2(info, data.src.value).each((srcURL) => {\n            api.setData({ src: { value: srcURL, meta: data.src.meta } });\n        });\n    };\n    const formFillFromMeta2 = (info, data, meta) => {\n        if (info.hasDescription && isString(meta.alt)) {\n            data.alt = meta.alt;\n        }\n        if (info.hasAccessibilityOptions) {\n            data.isDecorative = meta.isDecorative || data.isDecorative || false;\n        }\n        if (info.hasImageTitle && isString(meta.title)) {\n            data.title = meta.title;\n        }\n        if (info.hasDimensions) {\n            if (isString(meta.width)) {\n                data.dimensions.width = meta.width;\n            }\n            if (isString(meta.height)) {\n                data.dimensions.height = meta.height;\n            }\n        }\n        if (isString(meta.class)) {\n            ListUtils.findEntry(info.classList, meta.class).each((entry) => {\n                data.classes = entry.value;\n            });\n        }\n        if (info.hasImageCaption) {\n            if (isBoolean(meta.caption)) {\n                data.caption = meta.caption;\n            }\n        }\n        if (info.hasAdvTab) {\n            if (isString(meta.style)) {\n                data.style = meta.style;\n            }\n            if (isString(meta.vspace)) {\n                data.vspace = meta.vspace;\n            }\n            if (isString(meta.border)) {\n                data.border = meta.border;\n            }\n            if (isString(meta.hspace)) {\n                data.hspace = meta.hspace;\n            }\n            if (isString(meta.borderstyle)) {\n                data.borderstyle = meta.borderstyle;\n            }\n        }\n    };\n    const formFillFromMeta = (info, api) => {\n        const data = api.getData();\n        const meta = data.src.meta;\n        if (meta !== undefined) {\n            const newData = deepMerge({}, data);\n            formFillFromMeta2(info, newData, meta);\n            api.setData(newData);\n        }\n    };\n    const calculateImageSize = (helpers, info, state, api) => {\n        const data = api.getData();\n        const url = data.src.value;\n        const meta = data.src.meta || {};\n        if (!meta.width && !meta.height && info.hasDimensions) {\n            if (isNotEmpty(url)) {\n                helpers.imageSize(url)\n                    .then((size) => {\n                    if (state.open) {\n                        api.setData({ dimensions: size });\n                    }\n                })\n                    // eslint-disable-next-line no-console\n                    .catch((e) => console.error(e));\n            }\n            else {\n                api.setData({ dimensions: { width: '', height: '' } });\n            }\n        }\n    };\n    const updateImagesDropdown = (info, state, api) => {\n        const data = api.getData();\n        const image = ListUtils.findEntry(info.imageList, data.src.value);\n        state.prevImage = image;\n        api.setData({ images: image.map((entry) => entry.value).getOr('') });\n    };\n    const changeSrc = (helpers, info, state, api) => {\n        addPrependUrl(info, api);\n        formFillFromMeta(info, api);\n        calculateImageSize(helpers, info, state, api);\n        updateImagesDropdown(info, state, api);\n    };\n    const changeImages = (helpers, info, state, api) => {\n        const data = api.getData();\n        const image = ListUtils.findEntry(info.imageList, data.images);\n        image.each((img) => {\n            const updateAlt = data.alt === '' || state.prevImage.map((image) => image.text === data.alt).getOr(false);\n            if (updateAlt) {\n                if (img.value === '') {\n                    api.setData({ src: img, alt: state.prevAlt });\n                }\n                else {\n                    api.setData({ src: img, alt: img.text });\n                }\n            }\n            else {\n                api.setData({ src: img });\n            }\n        });\n        state.prevImage = image;\n        changeSrc(helpers, info, state, api);\n    };\n    const changeFileInput = (helpers, info, state, api) => {\n        const data = api.getData();\n        api.block('Uploading image'); // What msg do we pass to the lock?\n        head(data.fileinput)\n            .fold(() => {\n            api.unblock();\n        }, (file) => {\n            const blobUri = URL.createObjectURL(file);\n            const finalize = () => {\n                api.unblock();\n                URL.revokeObjectURL(blobUri);\n            };\n            const updateSrcAndSwitchTab = (url) => {\n                api.setData({ src: { value: url, meta: {} } });\n                api.showTab('general');\n                changeSrc(helpers, info, state, api);\n                api.focus('src');\n            };\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            blobToDataUri(file).then((dataUrl) => {\n                const blobInfo = helpers.createBlobCache(file, blobUri, dataUrl);\n                if (info.automaticUploads) {\n                    helpers.uploadImage(blobInfo).then((result) => {\n                        updateSrcAndSwitchTab(result.url);\n                        finalize();\n                    }).catch((err) => {\n                        finalize();\n                        helpers.alertErr(err, () => {\n                            api.focus('fileinput');\n                        });\n                    });\n                }\n                else {\n                    helpers.addToBlobCache(blobInfo);\n                    updateSrcAndSwitchTab(blobInfo.blobUri());\n                    api.unblock();\n                }\n            });\n        });\n    };\n    const changeHandler = (helpers, info, state) => (api, evt) => {\n        if (evt.name === 'src') {\n            changeSrc(helpers, info, state, api);\n        }\n        else if (evt.name === 'images') {\n            changeImages(helpers, info, state, api);\n        }\n        else if (evt.name === 'alt') {\n            state.prevAlt = api.getData().alt;\n        }\n        else if (evt.name === 'fileinput') {\n            changeFileInput(helpers, info, state, api);\n        }\n        else if (evt.name === 'isDecorative') {\n            api.setEnabled('alt', !api.getData().isDecorative);\n        }\n    };\n    const closeHandler = (state) => () => {\n        state.open = false;\n    };\n    const makeDialogBody = (info) => {\n        if (info.hasAdvTab || info.hasUploadUrl || info.hasUploadHandler) {\n            const tabPanel = {\n                type: 'tabpanel',\n                tabs: flatten([\n                    [MainTab.makeTab(info)],\n                    info.hasAdvTab ? [AdvTab.makeTab(info)] : [],\n                    info.hasUploadTab && (info.hasUploadUrl || info.hasUploadHandler) ? [UploadTab.makeTab(info)] : []\n                ])\n            };\n            return tabPanel;\n        }\n        else {\n            const panel = {\n                type: 'panel',\n                items: MainTab.makeItems(info)\n            };\n            return panel;\n        }\n    };\n    const submitHandler = (editor, info, helpers) => (api) => {\n        const data = deepMerge(fromImageData(info.image), api.getData());\n        // The data architecture relies on passing everything through the style field for validation.\n        // Since the style field was removed that process must be simulated on submit.\n        const finalData = {\n            ...data,\n            style: getStyleValue(helpers.normalizeCss, toImageData(data, false))\n        };\n        editor.execCommand('mceUpdateImage', false, toImageData(finalData, info.hasAccessibilityOptions));\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        editor.editorUpload.uploadImagesAuto();\n        api.close();\n    };\n    const imageSize = (editor) => (url) => {\n        // If the URL isn't safe then don't attempt to load it to get the sizes\n        if (!isSafeImageUrl(editor, url)) {\n            return Promise.resolve({ width: '', height: '' });\n        }\n        else {\n            return getImageSize(editor.documentBaseURI.toAbsolute(url)).then((dimensions) => ({\n                width: String(dimensions.width),\n                height: String(dimensions.height)\n            }));\n        }\n    };\n    const createBlobCache = (editor) => (file, blobUri, dataUrl) => {\n        var _a;\n        return editor.editorUpload.blobCache.create({\n            blob: file,\n            blobUri,\n            name: (_a = file.name) === null || _a === void 0 ? void 0 : _a.replace(/\\.[^\\.]+$/, ''),\n            filename: file.name,\n            base64: dataUrl.split(',')[1]\n        });\n    };\n    const addToBlobCache = (editor) => (blobInfo) => {\n        editor.editorUpload.blobCache.add(blobInfo);\n    };\n    const alertErr = (editor) => (message, callback) => {\n        editor.windowManager.alert(message, callback);\n    };\n    const normalizeCss = (editor) => (cssText) => normalizeCss$1(editor, cssText);\n    const parseStyle = (editor) => (cssText) => editor.dom.parseStyle(cssText);\n    const serializeStyle = (editor) => (stylesArg, name) => editor.dom.serializeStyle(stylesArg, name);\n    const uploadImage = (editor) => (blobInfo) => global$1(editor).upload([blobInfo], false).then((results) => {\n        var _a;\n        if (results.length === 0) {\n            return Promise.reject('Failed to upload image');\n        }\n        else if (results[0].status === false) {\n            return Promise.reject((_a = results[0].error) === null || _a === void 0 ? void 0 : _a.message);\n        }\n        else {\n            return results[0];\n        }\n    });\n    const Dialog = (editor) => {\n        const helpers = {\n            imageSize: imageSize(editor),\n            addToBlobCache: addToBlobCache(editor),\n            createBlobCache: createBlobCache(editor),\n            alertErr: alertErr(editor),\n            normalizeCss: normalizeCss(editor),\n            parseStyle: parseStyle(editor),\n            serializeStyle: serializeStyle(editor),\n            uploadImage: uploadImage(editor)\n        };\n        const open = () => {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            collect(editor)\n                .then((info) => {\n                const state = createState(info);\n                return {\n                    title: 'Insert/Edit Image',\n                    size: 'normal',\n                    body: makeDialogBody(info),\n                    buttons: [\n                        {\n                            type: 'cancel',\n                            name: 'cancel',\n                            text: 'Cancel'\n                        },\n                        {\n                            type: 'submit',\n                            name: 'save',\n                            text: 'Save',\n                            primary: true\n                        }\n                    ],\n                    initialData: fromImageData(info.image),\n                    onSubmit: submitHandler(editor, info, helpers),\n                    onChange: changeHandler(helpers, info, state),\n                    onClose: closeHandler(state)\n                };\n            })\n                .then(editor.windowManager.open);\n        };\n        return {\n            open\n        };\n    };\n\n    const register$1 = (editor) => {\n        editor.addCommand('mceImage', Dialog(editor).open);\n        // TODO: This command is likely to be short lived we only need it until we expose the rtc model though a new api so it shouldn't be documented\n        // it's just a command since that is a convenient method for the rtc plugin to override the default dom mutation behaviour\n        editor.addCommand('mceUpdateImage', (_ui, data) => {\n            editor.undoManager.transact(() => insertOrUpdateImage(editor, data));\n        });\n    };\n\n    const hasImageClass = (node) => {\n        const className = node.attr('class');\n        return isNonNullable(className) && /\\bimage\\b/.test(className);\n    };\n    const toggleContentEditableState = (state) => (nodes) => {\n        let i = nodes.length;\n        const toggleContentEditable = (node) => {\n            node.attr('contenteditable', state ? 'true' : null);\n        };\n        while (i--) {\n            const node = nodes[i];\n            if (hasImageClass(node)) {\n                node.attr('contenteditable', state ? 'false' : null);\n                global.each(node.getAll('figcaption'), toggleContentEditable);\n            }\n        }\n    };\n    const setup = (editor) => {\n        editor.on('PreInit', () => {\n            editor.parser.addNodeFilter('figure', toggleContentEditableState(true));\n            editor.serializer.addNodeFilter('figure', toggleContentEditableState(false));\n        });\n    };\n\n    const onSetupEditable = (editor) => (api) => {\n        const nodeChanged = () => {\n            api.setEnabled(editor.selection.isEditable());\n        };\n        editor.on('NodeChange', nodeChanged);\n        nodeChanged();\n        return () => {\n            editor.off('NodeChange', nodeChanged);\n        };\n    };\n    const register = (editor) => {\n        editor.ui.registry.addToggleButton('image', {\n            icon: 'image',\n            tooltip: 'Insert/edit image',\n            onAction: Dialog(editor).open,\n            onSetup: (buttonApi) => {\n                // Set the initial state and then bind to selection changes to update the state when the selection changes\n                buttonApi.setActive(isNonNullable(getSelectedImage(editor)));\n                const unbindSelectorChanged = editor.selection.selectorChangedWithUnbind('img:not([data-mce-object]):not([data-mce-placeholder]),figure.image', buttonApi.setActive).unbind;\n                const unbindEditable = onSetupEditable(editor)(buttonApi);\n                return () => {\n                    unbindSelectorChanged();\n                    unbindEditable();\n                };\n            }\n        });\n        editor.ui.registry.addMenuItem('image', {\n            icon: 'image',\n            text: 'Image...',\n            onAction: Dialog(editor).open,\n            onSetup: onSetupEditable(editor)\n        });\n        editor.ui.registry.addContextMenu('image', {\n            update: (element) => editor.selection.isEditable() && (isFigure(element) || (isImage(element) && !isPlaceholderImage(element))) ? ['image'] : []\n        });\n    };\n\n    var Plugin = () => {\n        global$4.add('image', (editor) => {\n            register$2(editor);\n            setup(editor);\n            register(editor);\n            register$1(editor);\n        });\n    };\n\n    Plugin();\n    /** *****\n     * DO NOT EXPORT ANYTHING\n     *\n     * IF YOU DO ROLLUP WILL LEAVE A GLOBAL ON THE PAGE\n     *******/\n\n})();\n"],"names":["global$4","tinymce","util","Tools","resolve","getPrototypeOf","Object","hasProto","v","constructor","predicate","_a","prototype","name","isType","type","value","x","t","Array","isArray","String","o","proto","isPrototypeOf","typeOf","isSimpleType","isString","isObject","isPlainObject","is","isNull","a","isBoolean","isNonNullable","isNullable","isFunction","isNumber","noop","Optional","tag","this","some","none","singletonNone","fold","onNone","onSome","isSome","isNone","map","mapper","bind","binder","exists","forall","filter","getOr","replacement","or","getOrThunk","thunk","orThunk","getOrDie","message","Error","from","getOrNull","getOrUndefined","each","worker","toArray","toString","slice","nativePush","push","flatten","xs","r","i","len","length","apply","head","get","keys","hasOwnProperty","internalFilter","obj","pred","onTrue","onFalse","f","props","k","has","key","call","deepMerge","merger","old","nu","objects","ret","j","curObject","isNotEmpty","s","fromDom","node","dom","SugarElement","fromHtml","html","scope","div","document","createElement","innerHTML","hasChildNodes","childNodes","console","error","fromTag","fromText","text","createTextNode","fromPoint","docElm","y","elementFromPoint","set","element","setAttribute","rawSet","global$3","global$2","option","editor","options","register$2","registerOption","register","processor","default","valid","isArrayOf","hasDimensions","hasAdvTab","hasUploadTab","getPrependUrl","getClassList","hasDescription","hasImageTitle","hasImageCaption","getImageList","showAccessibilityOptions","isAutomaticUploadsEnabled","parseIntAndGetMax","val1","val2","Math","max","parseInt","removePixelSuffix","replace","addPixelSuffix","test","isPlaceholderImage","imgElm","nodeName","hasAttribute","isSafeImageUrl","src","getOption","isDomSafe","allow_html_data_urls","allow_script_urls","allow_svg_data_urls","DOM","getHspace","image","style","marginLeft","marginRight","getVspace","marginTop","marginBottom","getBorder","borderWidth","getAttrib","getAttribute","hasCaption","parentNode","updateAttrib","removeAttribute","toggleCaption","figureElm","insertAfter","remove","removeFigure","create","class","appendChild","contentEditable","wrapInFigure","normalizeStyle","normalizeCss","attrValue","setSize","styles","getSize","setHspace","pxValue","setVspace","setBorder","setBorderStyle","borderStyle","getBorderStyle","isFigure","elm","getIsDecorative","getAlt","getStyleValue","data","hspace","vspace","border","read","alt","title","width","height","caption","isDecorative","updateProp","oldData","newData","setAlt","setAttrib","sugarImage","normalized","write","_name","_value","updateAlt","normalizeCss$1","cssText","mergedCss","css","margin","splitMargin","split","mergeMargins","parse","compressed","serialize","getSelectedImage","selection","getNode","getParent","select","splitTextBlock","figure","textBlockElements","schema","getTextBlockElements","_","parentElm","isValidChild","textBlock","hasNonNullableKey","undefined","getBody","insertImageAtCaret","focus","setContent","outerHTML","insertedElm","writeImageDataToSelection","syncSrcAttr","setStyle","selectImage","onload","onerror","nodeChanged","setAttribs","clientWidth","clientHeight","waitLoadImage","insertOrUpdateImage","partialData","sanitizedData","sanitizeImageData","isEmpty","setCursorLocation","deleteImage","global$1","global","getValue","item","sanitizeList","list","extractValue","out","getText","menu","items","sanitizer","extractor","findEntryDelegate","arr","findMap","isGroup","ListUtils","optList","AdvTab","_info","columns","label","inputMode","collect","urlListSanitizer","convertURL","url","futureImageList","Promise","completer","callback","imageList","fetch","then","res","ok","json","createImageList","classList","hasAdvTab$1","hasUploadTab$1","hasUploadUrl$1","hasUploadUrl","hasUploadHandler$1","hasUploadHandler","readImageDataFromSelection","hasDescription$1","hasImageTitle$1","hasDimensions$1","hasImageCaption$1","hasAccessibilityOptions","automaticUploads","prependURL","preUrl","makeItems","info","imageDescription","enabled","filetype","picker_text","useColumns","MainTab","UploadTab","fromImageData","meta","images","dimensions","classes","borderstyle","fileinput","toImageData","removeEmptyAlt","addPrependUrl","api","getData","srcURL","prependUrl","substring","addPrependUrl2","setData","formFillFromMeta","entry","formFillFromMeta2","changeSrc","helpers","state","imageSize","size","open","catch","e","calculateImageSize","prevImage","updateImagesDropdown","changeFileInput","block","unblock","file","blobUri","URL","createObjectURL","finalize","revokeObjectURL","updateSrcAndSwitchTab","showTab","blob","reject","reader","FileReader","result","readAsDataURL","dataUrl","blobInfo","createBlobCache","uploadImage","err","alertErr","addToBlobCache","changeHandler","evt","img","prevAlt","changeImages","setEnabled","closeHandler","makeDialogBody","tabs","submitHandler","finalData","execCommand","editorUpload","uploadImagesAuto","close","done","removeChild","addEventListener","visibility","position","bottom","left","body","getImageSize","documentBaseURI","toAbsolute","blobCache","filename","base64","add","windowManager","alert","parseStyle","serializeStyle","stylesArg","upload","results","status","Dialog","createState","buttons","primary","initialData","onSubmit","onChange","onClose","hasImageClass","className","attr","toggleContentEditableState","nodes","toggleContentEditable","getAll","onSetupEditable","isEditable","on","off","parser","addNodeFilter","serializer","setup","ui","registry","addToggleButton","icon","tooltip","onAction","onSetup","buttonApi","setActive","unbindSelectorChanged","selectorChangedWithUnbind","unbind","unbindEditable","addMenuItem","addContextMenu","update","addCommand","_ui","undoManager","transact","register$1"],"sourceRoot":""}