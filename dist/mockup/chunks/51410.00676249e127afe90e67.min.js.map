{"version":3,"file":"chunks/51410.00676249e127afe90e67.min.js","mappings":"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","sources":["webpack://@plone/mockup/./src/pat/contentbrowser/src/utils.js","webpack://@plone/mockup/./src/pat/contentbrowser/src/SelectedItem.svelte?73f0","webpack://@plone/mockup/SelectedItem.svelte","webpack://@plone/mockup/./src/pat/contentbrowser/src/SelectedItem.svelte"],"sourcesContent":["import logger from \"@patternslib/patternslib/src/core/logging\";\nimport utils from \"../../../core/utils.js\";\nimport I18n from \"../../../core/i18n.js\";\n\nconst log = logger.getLogger(\"pat-contentbrowser\");\n\nexport async function request({\n    method = \"GET\",\n    vocabularyUrl = null,\n    attributes = [],\n    path = null,\n    uids = null,\n    searchTerm = null,\n    searchIndex = \"SearchableText\",\n    searchPath = null,\n    levelInfoPath = null,\n    selectableTypes = [],\n    browseableTypes = [],\n    pageSize = 100,\n    page = 1,\n}) {\n    let vocabQuery = {\n        criteria: [],\n    };\n    if (path) {\n        // query sublevel of path\n        vocabQuery = {\n            criteria: [\n                {\n                    i: \"path\",\n                    o: \"plone.app.querystring.operation.string.path\",\n                    v: `${path}::1`,\n                },\n            ],\n            sort_on: \"getObjPositionInParent\",\n            sort_order: \"ascending\",\n        };\n        if (selectableTypes.length) {\n            // we need to append browseableTypes here in order to\n            // preserve browsing subitems\n            vocabQuery.criteria.push({\n                i: \"portal_type\",\n                o: \"plone.app.querystring.operation.list.contains\",\n                v: selectableTypes.concat(browseableTypes),\n            })\n        }\n    }\n    if (levelInfoPath) {\n        // query exact path\n        vocabQuery = {\n            criteria: [\n                {\n                    i: \"path\",\n                    o: \"plone.app.querystring.operation.string.path\",\n                    v: `${levelInfoPath}::0`,\n                },\n            ],\n        };\n    }\n    if (searchPath) {\n        // search from searchPath down\n        vocabQuery = {\n            criteria: [\n                {\n                    i: \"path\",\n                    o: \"plone.app.querystring.operation.string.path\",\n                    v: searchPath,\n                },\n            ],\n        };\n        if (selectableTypes.length) {\n            vocabQuery.criteria.push({\n                i: \"portal_type\",\n                o: \"plone.app.querystring.operation.list.contains\",\n                v: selectableTypes,\n            })\n        }\n    }\n    if (uids) {\n        vocabQuery = {\n            criteria: [\n                {\n                    i: \"UID\",\n                    o: \"plone.app.querystring.operation.list.contains\",\n                    v: uids,\n                },\n            ],\n        };\n    }\n    if (searchTerm) {\n        vocabQuery.criteria.push({\n            i: searchIndex,\n            o: \"plone.app.querystring.operation.string.contains\",\n            v: searchTerm,\n\n        })\n    }\n\n    if (!vocabQuery.criteria.length) {\n        return {\n            results: [],\n            total: 0,\n        }\n    };\n    const url_query = JSON.stringify(vocabQuery);\n    const url_parameters = JSON.stringify(attributes);\n    const url_batch = JSON.stringify({\n        page: page,\n        size: pageSize,\n    });\n\n    const url = encodeURI(`${vocabularyUrl}${vocabularyUrl.indexOf(\"?\") !== -1 ? \"&\" : \"?\"}query=${url_query}&attributes=${url_parameters}&batch=${url_batch}`);\n    log.debug(url);\n\n    const headers = new Headers();\n    headers.set(\"Accept\", \"application/json\");\n\n    const response = await fetch(url, {\n        method: method,\n        headers: headers,\n    });\n\n    if (!response.ok) {\n        return {\n            results: [],\n            total: 0,\n            errors: json.errors,\n        };\n    }\n\n    const json = await response.json();\n\n    if (!searchPath && !levelInfoPath && selectableTypes.length) {\n        // we iter through response and filter out non-selectable\n        // types but keep folderish types to maintain browsing\n        // the content structure.\n        const filtered_response = {\n            results: [],\n            total: json.total,\n        }\n        for (const it of json.results) {\n            if (selectableTypes.indexOf(it.portal_type) != -1 || it.is_folderish) {\n                filtered_response.results.push(it);\n            }\n        }\n        return filtered_response;\n    }\n    return json;\n}\n\nexport async function get_items_from_uids(uids, config) {\n    if (!uids) {\n        return [];\n    }\n    const selectedItemsFromUids = await request({\n        vocabularyUrl: config.vocabularyUrl,\n        attributes: config.attributes,\n        uids: uids,\n    });\n    let results = (await selectedItemsFromUids?.results) || [];\n    // resort the results based on the order of uids\n    results.sort((a, b) => {\n        return uids.indexOf(a.UID) - uids.indexOf(b.UID);\n    })\n    return results;\n}\n\n\n/** use Plone resolveIcon to load a SVG icon and replace node with icon code */\nexport async function resolveIcon(node, { iconName }) {\n    async function getIcon(iconName) {\n        const icon = await utils.resolveIcon(iconName)\n        return icon;\n    }\n    const iconCode = await getIcon(iconName);\n    node.outerHTML = iconCode;\n    return {\n        destroy() { },\n    };\n}\n\n/** Dispatch event on click outside of node */\nexport function clickOutside(node) {\n    const handleClick = (event) => {\n        if (node && !node.contains(event.target)) {\n            node.dispatchEvent(new CustomEvent(\"click_outside\", node));\n        }\n    };\n\n    document.addEventListener(\"click\", handleClick, true);\n\n    return {\n        destroy() {\n            document.removeEventListener(\"click\", handleClick, true);\n        },\n    };\n}\n\nexport function recentlyUsedItems(filterItems, config) {\n    let ret = utils.storage.get(config.recentlyUsedKey) || [];\n    // hard-limit to 1000 entries\n    ret = ret.slice(ret.length - 1000, ret.length);\n    if (filterItems && config?.selectableTypes.length) {\n        ret = ret.filter((it) => {\n            return config.selectableTypes.indexOf(it.portal_type) != -1;\n        });\n    }\n    // max is applied AFTER filtering selectable items.\n    const max = parseInt(config.recentlyUsedMaxItems, 20);\n    if (max) {\n        // return the slice from the end, as we want to display newest items first.\n        ret = ret.slice(ret.length - max, ret.length);\n    }\n    return ret;\n}\n\nexport function updateRecentlyUsed(item, config) {\n    if (!config.recentlyUsed) {\n        return;\n    }\n    // add to recently added items\n    const recentlyUsed = recentlyUsedItems(false, config); // do not filter for selectable but get all. append to that list the new item.\n    const alreadyPresent = recentlyUsed.filter((it) => {\n        return it.UID === item.UID;\n    });\n    if (alreadyPresent.length > 0) {\n        recentlyUsed.splice(recentlyUsed.indexOf(alreadyPresent[0]), 1);\n    }\n    recentlyUsed.push(item);\n    utils.storage.set(config.recentlyUsedKey, recentlyUsed);\n}\n\n\nexport function formatDate(dateval) {\n    // fix underscore replacement by /mockup/src/core/i18n.js\n    // the \"wrong\" fix in i18n.js exists for use by select2 and tinymce\n    // this fix should be moved to the mockup modules of tinymce and select\n    // see: https://github.com/plone/mockup/issues/1429\n    const d = Date.parse(dateval);\n    const i18n = new I18n();\n    return new Date(d).toLocaleString(i18n.currentLanguage.replace(\"_\", \"-\"));\n}\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"../../../../node_modules/@patternslib/dev/webpack/style-inserter.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!../../../../node_modules/svelte-loader/index.js?cssPath=/home/runner/work/mockup/mockup/src/pat/contentbrowser/src/SelectedItem.svelte.0.css!./SelectedItem.svelte\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn;\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!../../../../node_modules/svelte-loader/index.js?cssPath=/home/runner/work/mockup/mockup/src/pat/contentbrowser/src/SelectedItem.svelte.0.css!./SelectedItem.svelte\";\n       export default content && content.locals ? content.locals : undefined;\n","<script>\n    import { getContext } from \"svelte\";\n    import { resolveIcon } from \"./utils\";\n\n    // item data\n    export let item;\n    export let unselectItem;\n</script>\n\n<div class=\"selected-item border border-secondary-subtle rounded p-2 mb-1 bg-body-tertiary\" data-uuid={item.UID}>\n    <div class=\"item-info\">\n        <!-- svelte-ignore a11y-missing-attribute -->\n        <button\n            class=\"btn btn-link btn-sm link-secondary\"\n            on:click|preventDefault={() => unselectItem(item.UID)}\n            ><svg use:resolveIcon={{ iconName: \"x-circle\" }} /></button\n        >\n        <div>\n            <span class=\"item-title\">{item.Title}</span><br />\n            <span class=\"small\">{item.path}</span>\n        </div>\n    </div>\n    {#if item.getURL && (item.getIcon || item.portal_type === \"Image\")}<img\n            src=\"{item.getURL}/@@images/image/mini\"\n            alt={item.Title}\n        />{/if}\n</div>\n\n<style>\n    .selected-item {\n        display: flex;\n        flex-wrap: nowrap;\n        align-items: start;\n        justify-content: space-between;\n        cursor: move;\n    }\n    .selected-item > * {\n        margin-right: 0.5rem;\n        display: block;\n    }\n    .selected-item button {\n        cursor: pointer;\n        padding: 0 0.375rem 0.374rem 0;\n    }\n    .selected-item .item-info {\n        display: flex;\n        align-items: start;\n    }\n    .selected-item > img {\n        object-fit: cover;\n        width: 95px;\n        height: 95px;\n    }\n</style>\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".selected-item.svelte-b5z3s7.svelte-b5z3s7{display:flex;flex-wrap:nowrap;align-items:start;justify-content:space-between;cursor:move}.selected-item.svelte-b5z3s7>.svelte-b5z3s7{margin-right:.5rem;display:block}.selected-item.svelte-b5z3s7 button.svelte-b5z3s7{cursor:pointer;padding:0 .375rem .374rem 0}.selected-item.svelte-b5z3s7 .item-info.svelte-b5z3s7{display:flex;align-items:start}.selected-item.svelte-b5z3s7>img.svelte-b5z3s7{object-fit:cover;width:95px;height:95px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pat/contentbrowser/src/SelectedItem.svelte\"],\"names\":[],\"mappings\":\"AAAA,2CAAA,YAAA,CAAA,gBAAA,CAAA,iBAAA,CAAA,6BAAA,CAAA,WAAA,CAAA,4CAAA,kBAAA,CAAA,aAAA,CAAA,kDAAA,cAAA,CAAA,2BAAA,CAAA,sDAAA,YAAA,CAAA,iBAAA,CAAA,+CAAA,gBAAA,CAAA,UAAA,CAAA,WAAA\",\"sourcesContent\":[\".selected-item.svelte-b5z3s7.svelte-b5z3s7{display:flex;flex-wrap:nowrap;align-items:start;justify-content:space-between;cursor:move}.selected-item.svelte-b5z3s7>.svelte-b5z3s7{margin-right:0.5rem;display:block}.selected-item.svelte-b5z3s7 button.svelte-b5z3s7{cursor:pointer;padding:0 0.375rem 0.374rem 0}.selected-item.svelte-b5z3s7 .item-info.svelte-b5z3s7{display:flex;align-items:start}.selected-item.svelte-b5z3s7>img.svelte-b5z3s7{object-fit:cover;width:95px;height:95px}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VsZWN0ZWRJdGVtLnN2ZWx0ZSIsInNvdXJjZXMiOlsiU2VsZWN0ZWRJdGVtLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuICAgIGltcG9ydCB7IGdldENvbnRleHQgfSBmcm9tIFwic3ZlbHRlXCI7XG4gICAgaW1wb3J0IHsgcmVzb2x2ZUljb24gfSBmcm9tIFwiLi91dGlsc1wiO1xuXG4gICAgLy8gaXRlbSBkYXRhXG4gICAgZXhwb3J0IGxldCBpdGVtO1xuICAgIGV4cG9ydCBsZXQgdW5zZWxlY3RJdGVtO1xuPC9zY3JpcHQ+XG5cbjxkaXYgY2xhc3M9XCJzZWxlY3RlZC1pdGVtIGJvcmRlciBib3JkZXItc2Vjb25kYXJ5LXN1YnRsZSByb3VuZGVkIHAtMiBtYi0xIGJnLWJvZHktdGVydGlhcnlcIiBkYXRhLXV1aWQ9e2l0ZW0uVUlEfT5cbiAgICA8ZGl2IGNsYXNzPVwiaXRlbS1pbmZvXCI+XG4gICAgICAgIDwhLS0gc3ZlbHRlLWlnbm9yZSBhMTF5LW1pc3NpbmctYXR0cmlidXRlIC0tPlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICBjbGFzcz1cImJ0biBidG4tbGluayBidG4tc20gbGluay1zZWNvbmRhcnlcIlxuICAgICAgICAgICAgb246Y2xpY2t8cHJldmVudERlZmF1bHQ9eygpID0+IHVuc2VsZWN0SXRlbShpdGVtLlVJRCl9XG4gICAgICAgICAgICA+PHN2ZyB1c2U6cmVzb2x2ZUljb249e3sgaWNvbk5hbWU6IFwieC1jaXJjbGVcIiB9fSAvPjwvYnV0dG9uXG4gICAgICAgID5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiaXRlbS10aXRsZVwiPntpdGVtLlRpdGxlfTwvc3Bhbj48YnIgLz5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwic21hbGxcIj57aXRlbS5wYXRofTwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgeyNpZiBpdGVtLmdldFVSTCAmJiAoaXRlbS5nZXRJY29uIHx8IGl0ZW0ucG9ydGFsX3R5cGUgPT09IFwiSW1hZ2VcIil9PGltZ1xuICAgICAgICAgICAgc3JjPVwie2l0ZW0uZ2V0VVJMfS9AQGltYWdlcy9pbWFnZS9taW5pXCJcbiAgICAgICAgICAgIGFsdD17aXRlbS5UaXRsZX1cbiAgICAgICAgLz57L2lmfVxuPC9kaXY+XG5cbjxzdHlsZT5cbiAgICAuc2VsZWN0ZWQtaXRlbSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtd3JhcDogbm93cmFwO1xuICAgICAgICBhbGlnbi1pdGVtczogc3RhcnQ7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgY3Vyc29yOiBtb3ZlO1xuICAgIH1cbiAgICAuc2VsZWN0ZWQtaXRlbSA+ICoge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDAuNXJlbTtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICAgIC5zZWxlY3RlZC1pdGVtIGJ1dHRvbiB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgcGFkZGluZzogMCAwLjM3NXJlbSAwLjM3NHJlbSAwO1xuICAgIH1cbiAgICAuc2VsZWN0ZWQtaXRlbSAuaXRlbS1pbmZvIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IHN0YXJ0O1xuICAgIH1cbiAgICAuc2VsZWN0ZWQtaXRlbSA+IGltZyB7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICB3aWR0aDogOTVweDtcbiAgICAgICAgaGVpZ2h0OiA5NXB4O1xuICAgIH1cbjwvc3R5bGU+XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkJJLDBDQUFlLENBQ1gsT0FBTyxDQUFFLElBQUksQ0FDYixTQUFTLENBQUUsTUFBTSxDQUNqQixXQUFXLENBQUUsS0FBSyxDQUNsQixlQUFlLENBQUUsYUFBYSxDQUM5QixNQUFNLENBQUUsSUFDWixDQUNBLDRCQUFjLENBQUcsY0FBRSxDQUNmLFlBQVksQ0FBRSxNQUFNLENBQ3BCLE9BQU8sQ0FBRSxLQUNiLENBQ0EsNEJBQWMsQ0FBQyxvQkFBTyxDQUNsQixNQUFNLENBQUUsT0FBTyxDQUNmLE9BQU8sQ0FBRSxDQUFDLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUNqQyxDQUNBLDRCQUFjLENBQUMsd0JBQVcsQ0FDdEIsT0FBTyxDQUFFLElBQUksQ0FDYixXQUFXLENBQUUsS0FDakIsQ0FDQSw0QkFBYyxDQUFHLGlCQUFJLENBQ2pCLFVBQVUsQ0FBRSxLQUFLLENBQ2pCLEtBQUssQ0FBRSxJQUFJLENBQ1gsTUFBTSxDQUFFLElBQ1oifQ==*/\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["log","logger","getLogger","async","request","_ref","method","vocabularyUrl","attributes","path","uids","searchTerm","searchIndex","searchPath","levelInfoPath","selectableTypes","browseableTypes","pageSize","page","vocabQuery","criteria","i","o","v","sort_on","sort_order","length","push","concat","results","total","url_query","JSON","stringify","url_parameters","url_batch","size","url","encodeURI","indexOf","debug","headers","Headers","set","response","fetch","ok","errors","json","filtered_response","it","portal_type","is_folderish","get_items_from_uids","config","selectedItemsFromUids","sort","a","b","UID","resolveIcon","node","_ref2","iconName","iconCode","utils","getIcon","outerHTML","destroy","clickOutside","handleClick","event","contains","target","dispatchEvent","CustomEvent","document","addEventListener","removeEventListener","recentlyUsedItems","filterItems","ret","storage","get","recentlyUsedKey","slice","filter","max","parseInt","recentlyUsedMaxItems","updateRecentlyUsed","item","recentlyUsed","alreadyPresent","splice","formatDate","dateval","d","Date","parse","i18n","I18n","toLocaleString","currentLanguage","replace","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","getURL","Title","unselectItem","___CSS_LOADER_EXPORT___","module","id"],"sourceRoot":""}